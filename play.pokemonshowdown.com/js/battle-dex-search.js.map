{"version":3,"file":"battle-dex-search.js","names":["DexSearch","searchType","arguments","length","undefined","formatid","species","query","dex","Dex","typedSearch","results","prependResults","exactMatch","firstPokemonColumn","sortCol","reverseSort","filters","setType","_proto","prototype","getTypedSearch","format","speciesOrSet","BattlePokemonSearch","BattleItemSearch","BattleMoveSearch","BattleAbilitySearch","BattleTypeSearch","BattleCategorySearch","find","toID","_this$typedSearch","getResults","concat","textSearch","_this$typedSearch2","capitalizeFirst","str","charAt","toUpperCase","slice","addFilter","entry","type","includes","abilities","get","name","tierTable","uber","caplc","capnfe","_i2","_this$filters2","filter","push","removeFilter","filterid","join","deleted","i","splice","pop","toggleSort","filterLabel","filterType","illegalLabel","id","_this$typedSearch3","illegalReasons","getTier","_this$typedSearch4","_this$typedSearch5","_this$typedSearch6","searchTypeIndex","typeTable","qFilterType","endsWith","window","BattleTypeChart","getClosest","BattleSearchIndex","passType","searchPasses","queryAlias","BattleAliases","startsWith","aliasPassType","unshift","substr","matchLength","matchQuery","bufs","topbufIndex","count","nearMatch","instafilter","instafilterSort","illegal","searchPass","shift","typeIndex","matchStart","matchEnd","originalIndex","BattleSearchIndexOffset","charCodeAt","typeName","curBufLength","topbuf","Array","apply","fType","fId","_this$typedSearch7","buf","illegalBuf","BattlePokedex","types","ability","hasAbility","BattleMovedex","category","left","right","mid","Math","floor","pokemon","tier","move","item","egggroup","article","BattleTypedSearch","set","formatType","isDoubles","baseResults","baseIllegalResults","sortRow","gen","Number","forGen","mod","_proto2","_this","_illegalResults","getDefaultResults","call","getBaseResults","legalityFilter","_i4","_this$baseResults2","_ref","resultType","value","getTable","illegalResults","_i6","_this$baseResults4","result","_i8","_this$baseIllegalResu2","defaultFilter","_ref2","rowType","sort","_ref3","firstLearnsetid","speciesid","_this$formatType","table","BattleTeambuilderTable","learnsets","exists","baseLearnsetid","baseSpecies","battleOnly","nextLearnsetid","learnsetid","checkingMoves","lsetSpecies","next","changesFrom","prevo","baseEvo","canLearn","moveid","moves","isNonstandard","genChar","_this$formatType2","learnset","eggMovesOnly","_table","num","String","tableKey","overrideTier","child","father","_BattleTypedSearch2","_this2","_len","args","_key","_inheritsLoose","_proto3","_this$formatType3","_this$formatType4","_this$formatType5","_this$formatType6","_this$formatType7","_this$formatType8","_this3","_this$formatType10","isVGCOrBS","isHackmons","isDoublesOrBS","tierSet","tiers","map","r","slices","formatSlices","Uber","_this$formatType9","Regular","_ref4","_ref5","tags","OU","UUBL","UU","RU","NU","PU","ZU","LC","AG","DUber","DOU","DUU","DNU","ubersUUBans","_ref6","ndDoublesBans","_ref7","thirtyfivePokes","_ref8","monotypeBans","_ref9","gen5zuBans","_ref10","gen4puBans","_ref11","test","_ref12","row","_i10","_ref13","eggGroups","_this4","sortOrder","_ref14","_ref15","rowType1","id1","rowType2","id2","stat1","baseStats","stat2","_ref16","_ref17","base1","base2","bst1","hp","atk","def","spa","spd","spe","bst2","_ref18","_ref19","name1","name2","Error","_BattleTypedSearch3","_proto4","BattleAbilities","reverse","isAAA","abilitySet","isMega","goodAbilities","poorAbilities","badAbilities","_i12","_abilities$sort$map2","abil","rating","_i14","_ref20","_BattleTypedSearch4","_proto5","BattleItems","_this$formatType11","_this$formatType12","itemSet","items","_this$set","speciesName","speciesSpecific","abilitySpecific","abilityItem","protosynthesis","quarkdrive","_i16","_item$itemUser","itemUser","nfe","findIndex","_BattleTypedSearch5","_this5","_len2","_key2","_proto6","moveIsNotUseless","_this$formatType13","abilityid","itemid","weightkg","evos","GOOD_DOUBLES_MOVES","status","GOOD_STATUS_MOVES","basePower","GOOD_WEAK_MOVES","flags","BAD_STRONG_MOVES","_this$formatType14","_this$formatType15","_this$formatType16","_this$formatType17","isSTABmons","isTradebacks","regionBornLegality","sketchMoves","sketch","lsetTable","_this$formatType18","_BattleTeambuilderTab","_this$formatType19","_BattleTeambuilderTab2","_this$formatType20","_BattleTeambuilderTab3","learnsetEntry","minGenCode","nonstandardMoves","isMax","isZ","speciesTypes","moveTypes","genDex","prevoSpecies","excludedForme","s","forme","otherFormes","_i18","_baseSpecies$otherFor2","formeName","valid","_i20","usableMoves","uselessMoves","_i22","_moves2","isUsable","_i24","_i26","_ref21","_this6","powerTable","frustration","spitup","trumpcard","naturalgift","grassknot","lowkick","gyroball","electroball","flail","reversal","present","wringout","crushgrip","heatcrash","heavyslam","fling","magnitude","beatup","punishment","psywave","nightshade","seismictoss","dragonrage","sonicboom","superfang","endeavor","sheercold","fissure","horndrill","guillotine","_ref22","_ref23","move1","move2","pow1","pow2","_ref24","_ref25","accuracy1","accuracy","accuracy2","_ref26","_ref27","pp1","pp","pp2","_ref28","_ref29","_BattleTypedSearch6","_proto7","physical","special","_BattleTypedSearch7","_proto8"],"sources":["../src/battle-dex-search.ts"],"sourcesContent":["/**\n * Search\n *\n * Code for searching for dex information, used by the Dex and\n * Teambuilder.\n *\n * Dependencies: battledata, search-index\n * Optional dependencies: pokedex, moves, items, abilities\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\nimport { Dex, type ModdedDex, toID, type ID } from \"./battle-dex\";\n\nexport type SearchType = (\n\t'pokemon' | 'type' | 'tier' | 'move' | 'item' | 'ability' | 'egggroup' | 'category' | 'article'\n);\n\nexport type SearchRow = (\n\t[SearchType, ID, number?, number?] | ['sortpokemon' | 'sortmove', ''] | ['header' | 'html', string]\n);\n\ntype SearchFilter = [string, string];\n\n/** ID, SearchType, index (if alias), offset (if offset alias) */\ndeclare const BattleSearchIndex: [ID, SearchType, number?, number?][];\ndeclare const BattleSearchIndexOffset: any;\ndeclare const BattleTeambuilderTable: any;\n\n/**\n * Backend for search UIs.\n */\nexport class DexSearch {\n\tquery = '';\n\n\t/**\n\t * Dex for the mod/generation to search.\n\t */\n\tdex: ModdedDex = Dex;\n\n\ttypedSearch: BattleTypedSearch<SearchType> | null = null;\n\n\tresults: SearchRow[] | null = null;\n\tprependResults: SearchRow[] | null = null;\n\texactMatch = false;\n\n\tstatic typeTable = {\n\t\tpokemon: 1,\n\t\ttype: 2,\n\t\ttier: 3,\n\t\tmove: 4,\n\t\titem: 5,\n\t\tability: 6,\n\t\tegggroup: 7,\n\t\tcategory: 8,\n\t\tarticle: 9,\n\t};\n\tstatic typeName = {\n\t\tpokemon: 'Pok\\u00e9mon',\n\t\ttype: 'Type',\n\t\ttier: 'Tiers',\n\t\tmove: 'Moves',\n\t\titem: 'Items',\n\t\tability: 'Abilities',\n\t\tegggroup: 'Egg group',\n\t\tcategory: 'Category',\n\t\tarticle: 'Article',\n\t};\n\tfirstPokemonColumn: 'Tier' | 'Number' = 'Number';\n\n\t/**\n\t * Column to sort by. Default is `null`, a smart sort determined by how good\n\t * things are according to the base filters, falling back to dex number (for\n\t * Pokemon) and name (for everything else).\n\t */\n\tsortCol: string | null = null;\n\treverseSort = false;\n\n\t/**\n\t * Filters for the search result. Does not include the two base filters\n\t * (format and species).\n\t */\n\tfilters: SearchFilter[] | null = null;\n\n\tconstructor(searchType: SearchType | '' = '', formatid = '' as ID, species = '' as ID) {\n\t\tthis.setType(searchType, formatid, species);\n\t}\n\n\tgetTypedSearch(searchType: SearchType | '', format = '' as ID, speciesOrSet: ID | Dex.PokemonSet = '' as ID) {\n\t\tif (!searchType) return null;\n\t\tswitch (searchType) {\n\t\tcase 'pokemon': return new BattlePokemonSearch('pokemon', format, speciesOrSet);\n\t\tcase 'item': return new BattleItemSearch('item', format, speciesOrSet);\n\t\tcase 'move': return new BattleMoveSearch('move', format, speciesOrSet);\n\t\tcase 'ability': return new BattleAbilitySearch('ability', format, speciesOrSet);\n\t\tcase 'type': return new BattleTypeSearch('type', format, speciesOrSet);\n\t\tcase 'category': return new BattleCategorySearch('category', format, speciesOrSet);\n\t\t}\n\t\treturn null;\n\t}\n\n\tfind(query: string) {\n\t\tquery = toID(query);\n\t\tif (this.query === query && this.results) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.query = query;\n\t\tif (!query) {\n\t\t\tthis.results = this.typedSearch?.getResults(this.filters, this.sortCol, this.reverseSort) || [];\n\t\t\tif (!this.filters && !this.sortCol && this.prependResults) {\n\t\t\t\tthis.results = [...this.prependResults, ...this.results];\n\t\t\t}\n\t\t} else {\n\t\t\tthis.results = this.textSearch(query);\n\t\t}\n\t\treturn true;\n\t}\n\n\tsetType(searchType: SearchType | '', format = '' as ID, speciesOrSet: ID | Dex.PokemonSet = '' as ID) {\n\t\t// invalidate caches\n\t\tthis.results = null;\n\n\t\tif (searchType !== this.typedSearch?.searchType) {\n\t\t\tthis.filters = null;\n\t\t\tthis.sortCol = null;\n\t\t}\n\t\tthis.typedSearch = this.getTypedSearch(searchType, format, speciesOrSet);\n\t\tif (this.typedSearch) this.dex = this.typedSearch.dex;\n\t}\n\n\tcapitalizeFirst(str: string) {\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t}\n\taddFilter(entry: SearchFilter | SearchRow): boolean {\n\t\tif (!this.typedSearch) return false;\n\t\tlet [type] = entry;\n\t\tif (this.typedSearch.searchType === 'pokemon') {\n\t\t\tif (type === this.sortCol) this.sortCol = null;\n\t\t\tif (!['type', 'move', 'ability', 'egggroup', 'tier'].includes(type)) return false;\n\t\t\tif (type === 'type') entry[1] = this.capitalizeFirst(entry[1]);\n\t\t\tif (type === 'move') entry[1] = toID(entry[1]);\n\t\t\tif (type === 'ability') entry[1] = this.dex.abilities.get(entry[1]).name;\n\t\t\tif (type === 'tier') {\n\t\t\t\t// very hardcode\n\t\t\t\tconst tierTable: { [id: string]: string } = {\n\t\t\t\t\tuber: \"Uber\",\n\t\t\t\t\tcaplc: \"CAP LC\",\n\t\t\t\t\tcapnfe: \"CAP NFE\",\n\t\t\t\t};\n\t\t\t\tentry[1] = toID(entry[1]);\n\t\t\t\tentry[1] = tierTable[entry[1]] || entry[1].toUpperCase();\n\t\t\t}\n\t\t\tif (!this.filters) this.filters = [];\n\t\t\tthis.results = null;\n\t\t\tfor (const filter of this.filters) {\n\t\t\t\tif (filter[0] === type && filter[1] === entry[1]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.filters.push(entry.slice(0, 2) as SearchFilter);\n\t\t\treturn true;\n\t\t} else if (this.typedSearch.searchType === 'move') {\n\t\t\tif (type === this.sortCol) this.sortCol = null;\n\t\t\tif (!['type', 'category', 'pokemon'].includes(type)) return false;\n\t\t\tif (type === 'type') entry[1] = this.capitalizeFirst(entry[1]);\n\t\t\tif (type === 'category') entry[1] = this.capitalizeFirst(entry[1]);\n\t\t\tif (type === 'pokemon') entry[1] = toID(entry[1]);\n\t\t\tif (!this.filters) this.filters = [];\n\t\t\tthis.filters.push(entry.slice(0, 2) as SearchFilter);\n\t\t\tthis.results = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tremoveFilter(entry?: SearchFilter): boolean {\n\t\tif (!this.filters) return false;\n\t\tif (entry) {\n\t\t\tconst filterid = entry.join(':');\n\t\t\tlet deleted: string[] | null = null;\n\t\t\t// delete specific filter\n\t\t\tfor (let i = 0; i < this.filters.length; i++) {\n\t\t\t\tif (filterid === this.filters[i].join(':')) {\n\t\t\t\t\tdeleted = this.filters[i];\n\t\t\t\t\tthis.filters.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!deleted) return false;\n\t\t} else {\n\t\t\tthis.filters.pop();\n\t\t}\n\t\tif (!this.filters.length) this.filters = null;\n\t\tthis.results = null;\n\t\treturn true;\n\t}\n\n\ttoggleSort(sortCol: string) {\n\t\tif (this.sortCol === sortCol) {\n\t\t\tif (!this.reverseSort) {\n\t\t\t\tthis.reverseSort = true;\n\t\t\t} else {\n\t\t\t\tthis.sortCol = null;\n\t\t\t\tthis.reverseSort = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.sortCol = sortCol;\n\t\t\tthis.reverseSort = false;\n\t\t}\n\t\tthis.results = null;\n\t}\n\n\tfilterLabel(filterType: string) {\n\t\tif (this.typedSearch && this.typedSearch.searchType !== filterType) {\n\t\t\treturn 'Filter';\n\t\t}\n\t\treturn null;\n\t}\n\tillegalLabel(id: ID) {\n\t\treturn this.typedSearch?.illegalReasons?.[id] || null;\n\t}\n\n\tgetTier(species: Dex.Species) {\n\t\treturn this.typedSearch?.getTier(species) || '';\n\t}\n\n\ttextSearch(query: string): SearchRow[] {\n\t\tquery = toID(query);\n\n\t\tthis.exactMatch = false;\n\t\tlet searchType: SearchType | '' = this.typedSearch?.searchType || '';\n\n\t\t// If searchType exists, we're searching mainly for results of that type.\n\t\t// We'll still search for results of other types, but those results\n\t\t// will only be used to filter results for that type.\n\t\tlet searchTypeIndex = (searchType ? DexSearch.typeTable[searchType] : -1);\n\n\t\t/** searching for \"Psychic type\" will make the type come up over the move */\n\t\tlet qFilterType: 'type' | '' = '';\n\t\tif (query.endsWith('type')) {\n\t\t\tif (query.slice(0, -4) in window.BattleTypeChart) {\n\t\t\t\tquery = query.slice(0, -4);\n\t\t\t\tqFilterType = 'type';\n\t\t\t}\n\t\t}\n\n\t\t// i represents the location of the search index we're looking at\n\t\tlet i = DexSearch.getClosest(query);\n\t\tthis.exactMatch = (BattleSearchIndex[i][0] === query);\n\n\t\t// Even with output buffer buckets, we make multiple passes through\n\t\t// the search index. searchPasses is a queue of which pass we're on:\n\t\t// [passType, i, query]\n\n\t\t// By doing an alias pass after the normal pass, we ensure that\n\t\t// mid-word matches only display after start matches.\n\t\tlet passType: SearchPassType | '' = '';\n\t\t/**\n\t\t * pass types:\n\t\t * * '': time to pop the next pass off the searchPasses queue\n\t\t * * 'normal': start at i and stop when results no longer start with query\n\t\t * * 'alias': like normal, but output aliases instead of non-alias results\n\t\t * * 'fuzzy': start at i and stop when you have two results\n\t\t * * 'exact': like normal, but stop at i\n\t\t */\n\t\ttype SearchPassType = 'normal' | 'alias' | 'fuzzy' | 'exact';\n\t\t/**\n\t\t * [passType, i, query]\n\t\t *\n\t\t * i = index of BattleSearchIndex to start from\n\t\t *\n\t\t * By doing an alias pass after the normal pass, we ensure that\n\t\t * mid-word matches only display after start matches.\n\t\t */\n\t\ttype SearchPass = [SearchPassType, number, string];\n\t\tlet searchPasses: SearchPass[] = [['normal', i, query]];\n\n\t\t// For performance reasons, only do an alias pass if query is at\n\t\t// least 2 chars long\n\t\tif (query.length > 1) searchPasses.push(['alias', i, query]);\n\n\t\t// If the query matches an official alias in BattleAliases: These are\n\t\t// different from the aliases in the search index and are given\n\t\t// higher priority. We'll do a normal pass through the index with\n\t\t// the alias text before any other passes.\n\t\tlet queryAlias;\n\t\tif (query in BattleAliases) {\n\t\t\tif (['sub', 'tr'].includes(query) || !toID(BattleAliases[query]).startsWith(query)) {\n\t\t\t\tqueryAlias = toID(BattleAliases[query]);\n\t\t\t\tlet aliasPassType: SearchPassType = (queryAlias === 'hiddenpower' ? 'exact' : 'normal');\n\t\t\t\tsearchPasses.unshift([aliasPassType, DexSearch.getClosest(queryAlias), queryAlias]);\n\t\t\t}\n\t\t\tthis.exactMatch = true;\n\t\t}\n\n\t\t// If there are no matches starting with query: Do a fuzzy match pass\n\t\t// Fuzzy matches will still be shown after alias matches\n\t\tif (!this.exactMatch && BattleSearchIndex[i][0].substr(0, query.length) !== query) {\n\t\t\t// No results start with this. Do a fuzzy match pass.\n\t\t\tlet matchLength = query.length - 1;\n\t\t\tif (!i) i++;\n\t\t\twhile (matchLength &&\n\t\t\t\tBattleSearchIndex[i][0].substr(0, matchLength) !== query.substr(0, matchLength) &&\n\t\t\t\tBattleSearchIndex[i - 1][0].substr(0, matchLength) !== query.substr(0, matchLength)) {\n\t\t\t\tmatchLength--;\n\t\t\t}\n\t\t\tlet matchQuery = query.substr(0, matchLength);\n\t\t\twhile (i >= 1 && BattleSearchIndex[i - 1][0].substr(0, matchLength) === matchQuery) i--;\n\t\t\tsearchPasses.push(['fuzzy', i, '']);\n\t\t}\n\n\t\t// We split the output buffers into 8 buckets.\n\t\t// Bucket 0 is usually unused, and buckets 1-7 represent\n\t\t// pokemon, types, moves, etc (see typeTable).\n\n\t\t// When we're done, the buffers are concatenated together to form\n\t\t// our results, with each buffer getting its own header, unlike\n\t\t// multiple-pass results, which have no header.\n\n\t\t// Notes:\n\t\t// - if we have a searchType, that searchType's buffer will be on top\n\t\tlet bufs: SearchRow[][] = [[], [], [], [], [], [], [], [], [], []];\n\t\tlet topbufIndex = -1;\n\n\t\tlet count = 0;\n\t\tlet nearMatch = false;\n\n\t\t/** [type, id, typeIndex] */\n\t\tlet instafilter: [SearchType, ID, number] | null = null;\n\t\tlet instafilterSort = [0, 1, 2, 5, 4, 3, 6, 7, 8];\n\t\tlet illegal = this.typedSearch?.illegalReasons;\n\n\t\t// We aren't actually looping through the entirety of the searchIndex\n\t\tfor (i = 0; i < BattleSearchIndex.length; i++) {\n\t\t\tif (!passType) {\n\t\t\t\tlet searchPass = searchPasses.shift();\n\t\t\t\tif (!searchPass) break;\n\t\t\t\tpassType = searchPass[0];\n\t\t\t\ti = searchPass[1];\n\t\t\t\tquery = searchPass[2];\n\t\t\t}\n\n\t\t\tlet entry = BattleSearchIndex[i];\n\t\t\tlet id = entry[0];\n\t\t\tlet type = entry[1];\n\n\t\t\tif (!id) break;\n\n\t\t\tif (passType === 'fuzzy') {\n\t\t\t\t// fuzzy match pass; stop after 2 results\n\t\t\t\tif (count >= 2) {\n\t\t\t\t\tpassType = '';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnearMatch = true;\n\t\t\t} else if (passType === 'exact') {\n\t\t\t\t// exact pass; stop after 1 result\n\t\t\t\tif (count >= 1) {\n\t\t\t\t\tpassType = '';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (id.substr(0, query.length) !== query) {\n\t\t\t\t// regular pass, time to move onto our next match\n\t\t\t\tpassType = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (entry.length > 2) {\n\t\t\t\t// alias entry\n\t\t\t\tif (passType !== 'alias') continue;\n\t\t\t} else {\n\t\t\t\t// normal entry\n\t\t\t\tif (passType === 'alias') continue;\n\t\t\t}\n\n\t\t\tlet typeIndex = DexSearch.typeTable[type];\n\n\t\t\t// For performance, with a query length of 1, we only fill the first bucket\n\t\t\tif (query.length === 1 && typeIndex !== (searchType ? searchTypeIndex : 1)) continue;\n\n\t\t\t// For pokemon queries, accept types/tier/abilities/moves/eggroups as filters\n\t\t\tif (searchType === 'pokemon' && (typeIndex === 5 || typeIndex > 7)) continue;\n\t\t\t// For move queries, accept types/categories as filters\n\t\t\tif (searchType === 'move' && ((typeIndex !== 8 && typeIndex > 4) || typeIndex === 3)) continue;\n\t\t\t// For move queries in the teambuilder, don't accept pokemon as filters\n\t\t\tif (searchType === 'move' && illegal && typeIndex === 1) continue;\n\t\t\t// For ability/item queries, don't accept anything else as a filter\n\t\t\tif ((searchType === 'ability' || searchType === 'item') && typeIndex !== searchTypeIndex) continue;\n\t\t\t// Query was a type name followed 'type'; only show types\n\t\t\tif (qFilterType === 'type' && typeIndex !== 2) continue;\n\t\t\t// hardcode cases of duplicate non-consecutive aliases\n\t\t\tif ((id === 'megax' || id === 'megay') && 'mega'.startsWith(query)) continue;\n\n\t\t\tlet matchStart = 0;\n\t\t\tlet matchEnd = 0;\n\t\t\tif (passType === 'alias') {\n\t\t\t\t// alias entry\n\t\t\t\t// [aliasid, type, originalid, matchStart, originalindex]\n\t\t\t\tmatchStart = entry[3]!;\n\t\t\t\tlet originalIndex = entry[2]!;\n\t\t\t\tif (matchStart) {\n\t\t\t\t\tmatchEnd = matchStart + query.length;\n\t\t\t\t\tmatchStart += (BattleSearchIndexOffset[originalIndex][matchStart] || '0').charCodeAt(0) - 48;\n\t\t\t\t\tmatchEnd += (BattleSearchIndexOffset[originalIndex][matchEnd - 1] || '0').charCodeAt(0) - 48;\n\t\t\t\t}\n\t\t\t\tid = BattleSearchIndex[originalIndex][0];\n\t\t\t} else {\n\t\t\t\tmatchEnd = query.length;\n\t\t\t\tif (matchEnd) matchEnd += (BattleSearchIndexOffset[i][matchEnd - 1] || '0').charCodeAt(0) - 48;\n\t\t\t}\n\n\t\t\t// some aliases are substrings\n\t\t\tif (queryAlias === id && query !== id) continue;\n\n\t\t\tif (searchType && searchTypeIndex !== typeIndex) {\n\t\t\t\t// This is a filter, set it as an instafilter candidate\n\t\t\t\tif (!instafilter || instafilterSort[typeIndex] < instafilterSort[instafilter[2]]) {\n\t\t\t\t\tinstafilter = [type, id, typeIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// show types above Arceus formes\n\t\t\tif (topbufIndex < 0 && searchTypeIndex < 2 && passType === 'alias' && !bufs[1].length && bufs[2].length) {\n\t\t\t\ttopbufIndex = 2;\n\t\t\t}\n\n\t\t\tif (illegal && typeIndex === searchTypeIndex) {\n\t\t\t\t// Always show illegal results under legal results.\n\t\t\t\t// This is done by putting legal results (and the type header)\n\t\t\t\t// in bucket 0, and illegal results in the searchType's bucket.\n\t\t\t\t// searchType buckets are always on top (but under bucket 0), so\n\t\t\t\t// illegal results will be seamlessly right under legal results.\n\t\t\t\tif (!bufs[typeIndex].length && !bufs[0].length) {\n\t\t\t\t\tbufs[0] = [['header', DexSearch.typeName[type]]];\n\t\t\t\t}\n\t\t\t\tif (!(id in illegal)) typeIndex = 0;\n\t\t\t} else {\n\t\t\t\tif (!bufs[typeIndex].length) {\n\t\t\t\t\tbufs[typeIndex] = [['header', DexSearch.typeName[type]]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// don't match duplicate aliases\n\t\t\tlet curBufLength = (passType === 'alias' && bufs[typeIndex].length);\n\t\t\tif (curBufLength && bufs[typeIndex][curBufLength - 1][1] === id) continue;\n\n\t\t\tbufs[typeIndex].push([type, id, matchStart, matchEnd]);\n\n\t\t\tcount++;\n\t\t}\n\n\t\tlet topbuf: SearchRow[] = [];\n\t\tif (nearMatch) {\n\t\t\ttopbuf = [['html', `<em>No exact match found. The closest matches alphabetically are:</em>`]];\n\t\t}\n\t\tif (topbufIndex >= 0) {\n\t\t\ttopbuf = topbuf.concat(bufs[topbufIndex]);\n\t\t\tbufs[topbufIndex] = [];\n\t\t}\n\t\tif (searchTypeIndex >= 0) {\n\t\t\ttopbuf = topbuf.concat(bufs[0]);\n\t\t\ttopbuf = topbuf.concat(bufs[searchTypeIndex]);\n\t\t\tbufs[searchTypeIndex] = [];\n\t\t\tbufs[0] = [];\n\t\t}\n\n\t\tif (instafilter && count < 20) {\n\t\t\t// Result count is less than 20, so we can instafilter\n\t\t\tbufs.push(this.instafilter(searchType, instafilter[0], instafilter[1]));\n\t\t}\n\n\t\tthis.results = Array.prototype.concat.apply(topbuf, bufs);\n\t\treturn this.results;\n\t}\n\tprivate instafilter(searchType: SearchType | '', fType: SearchType, fId: ID): SearchRow[] {\n\t\tlet buf: SearchRow[] = [];\n\t\tlet illegalBuf: SearchRow[] = [];\n\t\tlet illegal = this.typedSearch?.illegalReasons;\n\t\tif (searchType === 'pokemon') {\n\t\t\tswitch (fType) {\n\t\t\tcase 'type':\n\t\t\t\tlet type = fId.charAt(0).toUpperCase() + fId.slice(1) as Dex.TypeName;\n\t\t\t\tbuf.push(['header', `${type}-type Pok\\u00e9mon`]);\n\t\t\t\tfor (let id in BattlePokedex) {\n\t\t\t\t\tif (!BattlePokedex[id].types) continue;\n\t\t\t\t\tif (this.dex.species.get(id).types.includes(type)) {\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['pokemon', id as ID]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'ability':\n\t\t\t\tlet ability = Dex.abilities.get(fId).name;\n\t\t\t\tbuf.push(['header', `${ability} Pok\\u00e9mon`]);\n\t\t\t\tfor (let id in BattlePokedex) {\n\t\t\t\t\tif (!BattlePokedex[id].abilities) continue;\n\t\t\t\t\tif (Dex.hasAbility(this.dex.species.get(id), ability)) {\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['pokemon', id as ID]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (searchType === 'move') {\n\t\t\tswitch (fType) {\n\t\t\tcase 'type':\n\t\t\t\tlet type = fId.charAt(0).toUpperCase() + fId.slice(1);\n\t\t\t\tbuf.push(['header', `${type}-type moves`]);\n\t\t\t\tfor (let id in BattleMovedex) {\n\t\t\t\t\tif (BattleMovedex[id].type === type) {\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['move', id as ID]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'category':\n\t\t\t\tlet category = fId.charAt(0).toUpperCase() + fId.slice(1);\n\t\t\t\tbuf.push(['header', `${category} moves`]);\n\t\t\t\tfor (let id in BattleMovedex) {\n\t\t\t\t\tif (BattleMovedex[id].category === category) {\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['move', id as ID]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn [...buf, ...illegalBuf];\n\t}\n\n\tstatic getClosest(query: string) {\n\t\t// binary search through the index!\n\t\tlet left = 0;\n\t\tlet right = BattleSearchIndex.length - 1;\n\t\twhile (right > left) {\n\t\t\tlet mid = Math.floor((right - left) / 2 + left);\n\t\t\tif (BattleSearchIndex[mid][0] === query && (mid === 0 || BattleSearchIndex[mid - 1][0] !== query)) {\n\t\t\t\t// that's us\n\t\t\t\treturn mid;\n\t\t\t} else if (BattleSearchIndex[mid][0] < query) {\n\t\t\t\tleft = mid + 1;\n\t\t\t} else {\n\t\t\t\tright = mid - 1;\n\t\t\t}\n\t\t}\n\t\tif (left >= BattleSearchIndex.length - 1) left = BattleSearchIndex.length - 1;\n\t\telse if (BattleSearchIndex[left + 1][0] && BattleSearchIndex[left][0] < query) left++;\n\t\tif (left && BattleSearchIndex[left - 1][0] === query) left--;\n\t\treturn left;\n\t}\n}\n\nabstract class BattleTypedSearch<T extends SearchType> {\n\tsearchType: T;\n\t/**\n\t * Dex for the mod/generation to search.\n\t */\n\tdex: ModdedDex = Dex;\n\t/**\n\t * Format is the first of two base filters. It constrains results to things\n\t * legal in the format, and affects the default sort.\n\t *\n\t * This string specifically normalizes out generation number and the words\n\t * \"Doubles\" and \"Let's Go\" from the name.\n\t */\n\tformat = '' as ID;\n\t/**\n\t * `species` is the second of two base filters. It constrains results to\n\t * things that species can use, and affects the default sort.\n\t */\n\tspecies = '' as ID;\n\t/**\n\t * `set` is a pseudo-base filter; it has minor effects on move sorting.\n\t * (Abilities/items can affect what moves are sorted as usable.)\n\t */\n\tset: Dex.PokemonSet | null = null;\n\n\tprotected formatType: 'doubles' | 'bdsp' | 'bdspdoubles' | 'rs' | 'bw1' | 'letsgo' | 'metronome' | 'natdex' | 'nfe' |\n\t\t'ssdlc1' | 'ssdlc1doubles' | 'predlc' | 'predlcdoubles' | 'predlcnatdex' | 'svdlc1' | 'svdlc1doubles' |\n\t\t'svdlc1natdex' | 'stadium' | 'lc' | null = null;\n\tisDoubles = false;\n\n\t/**\n\t * Cached copy of what the results list would be with only base filters\n\t * (i.e. with an empty `query` and `filters`)\n\t */\n\tbaseResults: SearchRow[] | null = null;\n\t/**\n\t * Cached copy of all results not in `baseResults` - mostly in case a user\n\t * is wondering why a specific result isn't showing up.\n\t */\n\tbaseIllegalResults: SearchRow[] | null = null;\n\tillegalReasons: { [id: string]: string } | null = null;\n\tresults: SearchRow[] | null = null;\n\n\tprotected readonly sortRow: SearchRow | null = null;\n\n\tconstructor(searchType: T, format = '' as ID, speciesOrSet: ID | Dex.PokemonSet = '' as ID) {\n\t\tthis.searchType = searchType;\n\n\t\tthis.baseResults = null;\n\t\tthis.baseIllegalResults = null;\n\n\t\tif (format.startsWith('gen')) {\n\t\t\tconst gen = (Number(format.charAt(3)) || 6);\n\t\t\tformat = (format.slice(4) || 'customgame') as ID;\n\t\t\tthis.dex = Dex.forGen(gen);\n\t\t} else if (!format) {\n\t\t\tthis.dex = Dex;\n\t\t}\n\n\t\tif (format.startsWith('dlc1') && this.dex.gen === 8) {\n\t\t\tif (format.includes('doubles')) {\n\t\t\t\tthis.formatType = 'ssdlc1doubles';\n\t\t\t\tthis.isDoubles = true;\n\t\t\t} else {\n\t\t\t\tthis.formatType = 'ssdlc1';\n\t\t\t}\n\t\t\tformat = format.slice(4) as ID;\n\t\t}\n\t\tif (format.startsWith('predlc')) {\n\t\t\tif (format.includes('doubles') && !format.includes('nationaldex')) {\n\t\t\t\tthis.formatType = 'predlcdoubles';\n\t\t\t\tthis.isDoubles = true;\n\t\t\t} else if (format.includes('nationaldex')) {\n\t\t\t\tthis.formatType = 'predlcnatdex';\n\t\t\t} else {\n\t\t\t\tthis.formatType = 'predlc';\n\t\t\t}\n\t\t\tformat = format.slice(6) as ID;\n\t\t}\n\t\tif (format.startsWith('dlc1') && this.dex.gen === 9) {\n\t\t\tif (format.includes('doubles') && !format.includes('nationaldex')) {\n\t\t\t\tthis.formatType = 'svdlc1doubles';\n\t\t\t\tthis.isDoubles = true;\n\t\t\t} else if (format.includes('nationaldex')) {\n\t\t\t\tthis.formatType = 'svdlc1natdex';\n\t\t\t} else {\n\t\t\t\tthis.formatType = 'svdlc1';\n\t\t\t}\n\t\t\tformat = format.slice(4) as ID;\n\t\t}\n\t\tif (format.startsWith('stadium')) {\n\t\t\tthis.formatType = 'stadium';\n\t\t\tformat = format.slice(7) as ID;\n\t\t\tif (!format) format = 'ou' as ID;\n\t\t}\n\t\tif (format.startsWith('vgc')) {\n\t\t\tthis.formatType = 'doubles';\n\t\t\tthis.isDoubles = true;\n\t\t}\n\t\tif (format === 'vgc2020') {\n\t\t\tthis.formatType = 'ssdlc1doubles';\n\t\t}\n\t\tif (format.startsWith('vgc2023')) {\n\t\t\tthis.formatType = format.endsWith('rege') ? 'svdlc1doubles' : 'predlcdoubles';\n\t\t}\n\t\tif (format.includes('bdsp')) {\n\t\t\tif (format.includes('doubles')) {\n\t\t\t\tthis.formatType = 'bdspdoubles';\n\t\t\t\tthis.isDoubles = true;\n\t\t\t} else {\n\t\t\t\tthis.formatType = 'bdsp';\n\t\t\t}\n\t\t\tformat = format.slice(4) as ID;\n\t\t\tthis.dex = Dex.mod('gen8bdsp' as ID);\n\t\t}\n\t\tif (format.includes('bw1')) {\n\t\t\tthis.formatType = 'bw1';\n\t\t\tthis.dex = Dex.mod('gen5bw1' as ID);\n\t\t}\n\t\tif (format.includes('adv200')) {\n\t\t\tthis.formatType = 'rs';\n\t\t\tthis.dex = Dex.mod('gen3rs' as ID);\n\t\t}\n\t\tif (format === 'partnersincrime') this.formatType = 'doubles';\n\t\tif (format.startsWith('ffa') || format === 'freeforall') this.formatType = 'doubles';\n\t\tif (format.includes('letsgo')) {\n\t\t\tthis.formatType = 'letsgo';\n\t\t\tthis.dex = Dex.mod('gen7letsgo' as ID);\n\t\t}\n\t\tif (format.includes('nationaldex') || format.startsWith('nd') || format.includes('natdex')) {\n\t\t\tformat = (format.startsWith('nd') ? format.slice(2) :\n\t\t\t\tformat.includes('natdex') ? format.slice(6) : format.slice(11)) as ID;\n\t\t\tthis.formatType = 'natdex';\n\t\t\tif (!format) format = 'ou' as ID;\n\t\t\tthis.isDoubles = format.includes('doubles');\n\t\t}\n\t\tif (format.includes('doubles') && this.dex.gen > 4 && !this.formatType) {\n\t\t\tthis.formatType = 'doubles';\n\t\t\tthis.isDoubles = true;\n\t\t}\n\t\tif (this.formatType === 'letsgo') format = format.slice(6) as ID;\n\t\tif (format.includes('metronome')) {\n\t\t\tthis.formatType = 'metronome';\n\t\t}\n\t\tif (format.endsWith('nfe')) {\n\t\t\tformat = format.slice(3) as ID;\n\t\t\tthis.formatType = 'nfe';\n\t\t\tif (!format) format = 'ou' as ID;\n\t\t}\n\t\tif ((format.endsWith('lc') || format.startsWith('lc')) && format !== 'caplc' && !this.formatType) {\n\t\t\tthis.formatType = 'lc';\n\t\t\tformat = 'lc' as ID;\n\t\t}\n\t\tif (format.endsWith('draft')) {\n\t\t\tformat = format.slice(0, -5) as ID;\n\t\t\tif (!format) format = 'anythinggoes' as ID;\n\t\t}\n\t\tthis.format = format;\n\n\t\tthis.species = '' as ID;\n\t\tthis.set = null;\n\t\tif (typeof speciesOrSet === 'string') {\n\t\t\tif (speciesOrSet) this.species = speciesOrSet;\n\t\t} else {\n\t\t\tthis.set = speciesOrSet;\n\t\t\tthis.species = toID(this.set.species);\n\t\t}\n\t\t// if (!searchType || !this.set) return;\n\t}\n\tgetResults(filters?: SearchFilter[] | null, sortCol?: string | null, reverseSort?: boolean): SearchRow[] {\n\t\tif (sortCol === 'type') {\n\t\t\treturn [this.sortRow!, ...BattleTypeSearch.prototype.getDefaultResults.call(this, reverseSort)];\n\t\t} else if (sortCol === 'category') {\n\t\t\treturn [this.sortRow!, ...BattleCategorySearch.prototype.getDefaultResults.call(this, reverseSort)];\n\t\t} else if (sortCol === 'ability') {\n\t\t\treturn [this.sortRow!, ...BattleAbilitySearch.prototype.getDefaultResults.call(this, reverseSort)];\n\t\t}\n\n\t\tif (!this.baseResults) {\n\t\t\tthis.baseResults = this.getBaseResults();\n\t\t}\n\n\t\tif (!this.baseIllegalResults) {\n\t\t\tconst legalityFilter: { [id: string]: 1 } = {};\n\t\t\tfor (const [resultType, value] of this.baseResults) {\n\t\t\t\tif (resultType === this.searchType) legalityFilter[value] = 1;\n\t\t\t}\n\t\t\tthis.baseIllegalResults = [];\n\t\t\tthis.illegalReasons = {};\n\n\t\t\tfor (const id in this.getTable()) {\n\t\t\t\tif (!(id in legalityFilter)) {\n\t\t\t\t\tthis.baseIllegalResults.push([this.searchType, id as ID]);\n\t\t\t\t\tthis.illegalReasons[id] = 'Illegal';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet results: SearchRow[];\n\t\tlet illegalResults: SearchRow[] | null;\n\n\t\tif (filters) {\n\t\t\tresults = [];\n\t\t\tillegalResults = [];\n\t\t\tfor (const result of this.baseResults) {\n\t\t\t\tif (this.filter(result, filters)) {\n\t\t\t\t\tif (results.length && result[0] === 'header' && results[results.length - 1][0] === 'header') {\n\t\t\t\t\t\tresults[results.length - 1] = result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults.push(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (results.length && results[results.length - 1][0] === 'header') {\n\t\t\t\tresults.pop();\n\t\t\t}\n\t\t\tfor (const result of this.baseIllegalResults) {\n\t\t\t\tif (this.filter(result, filters)) {\n\t\t\t\t\tillegalResults.push(result);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresults = [...this.baseResults];\n\t\t\tillegalResults = null;\n\t\t}\n\t\tif (this.defaultFilter) {\n\t\t\tresults = this.defaultFilter(results);\n\t\t}\n\n\t\tif (sortCol) {\n\t\t\tresults = results.filter(([rowType]) => rowType === this.searchType);\n\t\t\tresults = this.sort(results, sortCol, reverseSort);\n\t\t\tif (illegalResults) {\n\t\t\t\tillegalResults = illegalResults.filter(([rowType]) => rowType === this.searchType);\n\t\t\t\tillegalResults = this.sort(illegalResults, sortCol, reverseSort);\n\t\t\t}\n\t\t}\n\n\t\tif (this.sortRow) {\n\t\t\tresults = [this.sortRow, ...results];\n\t\t}\n\t\tif (illegalResults?.length) {\n\t\t\tresults = [...results, ['header', \"Illegal results\"], ...illegalResults];\n\t\t}\n\t\treturn results;\n\t}\n\tprotected firstLearnsetid(speciesid: ID) {\n\t\tlet table = BattleTeambuilderTable;\n\t\tif (this.formatType?.startsWith('bdsp')) table = table['gen8bdsp'];\n\t\tif (this.formatType === 'letsgo') table = table['gen7letsgo'];\n\t\tif (this.formatType === 'bw1') table = table['gen5bw1'];\n\t\tif (this.formatType === 'rs') table = table['gen3rs'];\n\t\tif (speciesid in table.learnsets) return speciesid;\n\t\tconst species = this.dex.species.get(speciesid);\n\t\tif (!species.exists) return '' as ID;\n\n\t\tlet baseLearnsetid = toID(species.baseSpecies);\n\t\tif (typeof species.battleOnly === 'string' && species.battleOnly !== species.baseSpecies) {\n\t\t\tbaseLearnsetid = toID(species.battleOnly);\n\t\t}\n\t\tif (baseLearnsetid in table.learnsets) return baseLearnsetid;\n\t\treturn '' as ID;\n\t}\n\tprotected nextLearnsetid(learnsetid: ID, speciesid: ID, checkingMoves = false) {\n\t\tif (learnsetid === 'lycanrocdusk' || (speciesid === 'rockruff' && learnsetid === 'rockruff')) {\n\t\t\treturn 'rockruffdusk' as ID;\n\t\t}\n\t\tconst lsetSpecies = this.dex.species.get(learnsetid);\n\t\tif (!lsetSpecies.exists) return '' as ID;\n\n\t\tif (lsetSpecies.id === 'gastrodoneast') return 'gastrodon' as ID;\n\t\tif (lsetSpecies.id === 'pumpkaboosuper') return 'pumpkaboo' as ID;\n\t\tif (lsetSpecies.id === 'sinisteaantique') return 'sinistea' as ID;\n\t\tif (lsetSpecies.id === 'tatsugiristretchy') return 'tatsugiri' as ID;\n\n\t\tconst next = lsetSpecies.battleOnly || lsetSpecies.changesFrom || lsetSpecies.prevo;\n\t\tif (next) return toID(next);\n\n\t\tif (checkingMoves && !lsetSpecies.prevo && lsetSpecies.baseSpecies &&\n\t\t\tthis.dex.species.get(lsetSpecies.baseSpecies).prevo) {\n\t\t\tlet baseEvo = this.dex.species.get(lsetSpecies.baseSpecies);\n\t\t\twhile (baseEvo.prevo) {\n\t\t\t\tbaseEvo = this.dex.species.get(baseEvo.prevo);\n\t\t\t}\n\t\t\treturn toID(baseEvo);\n\t\t}\n\n\t\treturn '' as ID;\n\t}\n\tprotected canLearn(speciesid: ID, moveid: ID) {\n\t\tconst move = this.dex.moves.get(moveid);\n\t\tif (this.formatType === 'natdex' && move.isNonstandard && move.isNonstandard !== 'Past') {\n\t\t\treturn false;\n\t\t}\n\t\tconst gen = this.dex.gen;\n\t\tlet genChar = `${gen}`;\n\t\tif (\n\t\t\tthis.format.startsWith('vgc') ||\n\t\t\tthis.format.startsWith('bss') ||\n\t\t\tthis.format.startsWith('battlespot') ||\n\t\t\tthis.format.startsWith('battlestadium') ||\n\t\t\tthis.format.startsWith('battlefestival') ||\n\t\t\t(this.dex.gen === 9 && this.formatType !== 'natdex')\n\t\t) {\n\t\t\tif (gen === 9) {\n\t\t\t\tgenChar = 'a';\n\t\t\t} else if (gen === 8) {\n\t\t\t\tgenChar = 'g';\n\t\t\t} else if (gen === 7) {\n\t\t\t\tgenChar = 'q';\n\t\t\t} else if (gen === 6) {\n\t\t\t\tgenChar = 'p';\n\t\t\t}\n\t\t}\n\t\tlet learnsetid = this.firstLearnsetid(speciesid);\n\t\twhile (learnsetid) {\n\t\t\tlet table = BattleTeambuilderTable;\n\t\t\tif (this.formatType?.startsWith('bdsp')) table = table['gen8bdsp'];\n\t\t\tif (this.formatType === 'letsgo') table = table['gen7letsgo'];\n\t\t\tif (this.formatType === 'bw1') table = table['gen5bw1'];\n\t\t\tif (this.formatType === 'rs') table = table['gen3rs'];\n\t\t\tlet learnset = table.learnsets[learnsetid];\n\t\t\tconst eggMovesOnly = this.eggMovesOnly(learnsetid, speciesid);\n\t\t\tif (learnset && (moveid in learnset) && (!this.format.startsWith('tradebacks') ? learnset[moveid].includes(genChar) :\n\t\t\t\tlearnset[moveid].includes(genChar) || (learnset[moveid].includes(`${gen + 1}`) && move.gen === gen)) &&\n\t\t\t\t(!eggMovesOnly || (learnset[moveid].includes('e') && this.dex.gen === 9))\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlearnsetid = this.nextLearnsetid(learnsetid, speciesid, true);\n\t\t}\n\t\treturn false;\n\t}\n\tgetTier(pokemon: Dex.Species) {\n\t\tif (this.formatType === 'metronome') {\n\t\t\treturn pokemon.num >= 0 ? String(pokemon.num) : pokemon.tier;\n\t\t}\n\t\tlet table = window.BattleTeambuilderTable;\n\t\tconst gen = this.dex.gen;\n\t\tconst tableKey = this.formatType === 'doubles' ? `gen${gen}doubles` :\n\t\t\tthis.formatType === 'letsgo' ? 'gen7letsgo' :\n\t\t\tthis.formatType === 'bdsp' ? 'gen8bdsp' :\n\t\t\tthis.formatType === 'bdspdoubles' ? 'gen8bdspdoubles' :\n\t\t\tthis.formatType === 'bw1' ? 'gen5bw1' :\n\t\t\tthis.formatType === 'rs' ? 'gen3rs' :\n\t\t\tthis.formatType === 'nfe' ? `gen${gen}nfe` :\n\t\t\tthis.formatType === 'lc' ? `gen${gen}lc` :\n\t\t\tthis.formatType === 'ssdlc1' ? 'gen8dlc1' :\n\t\t\tthis.formatType === 'ssdlc1doubles' ? 'gen8dlc1doubles' :\n\t\t\tthis.formatType === 'predlc' ? 'gen9predlc' :\n\t\t\tthis.formatType === 'predlcdoubles' ? 'gen9predlcdoubles' :\n\t\t\tthis.formatType === 'predlcnatdex' ? 'gen9predlcnatdex' :\n\t\t\tthis.formatType === 'svdlc1' ? 'gen9dlc1' :\n\t\t\tthis.formatType === 'svdlc1doubles' ? 'gen9dlc1doubles' :\n\t\t\tthis.formatType === 'svdlc1natdex' ? 'gen9dlc1natdex' :\n\t\t\tthis.formatType === 'natdex' ? `gen${gen}natdex` :\n\t\t\tthis.formatType === 'stadium' ? `gen${gen}stadium${gen > 1 ? gen : ''}` :\n\t\t\t`gen${gen}`;\n\t\tif (table?.[tableKey]) {\n\t\t\ttable = table[tableKey];\n\t\t}\n\t\tif (!table) return pokemon.tier;\n\n\t\tlet id = pokemon.id;\n\t\tif (id in table.overrideTier) {\n\t\t\treturn table.overrideTier[id];\n\t\t}\n\t\tif (id.endsWith('totem') && id.slice(0, -5) in table.overrideTier) {\n\t\t\treturn table.overrideTier[id.slice(0, -5)];\n\t\t}\n\t\tid = toID(pokemon.baseSpecies);\n\t\tif (id in table.overrideTier) {\n\t\t\treturn table.overrideTier[id];\n\t\t}\n\n\t\treturn pokemon.tier;\n\t}\n\teggMovesOnly(child: ID, father: ID) {\n\t\tif (this.dex.species.get(child).baseSpecies === this.dex.species.get(father).baseSpecies) return false;\n\t\tconst baseSpecies = father;\n\t\twhile (father) {\n\t\t\tif (child === father) return false;\n\t\t\tfather = this.nextLearnsetid(father, baseSpecies);\n\t\t}\n\t\treturn true;\n\t}\n\tabstract getTable(): { [id: string]: any };\n\tabstract getDefaultResults(): SearchRow[];\n\tabstract getBaseResults(): SearchRow[];\n\tabstract filter(input: SearchRow, filters: string[][]): boolean;\n\tdefaultFilter?(input: SearchRow[]): SearchRow[];\n\tabstract sort(input: SearchRow[], sortCol: string, reverseSort?: boolean): SearchRow[];\n}\n\nclass BattlePokemonSearch extends BattleTypedSearch<'pokemon'> {\n\toverride sortRow: SearchRow = ['sortpokemon', ''];\n\tgetTable() {\n\t\treturn BattlePokedex;\n\t}\n\tgetDefaultResults(): SearchRow[] {\n\t\tlet results: SearchRow[] = [];\n\t\tfor (let id in BattlePokedex) {\n\t\t\tswitch (id) {\n\t\t\tcase 'bulbasaur':\n\t\t\t\tresults.push(['header', \"Generation 1\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'chikorita':\n\t\t\t\tresults.push(['header', \"Generation 2\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'treecko':\n\t\t\t\tresults.push(['header', \"Generation 3\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'turtwig':\n\t\t\t\tresults.push(['header', \"Generation 4\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'victini':\n\t\t\t\tresults.push(['header', \"Generation 5\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'chespin':\n\t\t\t\tresults.push(['header', \"Generation 6\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'rowlet':\n\t\t\t\tresults.push(['header', \"Generation 7\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'grookey':\n\t\t\t\tresults.push(['header', \"Generation 8\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'sprigatito':\n\t\t\t\tresults.push(['header', \"Generation 9\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'missingno':\n\t\t\t\tresults.push(['header', \"Glitch\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'syclar':\n\t\t\t\tresults.push(['header', \"CAP\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'pikachucosplay':\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresults.push(['pokemon', id as ID]);\n\t\t}\n\t\treturn results;\n\t}\n\tgetBaseResults(): SearchRow[] {\n\t\tconst format = this.format;\n\t\tif (!format) return this.getDefaultResults();\n\t\tconst isVGCOrBS = format.startsWith('battlespot') || format.startsWith('bss') ||\n\t\t\tformat.startsWith('battlestadium') || format.startsWith('vgc');\n\t\tconst isHackmons = format.includes('hackmons') || format.endsWith('bh');\n\t\tlet isDoublesOrBS = isVGCOrBS || this.formatType?.includes('doubles');\n\t\tconst dex = this.dex;\n\n\t\tlet table = BattleTeambuilderTable;\n\t\tif ((format.endsWith('cap') || format.endsWith('caplc')) && dex.gen < 9) {\n\t\t\ttable = table[`gen${dex.gen}`];\n\t\t} else if (isVGCOrBS) {\n\t\t\ttable = table[`gen${dex.gen}vgc`];\n\t\t} else if (dex.gen === 9 && isHackmons && !this.formatType) {\n\t\t\ttable = table['bh'];\n\t\t} else if (\n\t\t\ttable[`gen${dex.gen}doubles`] && dex.gen > 4 &&\n\t\t\tthis.formatType !== 'letsgo' && this.formatType !== 'bdspdoubles' &&\n\t\t\tthis.formatType !== 'ssdlc1doubles' && this.formatType !== 'predlcdoubles' &&\n\t\t\tthis.formatType !== 'svdlc1doubles' && !this.formatType?.includes('natdex') &&\n\t\t\t(\n\t\t\t\tformat.includes('doubles') || format.includes('triples') ||\n\t\t\t\tformat === 'freeforall' || format.startsWith('ffa') ||\n\t\t\t\tformat === 'partnersincrime'\n\t\t\t)\n\t\t) {\n\t\t\ttable = table[`gen${dex.gen}doubles`];\n\t\t\tisDoublesOrBS = true;\n\t\t} else if (dex.gen < 9 && !this.formatType) {\n\t\t\ttable = table[`gen${dex.gen}`];\n\t\t} else if (this.formatType?.startsWith('bdsp')) {\n\t\t\ttable = table['gen8' + this.formatType];\n\t\t} else if (this.formatType === 'letsgo') {\n\t\t\ttable = table['gen7letsgo'];\n\t\t} else if (this.formatType === 'bw1') {\n\t\t\ttable = table['gen5bw1'];\n\t\t} else if (this.formatType === 'rs') {\n\t\t\ttable = table['gen3rs'];\n\t\t} else if (this.formatType === 'natdex') {\n\t\t\ttable = table[`gen${dex.gen}natdex`];\n\t\t} else if (this.formatType === 'metronome') {\n\t\t\ttable = table[`gen${dex.gen}metronome`];\n\t\t} else if (this.formatType === 'nfe') {\n\t\t\ttable = table[`gen${dex.gen}nfe`];\n\t\t} else if (this.formatType === 'lc') {\n\t\t\ttable = table[`gen${dex.gen}lc`];\n\t\t} else if (this.formatType?.startsWith('ssdlc1')) {\n\t\t\tif (this.formatType.includes('doubles')) {\n\t\t\t\ttable = table['gen8dlc1doubles'];\n\t\t\t} else {\n\t\t\t\ttable = table['gen8dlc1'];\n\t\t\t}\n\t\t} else if (this.formatType?.startsWith('predlc')) {\n\t\t\tif (this.formatType.includes('doubles')) {\n\t\t\t\ttable = table['gen9predlcdoubles'];\n\t\t\t} else if (this.formatType.includes('natdex')) {\n\t\t\t\ttable = table['gen9predlcnatdex'];\n\t\t\t} else {\n\t\t\t\ttable = table['gen9predlc'];\n\t\t\t}\n\t\t} else if (this.formatType?.startsWith('svdlc1')) {\n\t\t\tif (this.formatType.includes('doubles')) {\n\t\t\t\ttable = table['gen9dlc1doubles'];\n\t\t\t} else if (this.formatType.includes('natdex')) {\n\t\t\t\ttable = table['gen9dlc1natdex'];\n\t\t\t} else {\n\t\t\t\ttable = table['gen9dlc1'];\n\t\t\t}\n\t\t} else if (this.formatType === 'stadium') {\n\t\t\ttable = table[`gen${dex.gen}stadium${dex.gen > 1 ? dex.gen : ''}`];\n\t\t}\n\n\t\tif (!table.tierSet) {\n\t\t\ttable.tierSet = table.tiers.map((r: any) => {\n\t\t\t\tif (typeof r === 'string') return ['pokemon', r];\n\t\t\t\treturn [r[0], r[1]];\n\t\t\t});\n\t\t\ttable.tiers = null;\n\t\t}\n\t\tlet tierSet: SearchRow[] = table.tierSet;\n\t\tlet slices: { [k: string]: number } = table.formatSlices;\n\t\tif (format === 'ubers' || format === 'uber' || format === 'ubersuu' || format === 'nationaldexdoubles') {\n\t\t\ttierSet = tierSet.slice(slices.Uber);\n\t\t} else if (isVGCOrBS || (isHackmons && dex.gen === 9 && !this.formatType)) {\n\t\t\tif (format.endsWith('series13') || format.endsWith('regj') || isHackmons) {\n\t\t\t\t// Show Mythicals\n\t\t\t} else if (\n\t\t\t\tformat === 'vgc2010' || format === 'vgc2016' || format.startsWith('vgc2019') ||\n\t\t\t\tformat === 'vgc2022' || format.endsWith('regg') || format.endsWith('regi')\n\t\t\t) {\n\t\t\t\ttierSet = tierSet.slice(slices[\"Restricted Legendary\"]);\n\t\t\t} else {\n\t\t\t\ttierSet = tierSet.slice(slices.Regular);\n\t\t\t}\n\n\t\t\t// Remove DLC Pokemon from Pre-DLC formats\n\t\t\tif (this.formatType?.includes('dlc')) {\n\t\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\t\treturn !['Unreleased', 'Illegal'].includes(this.getTier(this.dex.species.get(id)));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (format.endsWith('regh')) {\n\t\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\t\tconst tags = this.dex.species.get(this.dex.species.get(id).baseSpecies).tags;\n\t\t\t\t\treturn !tags.includes('Sub-Legendary') && !tags.includes('Paradox') &&\n\t\t\t\t\t\t// The game does not classify these as Paradox Pokemon (Booster Energy can be knocked off)\n\t\t\t\t\t\t!['gougingfire', 'ironboulder', 'ironcrown', 'ragingbolt'].includes(id);\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (format === 'ou') tierSet = tierSet.slice(slices.OU);\n\t\telse if (format === 'uubl') tierSet = tierSet.slice(slices.UUBL);\n\t\telse if (format === 'uu') tierSet = tierSet.slice(slices.UU);\n\t\telse if (format === 'ru') tierSet = tierSet.slice(slices.RU || slices.UU);\n\t\telse if (format === 'nu') tierSet = tierSet.slice(slices.NU || slices.RU || slices.UU);\n\t\telse if (format === 'pu') tierSet = tierSet.slice(slices.PU || slices.NU);\n\t\telse if (format === 'zu' && dex.gen === 5) tierSet = tierSet.slice(slices.PU || slices.NU);\n\t\telse if (format === 'zu') tierSet = tierSet.slice(slices.ZU || slices.PU || slices.NU);\n\t\telse if (\n\t\t\tformat === 'lc' || format === 'lcuu' || format.startsWith('lc') || (format !== 'caplc' && format.endsWith('lc'))\n\t\t) tierSet = tierSet.slice(slices.LC);\n\t\telse if (format === 'cap' || format.endsWith('cap')) {\n\t\t\ttierSet = tierSet.slice(0, slices.AG || slices.Uber).concat(tierSet.slice(slices.OU));\n\t\t} else if (format === 'caplc') {\n\t\t\ttierSet = tierSet.slice(slices['CAP LC'], slices.AG || slices.Uber).concat(tierSet.slice(slices.LC));\n\t\t} else if (format === 'anythinggoes' || format.endsWith('ag') || format.startsWith('ag')) {\n\t\t\ttierSet = tierSet.slice(slices.AG);\n\t\t} else if (isHackmons && (dex.gen < 9 || this.formatType === 'natdex')) {\n\t\t\ttierSet = tierSet.slice(slices.AG || slices.Uber);\n\t\t} else if (format === 'monotype' || format.startsWith('monothreat')) tierSet = tierSet.slice(slices.Uber);\n\t\telse if (format === 'doublesubers') tierSet = tierSet.slice(slices.DUber);\n\t\telse if (format === 'doublesou' && dex.gen > 4) tierSet = tierSet.slice(slices.DOU);\n\t\telse if (format === 'doublesuu') tierSet = tierSet.slice(slices.DUU);\n\t\telse if (format === 'doublesnu') tierSet = tierSet.slice(slices.DNU || slices.DUU);\n\t\telse if (this.formatType?.startsWith('bdsp') || this.formatType === 'letsgo' || this.formatType === 'stadium') {\n\t\t\ttierSet = tierSet.slice(slices.Uber);\n\t\t} else if (this.formatType === 'rs') {\n\t\t\ttierSet = tierSet.slice(slices.Regular);\n\t\t} else if (!isDoublesOrBS) {\n\t\t\ttierSet = [\n\t\t\t\t...tierSet.slice(slices.OU, slices.UU),\n\t\t\t\t...tierSet.slice(slices.AG, slices.Uber),\n\t\t\t\t...tierSet.slice(slices.Uber, slices.OU),\n\t\t\t\t...tierSet.slice(slices.UU),\n\t\t\t];\n\t\t} else {\n\t\t\ttierSet = [\n\t\t\t\t...tierSet.slice(slices.DOU, slices.DUU),\n\t\t\t\t...tierSet.slice(slices.DUber, slices.DOU),\n\t\t\t\t...tierSet.slice(slices.DUU),\n\t\t\t];\n\t\t}\n\t\tif (format === 'ubersuu' && table.ubersUUBans) {\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\tif (id in table.ubersUUBans) return false;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t\tif (format === 'doubles' && this.formatType === 'natdex' && table.ndDoublesBans) {\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\tif (id in table.ndDoublesBans) return false;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t\tif (format === '35pokes' && table.thirtyfivePokes) {\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\tif (id in table.thirtyfivePokes) return true;\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t\tif (dex.gen >= 5) {\n\t\t\tif ((format === 'monotype' || format.startsWith('monothreat')) && table.monotypeBans) {\n\t\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\t\tif (id in table.monotypeBans) return false;\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (format === 'zu' && dex.gen === 5 && table.gen5zuBans) {\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\tif (id in table.gen5zuBans) return false;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t\tif (format === 'pu' && dex.gen === 4 && table.gen4puBans) {\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\tif (id in table.gen4puBans) return false;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\t// Filter out Gmax Pokemon from standard tier selection\n\t\tif (!(/^(battlestadium|vgc|doublesubers)/g.test(format) || (format === 'doubles' && this.formatType === 'natdex'))) {\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\n\t\t\t\tif (type === 'header' && id === 'DUber by technicality') return false;\n\t\t\t\tif (type === 'header' && id === 'Uber by technicality') return false;\n\t\t\t\tif (type === 'pokemon') return !id.endsWith('gmax');\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\treturn tierSet;\n\t}\n\tfilter(row: SearchRow, filters: string[][]) {\n\t\tif (!filters) return true;\n\t\tif (row[0] !== 'pokemon') return true;\n\t\tconst species = this.dex.species.get(row[1]);\n\t\tfor (const [filterType, value] of filters) {\n\t\t\tswitch (filterType) {\n\t\t\tcase 'type':\n\t\t\t\tif (species.types[0] !== value && species.types[1] !== value) return false;\n\t\t\t\tbreak;\n\t\t\tcase 'egggroup':\n\t\t\t\tif (species.eggGroups[0] !== value && species.eggGroups[1] !== value) return false;\n\t\t\t\tbreak;\n\t\t\tcase 'tier':\n\t\t\t\tif (this.getTier(species) !== value) return false;\n\t\t\t\tbreak;\n\t\t\tcase 'ability':\n\t\t\t\tif (!Dex.hasAbility(species, value)) return false;\n\t\t\t\tbreak;\n\t\t\tcase 'move':\n\t\t\t\tif (!this.canLearn(species.id, value as ID)) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tsort(results: SearchRow[], sortCol: string, reverseSort?: boolean) {\n\t\tconst sortOrder = reverseSort ? -1 : 1;\n\t\tif (['hp', 'atk', 'def', 'spa', 'spd', 'spe'].includes(sortCol)) {\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\n\t\t\t\tconst stat1 = this.dex.species.get(id1).baseStats[sortCol as Dex.StatName];\n\t\t\t\tconst stat2 = this.dex.species.get(id2).baseStats[sortCol as Dex.StatName];\n\t\t\t\treturn (stat2 - stat1) * sortOrder;\n\t\t\t});\n\t\t} else if (sortCol === 'bst') {\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\n\t\t\t\tconst base1 = this.dex.species.get(id1).baseStats;\n\t\t\t\tconst base2 = this.dex.species.get(id2).baseStats;\n\t\t\t\tlet bst1 = base1.hp + base1.atk + base1.def + base1.spa + base1.spd + base1.spe;\n\t\t\t\tlet bst2 = base2.hp + base2.atk + base2.def + base2.spa + base2.spd + base2.spe;\n\t\t\t\tif (this.dex.gen === 1) {\n\t\t\t\t\tbst1 -= base1.spd;\n\t\t\t\t\tbst2 -= base2.spd;\n\t\t\t\t}\n\t\t\t\treturn (bst2 - bst1) * sortOrder;\n\t\t\t});\n\t\t} else if (sortCol === 'name') {\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\n\t\t\t\tconst name1 = id1;\n\t\t\t\tconst name2 = id2;\n\t\t\t\treturn (name1 < name2 ? -1 : name1 > name2 ? 1 : 0) * sortOrder;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(\"invalid sortcol\");\n\t}\n}\n\nclass BattleAbilitySearch extends BattleTypedSearch<'ability'> {\n\tgetTable() {\n\t\treturn BattleAbilities;\n\t}\n\tgetDefaultResults(reverseSort?: boolean): SearchRow[] {\n\t\tconst results: SearchRow[] = [];\n\t\tfor (let id in BattleAbilities) {\n\t\t\tresults.push(['ability', id as ID]);\n\t\t}\n\t\tif (reverseSort) results.reverse();\n\t\treturn results;\n\t}\n\tgetBaseResults(): SearchRow[] {\n\t\tif (!this.species) return this.getDefaultResults();\n\t\tconst format = this.format;\n\t\tconst isHackmons = (format.includes('hackmons') || format.endsWith('bh'));\n\t\tconst isAAA = (format === 'almostanyability' || format.includes('aaa'));\n\t\tconst dex = this.dex;\n\t\tlet species = dex.species.get(this.species);\n\t\tlet abilitySet: SearchRow[] = [['header', \"Abilities\"]];\n\n\t\tif (species.isMega) {\n\t\t\tabilitySet.unshift(['html', `Will be <strong>${species.abilities['0']}</strong> after Mega Evolving.`]);\n\t\t\tspecies = dex.species.get(species.baseSpecies);\n\t\t}\n\t\tabilitySet.push(['ability', toID(species.abilities['0'])]);\n\t\tif (species.abilities['1']) {\n\t\t\tabilitySet.push(['ability', toID(species.abilities['1'])]);\n\t\t}\n\t\tif (species.abilities['H']) {\n\t\t\tabilitySet.push(['header', \"Hidden Ability\"]);\n\t\t\tabilitySet.push(['ability', toID(species.abilities['H'])]);\n\t\t}\n\t\tif (species.abilities['S']) {\n\t\t\tabilitySet.push(['header', \"Special Event Ability\"]);\n\t\t\tabilitySet.push(['ability', toID(species.abilities['S'])]);\n\t\t}\n\t\tif (isAAA || format.includes('metronomebattle') || isHackmons) {\n\t\t\tlet abilities: ID[] = [];\n\t\t\tfor (let i in this.getTable()) {\n\t\t\t\tconst ability = dex.abilities.get(i);\n\t\t\t\tif (ability.isNonstandard) continue;\n\t\t\t\tif (ability.gen > dex.gen) continue;\n\t\t\t\tabilities.push(ability.id);\n\t\t\t}\n\n\t\t\tlet goodAbilities: SearchRow[] = [['header', \"Abilities\"]];\n\t\t\tlet poorAbilities: SearchRow[] = [['header', \"Situational Abilities\"]];\n\t\t\tlet badAbilities: SearchRow[] = [['header', \"Unviable Abilities\"]];\n\t\t\tfor (const ability of abilities.sort().map(abil => dex.abilities.get(abil))) {\n\t\t\t\tlet rating = ability.rating;\n\t\t\t\tif (ability.id === 'normalize') rating = 3;\n\t\t\t\tif (rating >= 3) {\n\t\t\t\t\tgoodAbilities.push(['ability', ability.id]);\n\t\t\t\t} else if (rating >= 2) {\n\t\t\t\t\tpoorAbilities.push(['ability', ability.id]);\n\t\t\t\t} else {\n\t\t\t\t\tbadAbilities.push(['ability', ability.id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tabilitySet = [...goodAbilities, ...poorAbilities, ...badAbilities];\n\t\t\tif (species.isMega) {\n\t\t\t\tif (isAAA) {\n\t\t\t\t\tabilitySet.unshift(['html', `Will be <strong>${species.abilities['0']}</strong> after Mega Evolving.`]);\n\t\t\t\t}\n\t\t\t\t// species is unused after this, so no need to replace\n\t\t\t}\n\t\t}\n\t\treturn abilitySet;\n\t}\n\tfilter(row: SearchRow, filters: string[][]) {\n\t\tif (!filters) return true;\n\t\tif (row[0] !== 'ability') return true;\n\t\tconst ability = this.dex.abilities.get(row[1]);\n\t\tfor (const [filterType, value] of filters) {\n\t\t\tswitch (filterType) {\n\t\t\tcase 'pokemon':\n\t\t\t\tif (!Dex.hasAbility(this.dex.species.get(value), ability.name)) return false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\n\t\tthrow new Error(\"invalid sortcol\");\n\t}\n}\n\nclass BattleItemSearch extends BattleTypedSearch<'item'> {\n\tgetTable() {\n\t\treturn BattleItems;\n\t}\n\tgetDefaultResults(): SearchRow[] {\n\t\tlet table = BattleTeambuilderTable;\n\t\tif (this.formatType?.startsWith('bdsp')) {\n\t\t\ttable = table['gen8bdsp'];\n\t\t} else if (this.formatType === 'bw1') {\n\t\t\ttable = table['gen5bw1'];\n\t\t} else if (this.formatType === 'rs') {\n\t\t\ttable = table['gen3rs'];\n\t\t} else if (this.formatType === 'natdex') {\n\t\t\ttable = table[`gen${this.dex.gen}natdex`];\n\t\t} else if (this.formatType?.endsWith('doubles')) { // no natdex/bdsp doubles support\n\t\t\ttable = table[`gen${this.dex.gen}doubles`];\n\t\t} else if (this.formatType === 'metronome') {\n\t\t\ttable = table[`gen${this.dex.gen}metronome`];\n\t\t} else if (this.dex.gen < 9) {\n\t\t\ttable = table[`gen${this.dex.gen}`];\n\t\t}\n\t\tif (!table.itemSet) {\n\t\t\ttable.itemSet = table.items.map((r: any) => {\n\t\t\t\tif (typeof r === 'string') {\n\t\t\t\t\treturn ['item', r];\n\t\t\t\t}\n\t\t\t\treturn [r[0], r[1]];\n\t\t\t});\n\t\t\ttable.items = null;\n\t\t}\n\t\treturn table.itemSet;\n\t}\n\tgetBaseResults(): SearchRow[] {\n\t\tif (!this.species) return this.getDefaultResults();\n\t\tconst speciesName = this.dex.species.get(this.species).name;\n\t\tconst results = this.getDefaultResults();\n\t\tconst speciesSpecific: SearchRow[] = [];\n\t\tconst abilitySpecific: SearchRow[] = [];\n\t\tconst abilityItem = {\n\t\t\tprotosynthesis: 'boosterenergy',\n\t\t\tquarkdrive: 'boosterenergy',\n\t\t\t// poisonheal: 'toxicorb',\n\t\t\t// toxicboost: 'toxicorb',\n\t\t\t// flareboost: 'flameorb',\n\t\t}[toID(this.set?.ability) as string];\n\t\tfor (const row of results) {\n\t\t\tif (row[0] !== 'item') continue;\n\t\t\tconst item = this.dex.items.get(row[1]);\n\t\t\tif (item.itemUser?.includes(speciesName)) speciesSpecific.push(row);\n\t\t\tif (abilityItem === item.id) abilitySpecific.push(row);\n\t\t}\n\t\tif (speciesSpecific.length) {\n\t\t\treturn [\n\t\t\t\t['header', \"Specific to \" + speciesName],\n\t\t\t\t...speciesSpecific,\n\t\t\t\t...results,\n\t\t\t];\n\t\t}\n\t\tif (abilitySpecific.length) {\n\t\t\treturn [\n\t\t\t\t['header', `Specific to ${this.set!.ability!}`],\n\t\t\t\t...abilitySpecific,\n\t\t\t\t...results,\n\t\t\t];\n\t\t}\n\t\treturn results;\n\t}\n\toverride defaultFilter(results: SearchRow[]) {\n\t\tif (this.species && !this.dex.species.get(this.species).nfe) {\n\t\t\tresults.splice(results.findIndex(row => row[1] === 'eviolite'), 1);\n\t\t\treturn results;\n\t\t}\n\t\treturn results;\n\t}\n\tfilter(row: SearchRow, filters: string[][]) {\n\t\treturn true;\n\t}\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\n\t\tthrow new Error(\"invalid sortcol\");\n\t}\n}\n\nclass BattleMoveSearch extends BattleTypedSearch<'move'> {\n\toverride sortRow: SearchRow = ['sortmove', ''];\n\tgetTable() {\n\t\treturn BattleMovedex;\n\t}\n\tgetDefaultResults(): SearchRow[] {\n\t\tlet results: SearchRow[] = [];\n\t\tresults.push(['header', \"Moves\"]);\n\t\tfor (let id in BattleMovedex) {\n\t\t\tswitch (id) {\n\t\t\tcase 'paleowave':\n\t\t\t\tresults.push(['header', \"CAP moves\"]);\n\t\t\t\tbreak;\n\t\t\tcase 'magikarpsrevenge':\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresults.push(['move', id as ID]);\n\t\t}\n\t\treturn results;\n\t}\n\tprivate moveIsNotUseless(id: ID, species: Dex.Species, moves: string[], set: Dex.PokemonSet | null) {\n\t\t// IMPORTANT!\n\t\t// Please do not mark moves as useless if there is any doubt whatsoever.\n\t\t// I don't care if you think it's clutter or whatever. We are not in the\n\t\t// business of taking sides in arguments, or making judgments about\n\t\t// specific metagames. If it could potentially be useful in some metagame,\n\t\t// it is not useless.\n\t\tconst dex = this.dex;\n\n\t\tlet abilityid: ID = set ? toID(set.ability) : '' as ID;\n\t\tconst itemid: ID = set ? toID(set.item) : '' as ID;\n\n\t\tif (dex.gen === 1) {\n\t\t\t// Usually not useless for Gen 1\n\t\t\tif ([\n\t\t\t\t'acidarmor', 'amnesia', 'bind', 'blizzard', 'clamp', 'confuseray', 'counter', 'firespin', 'growth', 'headbutt', 'hyperbeam', 'mirrorcoat', 'mirrormove', 'pinmissile', 'razorleaf', 'sing', 'slash', 'sludge', 'twineedle', 'wrap',\n\t\t\t].includes(id)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Usually useless for Gen 1\n\t\t\tif ([\n\t\t\t\t'disable', 'haze', 'leechseed', 'roar', 'triattack', 'waterfall', 'whirlwind', 'bonemerang',\n\t\t\t].includes(id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Not useless only when certain moves aren't present\n\t\t\tswitch (id) {\n\t\t\tcase 'bubblebeam': return (!moves.includes('surf') && !moves.includes('blizzard'));\n\t\t\tcase 'doubleedge': return !moves.includes('bodyslam');\n\t\t\tcase 'doublekick': return !moves.includes('submission');\n\t\t\tcase 'firepunch': return !moves.includes('fireblast');\n\t\t\tcase 'megadrain': return !moves.includes('razorleaf') && !moves.includes('surf');\n\t\t\tcase 'megakick': return !moves.includes('hyperbeam');\n\t\t\tcase 'reflect': return !moves.includes('barrier') && !moves.includes('acidarmor');\n\t\t\tcase 'stomp': return !moves.includes('headbutt');\n\t\t\tcase 'submission': return !moves.includes('highjumpkick');\n\t\t\tcase 'thunderpunch': return !moves.includes('thunderbolt');\n\t\t\tcase 'triattack': return !moves.includes('bodyslam');\n\t\t\t}\n\t\t\t// Useful and Useless moves for Stadium OU, which changes many game mechanics.\n\t\t\tif (this.formatType === 'stadium') {\n\t\t\t\tif (['doubleedge', 'focusenergy', 'haze'].includes(id)) return true;\n\t\t\t\tif (['hyperbeam', 'sing', 'hypnosis'].includes(id)) return false;\n\t\t\t\tswitch (id) {\n\t\t\t\tcase 'fly': return !moves.includes('drillpeck');\n\t\t\t\tcase 'dig': return !moves.includes('earthquake');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.formatType === 'letsgo') {\n\t\t\tif (['megadrain', 'teleport'].includes(id)) return true;\n\t\t}\n\n\t\tif (this.formatType === 'metronome') {\n\t\t\tif (id === 'metronome') return true;\n\t\t}\n\n\t\tif (itemid === 'pidgeotite') abilityid = 'noguard' as ID;\n\t\tif (itemid === 'blastoisinite') abilityid = 'megalauncher' as ID;\n\t\tif (itemid === 'aerodactylite') abilityid = 'toughclaws' as ID;\n\t\tif (itemid === 'glalitite') abilityid = 'refrigerate' as ID;\n\n\t\tswitch (id) {\n\t\tcase 'fakeout': case 'flamecharge': case 'nuzzle': case 'poweruppunch': case 'trailblaze':\n\t\t\treturn abilityid !== 'sheerforce';\n\t\tcase 'solarbeam': case 'solarblade':\n\t\t\treturn ['desolateland', 'drought', 'chlorophyll', 'orichalcumpulse'].includes(abilityid) || itemid === 'powerherb';\n\t\tcase 'dynamicpunch': case 'grasswhistle': case 'inferno': case 'sing':\n\t\t\treturn abilityid === 'noguard';\n\t\tcase 'heatcrash': case 'heavyslam':\n\t\t\treturn species.weightkg >= (species.evos ? 75 : 130);\n\t\tcase 'aerialace':\n\t\t\treturn ['technician', 'toughclaws'].includes(abilityid) && !moves.includes('bravebird');\n\t\tcase 'ancientpower':\n\t\t\treturn ['serenegrace', 'technician'].includes(abilityid) || !moves.includes('powergem');\n\t\tcase 'aquajet':\n\t\t\treturn !moves.includes('jetpunch');\n\t\tcase 'aurawheel':\n\t\t\treturn species.baseSpecies === 'Morpeko';\n\t\tcase 'axekick':\n\t\t\treturn !moves.includes('highjumpkick');\n\t\tcase 'barrier':\n\t\t\treturn !moves.includes('acidarmor');\n\t\tcase 'bellydrum':\n\t\t\treturn moves.includes('aquajet') || moves.includes('jetpunch') || moves.includes('extremespeed') ||\n\t\t\t\t['iceface', 'unburden'].includes(abilityid);\n\t\tcase 'bulletseed':\n\t\t\treturn ['skilllink', 'technician'].includes(abilityid);\n\t\tcase 'chillingwater':\n\t\t\treturn !moves.includes('scald');\n\t\tcase 'counter': case 'mirrorcoat':\n\t\t\treturn species.baseStats.hp >= 65;\n\t\tcase 'dazzlinggleam':\n\t\t\treturn !moves.includes('alluringvoice') || this.formatType?.includes('doubles');\n\t\tcase 'darkvoid':\n\t\t\treturn dex.gen < 7;\n\t\tcase 'dualwingbeat':\n\t\t\treturn abilityid === 'technician' || !moves.includes('drillpeck');\n\t\tcase 'electroshot':\n\t\t\treturn true;\n\t\tcase 'feint':\n\t\t\treturn abilityid === 'refrigerate';\n\t\tcase 'futuresight':\n\t\t\treturn dex.gen > 5;\n\t\tcase 'grassyglide':\n\t\t\treturn abilityid === 'grassysurge';\n\t\tcase 'gyroball':\n\t\t\treturn species.baseStats.spe <= 60;\n\t\tcase 'headbutt':\n\t\t\treturn abilityid === 'serenegrace';\n\t\tcase 'hex':\n\t\t\treturn !moves.includes('infernalparade');\n\t\tcase 'hiddenpowerelectric':\n\t\t\treturn !(dex.gen < 4 && moves.includes('thunderpunch')) && !moves.includes('thunderbolt');\n\t\tcase 'hiddenpowerfighting':\n\t\t\treturn !(dex.gen < 4 && moves.includes('brickbreak')) && !moves.includes('aurasphere') && !moves.includes('focusblast');\n\t\tcase 'hiddenpowerfire':\n\t\t\treturn !(dex.gen < 4 && moves.includes('firepunch')) && !moves.includes('flamethrower') &&\n\t\t\t\t!moves.includes('mysticalfire') && !moves.includes('burningjealousy');\n\t\tcase 'hiddenpowergrass':\n\t\t\treturn !(dex.gen < 4 && moves.includes('leafblade')) ||\n\t\t\t\t(dex.gen > 3 && !moves.includes('energyball') && !moves.includes('grassknot') && !moves.includes('gigadrain'));\n\t\tcase 'hiddenpowerice':\n\t\t\treturn !moves.includes('icebeam') && (dex.gen < 4 && !moves.includes('icepunch')) ||\n\t\t\t\t(dex.gen > 5 && !moves.includes('aurorabeam') && !moves.includes('glaciate'));\n\t\tcase 'hiddenpowerflying':\n\t\t\treturn dex.gen < 4 && !moves.includes('drillpeck');\n\t\tcase 'hiddenpowerbug':\n\t\t\treturn dex.gen < 4 && !moves.includes('megahorn');\n\t\tcase 'hiddenpowerpsychic':\n\t\t\treturn species.baseSpecies === 'Unown';\n\t\tcase 'hyperspacefury':\n\t\t\treturn species.id === 'hoopaunbound';\n\t\tcase 'hypnosis':\n\t\t\treturn (dex.gen < 4 && !moves.includes('sleeppowder')) || (dex.gen > 6 && abilityid === 'baddreams');\n\t\tcase 'icepunch':\n\t\t\treturn !moves.includes('icespinner') || ['sheerforce', 'ironfist'].includes(abilityid) || itemid === 'punchingglove';\n\t\tcase 'iciclecrash':\n\t\t\treturn !moves.includes('mountaingale');\n\t\tcase 'iciclespear':\n\t\t\treturn dex.gen > 3;\n\t\tcase 'icywind':\n\t\t\t// Keldeo needs Hidden Power for Electric/Ghost\n\t\t\treturn species.baseSpecies === 'Keldeo' || this.isDoubles;\n\t\tcase 'infestation':\n\t\t\treturn moves.includes('stickyweb');\n\t\tcase 'irondefense':\n\t\t\treturn !moves.includes('acidarmor') && !moves.includes('barrier');\n\t\tcase 'irontail':\n\t\t\treturn dex.gen > 5 && !moves.includes('ironhead') && !moves.includes('gunkshot') && !moves.includes('poisonjab');\n\t\tcase 'jumpkick':\n\t\t\treturn !moves.includes('highjumpkick') && !moves.includes('axekick');\n\t\tcase 'lastresort':\n\t\t\treturn set && set.moves.length < 3;\n\t\tcase 'leafblade':\n\t\t\treturn true;\n\t\tcase 'leechlife':\n\t\t\treturn dex.gen > 6;\n\t\tcase 'magiccoat':\n\t\t\treturn dex.gen > 3;\n\t\tcase 'meteorbeam':\n\t\t\treturn true;\n\t\tcase 'mysticalfire':\n\t\t\treturn dex.gen > 6 && !moves.includes('flamethrower');\n\t\tcase 'naturepower':\n\t\t\treturn dex.gen === 5;\n\t\tcase 'needlearm':\n\t\t\treturn dex.gen < 4;\n\t\tcase 'nightslash':\n\t\t\treturn !moves.includes('crunch') && !(moves.includes('knockoff') && dex.gen >= 6);\n\t\tcase 'outrage':\n\t\t\treturn dex.gen > 3 && !moves.includes('glaiverush');\n\t\tcase 'petaldance':\n\t\t\treturn abilityid === 'owntempo';\n\t\tcase 'phantomforce':\n\t\t\treturn (!moves.includes('poltergeist') && !moves.includes('shadowclaw')) || this.isDoubles;\n\t\tcase 'poisonfang':\n\t\t\treturn species.types.includes('Poison') && !moves.includes('gunkshot') && !moves.includes('poisonjab');\n\t\tcase 'raindance':\n\t\t\treturn dex.gen < 4;\n\t\tcase 'relicsong':\n\t\t\treturn species.id === 'meloetta';\n\t\tcase 'refresh':\n\t\t\treturn !moves.includes('aromatherapy') && !moves.includes('healbell');\n\t\tcase 'risingvoltage':\n\t\t\treturn abilityid === 'electricsurge' || abilityid === 'hadronengine';\n\t\tcase 'rocktomb':\n\t\t\treturn abilityid === 'technician';\n\t\tcase 'selfdestruct':\n\t\t\treturn dex.gen < 5 && !moves.includes('explosion');\n\t\tcase 'shadowpunch':\n\t\t\treturn abilityid === 'ironfist' && !moves.includes('ragefist');\n\t\tcase 'shelter':\n\t\t\treturn !moves.includes('acidarmor') && !moves.includes('irondefense');\n\t\tcase 'skyuppercut':\n\t\t\treturn dex.gen < 4;\n\t\tcase 'smackdown':\n\t\t\treturn species.types.includes('Ground');\n\t\tcase 'smartstrike':\n\t\t\treturn species.types.includes('Steel') && !moves.includes('ironhead');\n\t\tcase 'soak':\n\t\t\treturn abilityid === 'unaware';\n\t\tcase 'steelwing':\n\t\t\treturn !moves.includes('ironhead');\n\t\tcase 'stompingtantrum':\n\t\t\treturn (!moves.includes('earthquake') && !moves.includes('drillrun')) || this.isDoubles;\n\t\tcase 'stunspore':\n\t\t\treturn !moves.includes('thunderwave');\n\t\tcase 'sunnyday':\n\t\t\treturn dex.gen < 4;\n\t\tcase 'technoblast':\n\t\t\treturn dex.gen > 5 && itemid.endsWith('drive') || itemid === 'dousedrive';\n\t\tcase 'teleport':\n\t\t\treturn dex.gen > 7;\n\t\tcase 'temperflare':\n\t\t\treturn (!moves.includes('flareblitz') && !moves.includes('pyroball') && !moves.includes('sacredfire') &&\n\t\t\t\t!moves.includes('bitterblade') && !moves.includes('firepunch')) || this.isDoubles;\n\t\tcase 'terrainpulse': case 'waterpulse':\n\t\t\treturn ['megalauncher', 'technician'].includes(abilityid) && !moves.includes('originpulse');\n\t\tcase 'thief':\n\t\t\treturn dex.gen === 2;\n\t\tcase 'toxicspikes':\n\t\t\treturn abilityid !== 'toxicdebris';\n\t\tcase 'triattack':\n\t\t\treturn dex.gen > 3;\n\t\tcase 'trickroom':\n\t\t\treturn species.baseStats.spe <= 100;\n\t\tcase 'wildcharge':\n\t\t\treturn !moves.includes('supercellslam');\n\t\tcase 'zapcannon':\n\t\t\treturn abilityid === 'noguard' || (dex.gen < 4 && !moves.includes('thunderwave'));\n\t\t}\n\n\t\tif (this.isDoubles && BattleMoveSearch.GOOD_DOUBLES_MOVES.includes(id)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst move = dex.moves.get(id);\n\t\tif (!move.exists) return true;\n\t\tif ((move.status === 'slp' || id === 'yawn') && dex.gen === 9 && !this.formatType) {\n\t\t\treturn false;\n\t\t}\n\t\tif (move.category === 'Status') {\n\t\t\treturn BattleMoveSearch.GOOD_STATUS_MOVES.includes(id);\n\t\t}\n\t\tif (move.basePower < 75) {\n\t\t\treturn BattleMoveSearch.GOOD_WEAK_MOVES.includes(id) || (abilityid === 'technician' && move.basePower === 60);\n\t\t}\n\t\tif (id === 'skydrop') return true;\n\t\t// strong moves\n\t\tif (move.flags['charge']) {\n\t\t\treturn itemid === 'powerherb';\n\t\t}\n\t\tif (move.flags['recharge']) {\n\t\t\treturn false;\n\t\t}\n\t\tif (move.flags['slicing'] && abilityid === 'sharpness') {\n\t\t\treturn true;\n\t\t}\n\t\treturn !BattleMoveSearch.BAD_STRONG_MOVES.includes(id);\n\t}\n\tstatic readonly GOOD_STATUS_MOVES = [\n\t\t'acidarmor', 'agility', 'aromatherapy', 'auroraveil', 'autotomize', 'banefulbunker', 'batonpass', 'bellydrum', 'bulkup', 'burningbulwark', 'calmmind', 'chillyreception', 'clangoroussoul', 'coil', 'cottonguard', 'courtchange', 'curse', 'defog', 'destinybond', 'detect', 'disable', 'dragondance', 'encore', 'extremeevoboost', 'filletaway', 'geomancy', 'glare', 'haze', 'healbell', 'healingwish', 'healorder', 'heartswap', 'honeclaws', 'kingsshield', 'leechseed', 'lightscreen', 'lovelykiss', 'lunardance', 'magiccoat', 'maxguard', 'memento', 'milkdrink', 'moonlight', 'morningsun', 'nastyplot', 'naturesmadness', 'noretreat', 'obstruct', 'painsplit', 'partingshot', 'perishsong', 'protect', 'quiverdance', 'recover', 'reflect', 'reflecttype', 'rest', 'revivalblessing', 'roar', 'rockpolish', 'roost', 'shedtail', 'shellsmash', 'shiftgear', 'shoreup', 'silktrap', 'slackoff', 'sleeppowder', 'sleeptalk', 'softboiled', 'spikes', 'spikyshield', 'spore', 'stealthrock', 'stickyweb', 'strengthsap', 'substitute', 'switcheroo', 'swordsdance', 'synthesis', 'tailglow', 'tailwind', 'taunt', 'thunderwave', 'tidyup', 'toxic', 'transform', 'trick', 'victorydance', 'whirlwind', 'willowisp', 'wish', 'yawn',\n\t] as ID[] as readonly ID[];\n\tstatic readonly GOOD_WEAK_MOVES = [\n\t\t'accelerock', 'acrobatics', 'aquacutter', 'avalanche', 'barbbarrage', 'bonemerang', 'bouncybubble', 'bulletpunch', 'buzzybuzz', 'ceaselessedge', 'circlethrow', 'clearsmog', 'doubleironbash', 'dragondarts', 'dragontail', 'drainingkiss', 'endeavor', 'facade', 'firefang', 'flipturn', 'flowertrick', 'freezedry', 'frustration', 'geargrind', 'gigadrain', 'grassknot', 'gyroball', 'icefang', 'iceshard', 'iciclespear', 'infernalparade', 'knockoff', 'lastrespects', 'lowkick', 'machpunch', 'mortalspin', 'mysticalpower', 'naturesmadness', 'nightshade', 'nuzzle', 'pikapapow', 'populationbomb', 'psychocut', 'psyshieldbash', 'pursuit', 'quickattack', 'ragefist', 'rapidspin', 'return', 'rockblast', 'ruination', 'saltcure', 'scorchingsands', 'seismictoss', 'shadowclaw', 'shadowsneak', 'sizzlyslide', 'stoneaxe', 'storedpower', 'stormthrow', 'suckerpunch', 'superfang', 'surgingstrikes', 'tachyoncutter', 'tailslap', 'thunderclap', 'tripleaxel', 'tripledive', 'twinbeam', 'uturn', 'vacuumwave', 'veeveevolley', 'voltswitch', 'watershuriken', 'weatherball',\n\t] as ID[] as readonly ID[];\n\tstatic readonly BAD_STRONG_MOVES = [\n\t\t'belch', 'burnup', 'crushclaw', 'dragonrush', 'dreameater', 'eggbomb', 'firepledge', 'flyingpress', 'futuresight', 'grasspledge', 'hyperbeam', 'hyperfang', 'hyperspacehole', 'jawlock', 'landswrath', 'megakick', 'megapunch', 'mistyexplosion', 'muddywater', 'nightdaze', 'pollenpuff', 'rockclimb', 'selfdestruct', 'shelltrap', 'skyuppercut', 'slam', 'strength', 'submission', 'synchronoise', 'takedown', 'thrash', 'uproar', 'waterpledge',\n\t] as ID[] as readonly ID[];\n\tstatic readonly GOOD_DOUBLES_MOVES = [\n\t\t'allyswitch', 'bulldoze', 'coaching', 'electroweb', 'faketears', 'fling', 'followme', 'healpulse', 'helpinghand', 'junglehealing', 'lifedew', 'lunarblessing', 'muddywater', 'pollenpuff', 'psychup', 'ragepowder', 'safeguard', 'skillswap', 'snipeshot', 'wideguard', 'decorate', 'snarl',\n\t] as ID[] as readonly ID[];\n\tgetBaseResults() {\n\t\tif (!this.species) return this.getDefaultResults();\n\t\tconst dex = this.dex;\n\t\tlet species = dex.species.get(this.species);\n\t\tconst format = this.format;\n\t\tconst isHackmons = (format.includes('hackmons') || format.endsWith('bh'));\n\t\tconst isSTABmons = (format.includes('stabmons') || format === 'staaabmons');\n\t\tconst isTradebacks = format.includes('tradebacks');\n\t\tconst regionBornLegality = dex.gen >= 6 &&\n\t\t\t(/^battle(spot|stadium|festival)/.test(format) || format.startsWith('bss') ||\n\t\t\t\tformat.startsWith('vgc') || (dex.gen === 9 && this.formatType !== 'natdex'));\n\n\t\tlet learnsetid = this.firstLearnsetid(species.id);\n\t\tlet moves: string[] = [];\n\t\tlet sketchMoves: string[] = [];\n\t\tlet sketch = false;\n\t\tlet gen = `${dex.gen}`;\n\t\tlet lsetTable = BattleTeambuilderTable;\n\t\tif (this.formatType?.startsWith('bdsp')) lsetTable = lsetTable['gen8bdsp'];\n\t\tif (this.formatType === 'letsgo') lsetTable = lsetTable['gen7letsgo'];\n\t\tif (this.formatType === 'bw1') lsetTable = lsetTable['gen5bw1'];\n\t\tif (this.formatType === 'rs') lsetTable = lsetTable['gen3rs'];\n\t\tif (this.formatType?.startsWith('ssdlc1')) lsetTable = lsetTable['gen8dlc1'];\n\t\tif (this.formatType?.startsWith('predlc')) lsetTable = lsetTable['gen9predlc'];\n\t\tif (this.formatType?.startsWith('svdlc1')) lsetTable = lsetTable['gen9dlc1'];\n\t\twhile (learnsetid) {\n\t\t\tlet learnset = lsetTable.learnsets[learnsetid];\n\t\t\tif (learnset) {\n\t\t\t\tfor (let moveid in learnset) {\n\t\t\t\t\tlet learnsetEntry = learnset[moveid];\n\t\t\t\t\tconst move = dex.moves.get(moveid);\n\t\t\t\t\tconst minGenCode: { [gen: number]: string } = { 6: 'p', 7: 'q', 8: 'g', 9: 'a' };\n\t\t\t\t\tif (regionBornLegality && !learnsetEntry.includes(minGenCode[dex.gen])) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.eggMovesOnly(learnsetid, species.id) &&\n\t\t\t\t\t\t(!learnsetEntry.includes('e') || dex.gen !== 9)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t!learnsetEntry.includes(gen) &&\n\t\t\t\t\t\t(!isTradebacks ? true : !(move.gen <= dex.gen && learnsetEntry.includes(`${dex.gen + 1}`)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.formatType !== 'natdex' && move.isNonstandard === \"Past\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.formatType?.startsWith('dlc1') &&\n\t\t\t\t\t\tBattleTeambuilderTable['gen8dlc1']?.nonstandardMoves.includes(moveid)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.formatType?.includes('predlc') && this.formatType !== 'predlcnatdex' &&\n\t\t\t\t\t\tBattleTeambuilderTable['gen9predlc']?.nonstandardMoves.includes(moveid)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.formatType?.includes('svdlc1') && this.formatType !== 'svdlc1natdex' &&\n\t\t\t\t\t\tBattleTeambuilderTable['gen9dlc1']?.nonstandardMoves.includes(moveid)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (moves.includes(moveid)) continue;\n\t\t\t\t\tmoves.push(moveid);\n\t\t\t\t\tif (moveid === 'sketch') sketch = true;\n\t\t\t\t\tif (moveid === 'hiddenpower') {\n\t\t\t\t\t\tmoves.push(\n\t\t\t\t\t\t\t'hiddenpowerbug', 'hiddenpowerdark', 'hiddenpowerdragon', 'hiddenpowerelectric', 'hiddenpowerfighting', 'hiddenpowerfire', 'hiddenpowerflying', 'hiddenpowerghost', 'hiddenpowergrass', 'hiddenpowerground', 'hiddenpowerice', 'hiddenpowerpoison', 'hiddenpowerpsychic', 'hiddenpowerrock', 'hiddenpowersteel', 'hiddenpowerwater'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlearnsetid = this.nextLearnsetid(learnsetid, species.id, true);\n\t\t}\n\t\tif (sketch || isHackmons) {\n\t\t\tif (isHackmons) moves = [];\n\t\t\tfor (let id in BattleMovedex) {\n\t\t\t\tif (!format.startsWith('cap') && (id === 'paleowave' || id === 'shadowstrike')) continue;\n\t\t\t\tconst move = dex.moves.get(id);\n\t\t\t\tif (move.gen > dex.gen) continue;\n\t\t\t\tif (sketch) {\n\t\t\t\t\tif (move.flags['nosketch'] || move.isMax || move.isZ) continue;\n\t\t\t\t\tif (move.isNonstandard && move.isNonstandard !== 'Past') continue;\n\t\t\t\t\tif (move.isNonstandard === 'Past' && this.formatType !== 'natdex') continue;\n\t\t\t\t\tsketchMoves.push(move.id);\n\t\t\t\t} else {\n\t\t\t\t\tif (!(dex.gen < 8 || this.formatType === 'natdex') && move.isZ) continue;\n\t\t\t\t\tif (typeof move.isMax === 'string') continue;\n\t\t\t\t\tif (move.isMax && dex.gen > 8) continue;\n\t\t\t\t\tif (move.isNonstandard === 'Past' && this.formatType !== 'natdex') continue;\n\t\t\t\t\tif (move.isNonstandard === 'LGPE' && this.formatType !== 'letsgo') continue;\n\t\t\t\t\tmoves.push(move.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.formatType === 'metronome') moves = ['metronome'];\n\t\tif (isSTABmons) {\n\t\t\tfor (let id in this.getTable()) {\n\t\t\t\tconst move = dex.moves.get(id);\n\t\t\t\tif (moves.includes(move.id)) continue;\n\t\t\t\tif (move.gen > dex.gen) continue;\n\t\t\t\tif (move.isZ || move.isMax || (move.isNonstandard && move.isNonstandard !== 'Unobtainable')) continue;\n\n\t\t\t\tconst speciesTypes: string[] = [];\n\t\t\t\tconst moveTypes: string[] = [];\n\t\t\t\tfor (let i = dex.gen; i >= species.gen && i >= move.gen; i--) {\n\t\t\t\t\tconst genDex = Dex.forGen(i);\n\t\t\t\t\tmoveTypes.push(genDex.moves.get(move.name).type);\n\n\t\t\t\t\tconst pokemon = genDex.species.get(species.name);\n\t\t\t\t\tlet baseSpecies = genDex.species.get(pokemon.changesFrom || pokemon.name);\n\t\t\t\t\tif (!pokemon.battleOnly) speciesTypes.push(...pokemon.types);\n\t\t\t\t\tlet prevo = pokemon.prevo;\n\t\t\t\t\twhile (prevo) {\n\t\t\t\t\t\tconst prevoSpecies = genDex.species.get(prevo);\n\t\t\t\t\t\tspeciesTypes.push(...prevoSpecies.types);\n\t\t\t\t\t\tprevo = prevoSpecies.prevo;\n\t\t\t\t\t}\n\t\t\t\t\tif (pokemon.battleOnly && typeof pokemon.battleOnly === 'string') {\n\t\t\t\t\t\tspecies = dex.species.get(pokemon.battleOnly);\n\t\t\t\t\t}\n\t\t\t\t\tconst excludedForme = (s: Dex.Species) => [\n\t\t\t\t\t\t'Alola', 'Alola-Totem', 'Galar', 'Galar-Zen', 'Hisui', 'Paldea', 'Paldea-Combat', 'Paldea-Blaze', 'Paldea-Aqua',\n\t\t\t\t\t].includes(s.forme);\n\t\t\t\t\tif (baseSpecies.otherFormes && !['Wormadam', 'Urshifu'].includes(baseSpecies.baseSpecies)) {\n\t\t\t\t\t\tif (!excludedForme(species)) speciesTypes.push(...baseSpecies.types);\n\t\t\t\t\t\tfor (const formeName of baseSpecies.otherFormes) {\n\t\t\t\t\t\t\tconst forme = dex.species.get(formeName);\n\t\t\t\t\t\t\tif (!forme.battleOnly && !excludedForme(forme)) speciesTypes.push(...forme.types);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet valid = false;\n\t\t\t\tfor (let type of moveTypes) {\n\t\t\t\t\tif (speciesTypes.includes(type)) {\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (valid) moves.push(id);\n\t\t\t}\n\t\t}\n\n\t\tmoves.sort();\n\t\tsketchMoves.sort();\n\n\t\tlet usableMoves: SearchRow[] = [];\n\t\tlet uselessMoves: SearchRow[] = [];\n\t\tfor (const id of moves) {\n\t\t\tconst isUsable = this.moveIsNotUseless(id as ID, species, moves, this.set);\n\t\t\tif (isUsable) {\n\t\t\t\tif (!usableMoves.length) usableMoves.push(['header', \"Moves\"]);\n\t\t\t\tusableMoves.push(['move', id as ID]);\n\t\t\t} else {\n\t\t\t\tif (!uselessMoves.length) uselessMoves.push(['header', \"Usually useless moves\"]);\n\t\t\t\tuselessMoves.push(['move', id as ID]);\n\t\t\t}\n\t\t}\n\t\tif (sketchMoves.length) {\n\t\t\tusableMoves.push(['header', \"Sketched moves\"]);\n\t\t\tuselessMoves.push(['header', \"Useless sketched moves\"]);\n\t\t}\n\t\tfor (const id of sketchMoves) {\n\t\t\tconst isUsable = this.moveIsNotUseless(id as ID, species, sketchMoves, this.set);\n\t\t\tif (isUsable) {\n\t\t\t\tusableMoves.push(['move', id as ID]);\n\t\t\t} else {\n\t\t\t\tuselessMoves.push(['move', id as ID]);\n\t\t\t}\n\t\t}\n\t\treturn [...usableMoves, ...uselessMoves];\n\t}\n\tfilter(row: SearchRow, filters: string[][]) {\n\t\tif (!filters) return true;\n\t\tif (row[0] !== 'move') return true;\n\t\tconst move = this.dex.moves.get(row[1]);\n\t\tfor (const [filterType, value] of filters) {\n\t\t\tswitch (filterType) {\n\t\t\tcase 'type':\n\t\t\t\tif (move.type !== value) return false;\n\t\t\t\tbreak;\n\t\t\tcase 'category':\n\t\t\t\tif (move.category !== value) return false;\n\t\t\t\tbreak;\n\t\t\tcase 'pokemon':\n\t\t\t\tif (!this.canLearn(value as ID, move.id)) return false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tsort(results: SearchRow[], sortCol: string, reverseSort?: boolean): SearchRow[] {\n\t\tconst sortOrder = reverseSort ? -1 : 1;\n\t\tswitch (sortCol) {\n\t\tcase 'power':\n\t\t\tlet powerTable: { [id: string]: number | undefined } = {\n\t\t\t\treturn: 102, frustration: 102, spitup: 300, trumpcard: 200, naturalgift: 80, grassknot: 120,\n\t\t\t\tlowkick: 120, gyroball: 150, electroball: 150, flail: 200, reversal: 200, present: 120,\n\t\t\t\twringout: 120, crushgrip: 120, heatcrash: 120, heavyslam: 120, fling: 130, magnitude: 150,\n\t\t\t\tbeatup: 24, punishment: 1020, psywave: 1250, nightshade: 1200, seismictoss: 1200,\n\t\t\t\tdragonrage: 1140, sonicboom: 1120, superfang: 1350, endeavor: 1399, sheercold: 1501,\n\t\t\t\tfissure: 1500, horndrill: 1500, guillotine: 1500,\n\t\t\t};\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\n\t\t\t\tlet move1 = this.dex.moves.get(id1);\n\t\t\t\tlet move2 = this.dex.moves.get(id2);\n\t\t\t\tlet pow1 = move1.basePower || powerTable[id1] || (move1.category === 'Status' ? -1 : 1400);\n\t\t\t\tlet pow2 = move2.basePower || powerTable[id2] || (move2.category === 'Status' ? -1 : 1400);\n\t\t\t\treturn (pow2 - pow1) * sortOrder;\n\t\t\t});\n\t\tcase 'accuracy':\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\n\t\t\t\tlet accuracy1 = this.dex.moves.get(id1).accuracy || 0;\n\t\t\t\tlet accuracy2 = this.dex.moves.get(id2).accuracy || 0;\n\t\t\t\tif (accuracy1 === true) accuracy1 = 101;\n\t\t\t\tif (accuracy2 === true) accuracy2 = 101;\n\t\t\t\treturn (accuracy2 - accuracy1) * sortOrder;\n\t\t\t});\n\t\tcase 'pp':\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\n\t\t\t\tlet pp1 = this.dex.moves.get(id1).pp || 0;\n\t\t\t\tlet pp2 = this.dex.moves.get(id2).pp || 0;\n\t\t\t\treturn (pp2 - pp1) * sortOrder;\n\t\t\t});\n\t\tcase 'name':\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\n\t\t\t\tconst name1 = id1;\n\t\t\t\tconst name2 = id2;\n\t\t\t\treturn (name1 < name2 ? -1 : name1 > name2 ? 1 : 0) * sortOrder;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(\"invalid sortcol\");\n\t}\n}\n\nclass BattleCategorySearch extends BattleTypedSearch<'category'> {\n\tgetTable() {\n\t\treturn { physical: 1, special: 1, status: 1 };\n\t}\n\tgetDefaultResults(reverseSort?: boolean): SearchRow[] {\n\t\tconst results: SearchRow[] = [\n\t\t\t['category', 'physical' as ID],\n\t\t\t['category', 'special' as ID],\n\t\t\t['category', 'status' as ID],\n\t\t];\n\t\tif (reverseSort) results.reverse();\n\t\treturn results;\n\t}\n\tgetBaseResults() {\n\t\treturn this.getDefaultResults();\n\t}\n\tfilter(row: SearchRow, filters: string[][]): boolean {\n\t\tthrow new Error(\"invalid filter\");\n\t}\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\n\t\tthrow new Error(\"invalid sortcol\");\n\t}\n}\n\nclass BattleTypeSearch extends BattleTypedSearch<'type'> {\n\tgetTable() {\n\t\treturn window.BattleTypeChart;\n\t}\n\tgetDefaultResults(reverseSort?: boolean): SearchRow[] {\n\t\tconst results: SearchRow[] = [];\n\t\tfor (let id in window.BattleTypeChart) {\n\t\t\tresults.push(['type', id as ID]);\n\t\t}\n\t\tif (reverseSort) results.reverse();\n\t\treturn results;\n\t}\n\tgetBaseResults() {\n\t\treturn this.getDefaultResults();\n\t}\n\tfilter(row: SearchRow, filters: string[][]): boolean {\n\t\tthrow new Error(\"invalid filter\");\n\t}\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\n\t\tthrow new Error(\"invalid sortcol\");\n\t}\n}\n"],"mappings":"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","ignoreList":[]}