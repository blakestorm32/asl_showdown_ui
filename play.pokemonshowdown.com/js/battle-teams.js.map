{"version":3,"file":"battle-teams.js","names":["Teams","_class","_proto","prototype","pack","team","getIv","ivs","s","undefined","toString","buf","_i2","length","set","name","species","speciesid","packName","item","ability","moves","map","join","nature","evs","gender","shiny","level","happiness","pokeball","hpType","gigantamax","dynamaxLevel","teraType","replace","unpack","endIndex","indexOf","firstPart","slice","pipeCount","split","i","j","lastI","push","substring","Dex","get","baseSpecies","items","abilities","includes","moveid","evstring","hp","Number","atk","def","spa","spd","spe","parseInt","misc","unpackSpeciesOnly","k","exportSet","dex","arguments","newFormat","text","gen","_i4","_set$moves2","move","startsWith","_set$moves3","first","BattleNatures","_i6","_Dex$statNames2","statNames","_set$evs","stat","plusMinus","plus","minus","ev","BattleStatNames","_i8","_Dex$statNames4","isNaN","_i10","_ref2","_set$moves4","export","sets","_i13","parseExportedTeamLine","line","isFirstLine","_item","_line$split","trim","toID","endsWith","parenIndex","lastIndexOf","evLines","_i15","evLine","spaceIndex","statid","BattleStatIDs","charAt","getNatureFromPlusMinus","ivLines","_i17","ivLine","statval","exec","natureIndex","import","buffer","lines","curSet","shift","pop","_i19"],"sources":["../src/battle-teams.ts"],"sourcesContent":["import { Dex, toID, type ModdedDex } from \"./battle-dex\";\nimport { BattleNatures, BattleStatNames, BattleStatIDs, type StatNameExceptHP, type ID } from \"./battle-dex-data\";\n\nexport declare namespace Teams {\n\t/**\n\t * Teams.PokemonSet can be sparse, in which case that entry should be\n\t * inferred from the rest of the set, according to sensible\n\t * defaults.\n\t */\n\texport interface FullPokemonSet {\n\t\t/** Defaults to species name (not including forme), like in games */\n\t\tname: string;\n\t\tspecies: string;\n\t\t/** Defaults to no item */\n\t\titem?: string;\n\t\t/** Defaults to no ability (error in Gen 3+) */\n\t\tability?: string;\n\t\tmoves: string[];\n\t\t/** Defaults to no nature (error in Gen 3+) */\n\t\tnature?: Dex.NatureName;\n\t\t/** Defaults to random legal gender, NOT subject to gender ratios */\n\t\tgender?: string;\n\t\t/** Defaults to flat 252's (200's/0's in Let's Go) (error in gen 3+) */\n\t\tevs: Partial<Dex.StatsTable>;\n\t\t/** Defaults to whatever makes sense - flat 31's unless you have Gyro Ball etc */\n\t\tivs: Dex.StatsTable;\n\t\t/** Defaults as you'd expect (100 normally, 50 in VGC-likes, 5 in LC) */\n\t\tlevel: number;\n\t\t/** Defaults to no (error if shiny event) */\n\t\tshiny: boolean;\n\t\t/** Defaults to 255 unless you have Frustration, in which case 0 */\n\t\thappiness: number;\n\t\t/** Defaults to event required ball, otherwise Pok√© Ball */\n\t\tpokeball: string;\n\t\t/** Defaults to the type of your Hidden Power in Moves, otherwise Dark */\n\t\thpType?: string;\n\t\t/** Defaults to 10 */\n\t\tdynamaxLevel?: number;\n\t\t/** Defaults to no (can only be yes for certain Pokemon) */\n\t\tgigantamax?: boolean;\n\t\t/** Defaults to the primary type */\n\t\tteraType?: string;\n\t}\n\texport interface PokemonSet extends Partial<FullPokemonSet> {\n\t\t/** Defaults to species name (not including forme), like in games */\n\t\tspecies: string;\n\t\tmoves: string[];\n\t}\n\texport interface Team {\n\t\tname: string;\n\t\tformat: ID;\n\t\tfolder: string;\n\t\t/** Note that this can be wrong if `.uploaded?.notLoaded` */\n\t\tpackedTeam: string;\n\t\tisBox: boolean;\n\t}\n}\n\nexport const Teams = new class {\n\tpack(team: Teams.PokemonSet[] | null): string {\n\t\tif (!team) return '';\n\n\t\tfunction getIv(ivs: Dex.StatsTable, s: keyof Dex.StatsTable): string {\n\t\t\treturn ivs[s] === 31 || ivs[s] === undefined ? '' : ivs[s].toString();\n\t\t}\n\n\t\tlet buf = '';\n\t\tfor (const set of team) {\n\t\t\tif (buf) buf += ']';\n\n\t\t\t// name\n\t\t\tbuf += (set.name || set.species);\n\n\t\t\t// species\n\t\t\tconst speciesid = this.packName(set.species || set.name);\n\t\t\tbuf += `|${this.packName(set.name || set.species) === speciesid ? '' : speciesid}`;\n\n\t\t\t// item\n\t\t\tbuf += `|${this.packName(set.item)}`;\n\n\t\t\t// ability\n\t\t\tbuf += `|${this.packName(set.ability)}`;\n\n\t\t\t// moves\n\t\t\tbuf += '|' + set.moves.map(this.packName).join(',');\n\n\t\t\t// nature\n\t\t\tbuf += `|${set.nature || ''}`;\n\n\t\t\t// evs\n\t\t\tlet evs = '|';\n\t\t\tif (set.evs) {\n\t\t\t\tevs = `|${set.evs['hp'] || ''},${set.evs['atk'] || ''},${set.evs['def'] || ''},` +\n\t\t\t\t\t`${set.evs['spa'] || ''},${set.evs['spd'] || ''},${set.evs['spe'] || ''}`;\n\t\t\t}\n\t\t\tbuf += evs === '|,,,,,' ? '|' : evs;\n\n\t\t\t// gender\n\t\t\tbuf += `|${set.gender || ''}`;\n\n\t\t\t// ivs\n\t\t\tlet ivs = '|';\n\t\t\tif (set.ivs) {\n\t\t\t\tivs = `|${getIv(set.ivs, 'hp')},${getIv(set.ivs, 'atk')},${getIv(set.ivs, 'def')},` +\n\t\t\t\t\t`${getIv(set.ivs, 'spa')},${getIv(set.ivs, 'spd')},${getIv(set.ivs, 'spe')}`;\n\t\t\t}\n\t\t\tbuf += ivs === '|,,,,,' ? '|' : ivs;\n\n\t\t\t// shiny\n\t\t\tbuf += `|${set.shiny ? 'S' : ''}`;\n\n\t\t\t// level\n\t\t\tbuf += `|${set.level && set.level !== 100 ? set.level : ''}`;\n\n\t\t\t// happiness\n\t\t\tbuf += `|${set.happiness !== undefined && set.happiness !== 255 ? set.happiness : ''}`;\n\n\t\t\tif (set.pokeball || set.hpType || set.gigantamax ||\n\t\t\t\t(set.dynamaxLevel !== undefined && set.dynamaxLevel !== 10) || set.teraType) {\n\t\t\t\tbuf += `,${set.hpType || ''}`;\n\t\t\t\tbuf += `,${this.packName(set.pokeball || '')}`;\n\t\t\t\tbuf += `,${set.gigantamax ? 'G' : ''}`;\n\t\t\t\tbuf += `,${set.dynamaxLevel !== undefined && set.dynamaxLevel !== 10 ? set.dynamaxLevel : ''}`;\n\t\t\t\tbuf += `,${set.teraType || ''}`;\n\t\t\t}\n\t\t}\n\n\t\treturn buf;\n\t}\n\t/** Very similar to toID but without the lowercase conversion */\n\tpackName(this: void, name: string | undefined | null) {\n\t\tif (!name) return '';\n\t\treturn name.replace(/[^A-Za-z0-9]+/g, '');\n\t}\n\n\tunpack(buf: string): Teams.PokemonSet[] {\n\t\tif (!buf) return [];\n\n\t\t// first, detect if this has team metadata\n\t\tconst endIndex = buf.indexOf(']');\n\t\tif (endIndex > 0) {\n\t\t\tconst firstPart = buf.slice(0, endIndex);\n\t\t\tconst pipeCount = firstPart.split('|').length - 1;\n\t\t\tif (pipeCount === 12 || pipeCount === 1) {\n\t\t\t\tbuf = buf.slice(buf.indexOf('|') + 1);\n\t\t\t}\n\t\t}\n\n\t\tconst team = [];\n\t\tlet i = 0;\n\t\tlet j = 0;\n\t\tlet lastI = 0;\n\n\t\twhile (true) {\n\t\t\tconst set: Teams.PokemonSet = {} as any;\n\t\t\tteam.push(set);\n\n\t\t\t// name\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tconst name = buf.substring(i, j);\n\t\t\ti = j + 1;\n\n\t\t\t// species\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tconst species = Dex.species.get(buf.substring(i, j) || name);\n\t\t\tset.species = species.name;\n\t\t\tif (species.baseSpecies !== name) set.name = name;\n\t\t\ti = j + 1;\n\n\t\t\t// item\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tset.item = Dex.items.get(buf.substring(i, j)).name;\n\t\t\ti = j + 1;\n\n\t\t\t// ability\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tconst ability = Dex.abilities.get(buf.substring(i, j)).name;\n\t\t\tset.ability = (species.abilities &&\n\t\t\t\t['', '0', '1', 'H', 'S'].includes(ability) ? species.abilities[ability as '0' || '0'] : ability);\n\t\t\ti = j + 1;\n\n\t\t\t// moves\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tset.moves = buf.substring(i, j).split(',').map(\n\t\t\t\tmoveid => Dex.moves.get(moveid).name\n\t\t\t);\n\t\t\ti = j + 1;\n\n\t\t\t// nature\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tset.nature = buf.substring(i, j) as Dex.NatureName;\n\t\t\tif (set.nature as any === 'undefined') delete set.nature;\n\t\t\ti = j + 1;\n\n\t\t\t// evs\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j !== i) {\n\t\t\t\tconst evstring = buf.substring(i, j);\n\t\t\t\tif (evstring.length > 5) {\n\t\t\t\t\tconst evs = evstring.split(',');\n\t\t\t\t\tset.evs = {\n\t\t\t\t\t\thp: Number(evs[0]) || 0,\n\t\t\t\t\t\tatk: Number(evs[1]) || 0,\n\t\t\t\t\t\tdef: Number(evs[2]) || 0,\n\t\t\t\t\t\tspa: Number(evs[3]) || 0,\n\t\t\t\t\t\tspd: Number(evs[4]) || 0,\n\t\t\t\t\t\tspe: Number(evs[5]) || 0,\n\t\t\t\t\t};\n\t\t\t\t} else if (evstring === '0') {\n\t\t\t\t\tset.evs = { hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0 };\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = j + 1;\n\n\t\t\t// gender\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (i !== j) set.gender = buf.substring(i, j);\n\t\t\ti = j + 1;\n\n\t\t\t// ivs\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j !== i) {\n\t\t\t\tconst ivs = buf.substring(i, j).split(',');\n\t\t\t\tset.ivs = {\n\t\t\t\t\thp: ivs[0] === '' ? 31 : Number(ivs[0]),\n\t\t\t\t\tatk: ivs[1] === '' ? 31 : Number(ivs[1]),\n\t\t\t\t\tdef: ivs[2] === '' ? 31 : Number(ivs[2]),\n\t\t\t\t\tspa: ivs[3] === '' ? 31 : Number(ivs[3]),\n\t\t\t\t\tspd: ivs[4] === '' ? 31 : Number(ivs[4]),\n\t\t\t\t\tspe: ivs[5] === '' ? 31 : Number(ivs[5]),\n\t\t\t\t};\n\t\t\t}\n\t\t\ti = j + 1;\n\n\t\t\t// shiny\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (i !== j) set.shiny = true;\n\t\t\ti = j + 1;\n\n\t\t\t// level\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (i !== j) set.level = parseInt(buf.substring(i, j), 10);\n\t\t\ti = j + 1;\n\n\t\t\t// happiness\n\t\t\tj = buf.indexOf(']', i);\n\t\t\tlet misc;\n\t\t\tif (j < 0) {\n\t\t\t\tif (i < buf.length) misc = buf.substring(i).split(',', 6);\n\t\t\t} else {\n\t\t\t\tif (i !== j) misc = buf.substring(i, j).split(',', 6);\n\t\t\t}\n\t\t\tif (misc) {\n\t\t\t\tset.happiness = (misc[0] ? Number(misc[0]) : undefined);\n\t\t\t\tset.hpType = misc[1] || undefined;\n\t\t\t\tset.pokeball = misc[2] || undefined;\n\t\t\t\tset.gigantamax = !!misc[3] || undefined;\n\t\t\t\tset.dynamaxLevel = (misc[4] ? Number(misc[4]) : undefined);\n\t\t\t\tset.teraType = misc[5] || undefined;\n\t\t\t}\n\t\t\ti = j + 1;\n\t\t\tif (j < 0 || i <= lastI) break;\n\t\t\tlastI = i;\n\t\t}\n\n\t\treturn team;\n\t}\n\tunpackSpeciesOnly(buf: string): string[] {\n\t\tif (!buf) return [];\n\n\t\tconst team = [];\n\t\tlet i = 0;\n\t\tlet lastI = 0;\n\n\t\twhile (true) {\n\t\t\tconst name = buf.slice(i, buf.indexOf('|', i));\n\t\t\ti = buf.indexOf('|', i) + 1;\n\n\t\t\tteam.push(buf.slice(i, buf.indexOf('|', i)) || name);\n\n\t\t\tfor (let k = 0; k < 9; k++) {\n\t\t\t\ti = buf.indexOf('|', i) + 1;\n\t\t\t}\n\n\t\t\ti = buf.indexOf(']', i) + 1;\n\n\t\t\tif (i < 1 || i <= lastI) break;\n\t\t\tlastI = i;\n\t\t}\n\n\t\treturn team;\n\t}\n\t/**\n\t * (You may wish to manually add two spaces to the end of every line so\n\t * linebreaks are preserved in Markdown; I assume mostly for Reddit.)\n\t */\n\texportSet(set: Teams.PokemonSet, dex: ModdedDex = Dex, newFormat?: boolean) {\n\t\tlet text = '';\n\n\t\t// core\n\t\tif (set.name && set.name !== set.species) {\n\t\t\ttext += `${set.name} (${set.species})`;\n\t\t} else {\n\t\t\ttext += `${set.species}`;\n\t\t}\n\t\tif (set.gender === 'M') text += ` (M)`;\n\t\tif (set.gender === 'F') text += ` (F)`;\n\t\tif (!newFormat && set.item) {\n\t\t\ttext += ` @ ${set.item}`;\n\t\t}\n\t\ttext += `\\n`;\n\t\tif ((set.item || set.ability || dex.gen >= 2) && newFormat) {\n\t\t\tif (set.ability || dex.gen >= 3) text += `[${set.ability || '(select ability)'}]`;\n\t\t\tif (set.item || dex.gen >= 2) text += ` @ ${set.item || \"(no item)\"}`;\n\t\t\ttext += `\\n`;\n\t\t} else if (set.ability && set.ability !== 'No Ability') {\n\t\t\ttext += `Ability: ${set.ability}\\n`;\n\t\t}\n\n\t\tif (newFormat) {\n\t\t\tif (set.moves) {\n\t\t\t\tfor (let move of set.moves) {\n\t\t\t\t\tif (move.startsWith('Hidden Power ')) {\n\t\t\t\t\t\tconst hpType = move.slice(13);\n\t\t\t\t\t\tmove = move.slice(0, 13);\n\t\t\t\t\t\tmove = `${move}[${hpType}]`;\n\t\t\t\t\t}\n\t\t\t\t\ttext += `- ${move || ''}\\n`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = set.moves?.length || 0; i < 4; i++) {\n\t\t\t\ttext += `- \\n`;\n\t\t\t}\n\t\t}\n\n\t\t// stats\n\t\tlet first = true;\n\t\tif (set.evs || set.nature) {\n\t\t\tconst nature = newFormat ? BattleNatures[set.nature as 'Serious'] : null;\n\t\t\tfor (const stat of Dex.statNames) {\n\t\t\t\tconst plusMinus = !newFormat ? '' : nature?.plus === stat ? '+' : nature?.minus === stat ? '-' : '';\n\t\t\t\tconst ev = set.evs?.[stat] || '';\n\t\t\t\tif (ev === '' && !plusMinus) continue;\n\t\t\t\ttext += first ? `EVs: ` : ` / `;\n\t\t\t\tfirst = false;\n\t\t\t\ttext += `${ev}${plusMinus} ${BattleStatNames[stat]}`;\n\t\t\t}\n\t\t}\n\t\tif (!first) {\n\t\t\tif (set.nature && newFormat) text += ` (${set.nature})`;\n\t\t\ttext += `\\n`;\n\t\t}\n\t\tif (set.nature && !newFormat) {\n\t\t\ttext += `${set.nature} Nature\\n`;\n\t\t} else if (['Hardy', 'Docile', 'Serious', 'Bashful', 'Quirky'].includes(set.nature!)) {\n\t\t\ttext += `${set.nature!} Nature\\n`;\n\t\t}\n\t\tfirst = true;\n\t\tif (set.ivs) {\n\t\t\tfor (const stat of Dex.statNames) {\n\t\t\t\tif (set.ivs[stat] === undefined || isNaN(set.ivs[stat]) || set.ivs[stat] === 31) continue;\n\t\t\t\tif (first) {\n\t\t\t\t\ttext += `IVs: `;\n\t\t\t\t\tfirst = false;\n\t\t\t\t} else {\n\t\t\t\t\ttext += ` / `;\n\t\t\t\t}\n\t\t\t\ttext += `${set.ivs[stat]} ${BattleStatNames[stat]}`;\n\t\t\t}\n\t\t}\n\t\tif (!first) {\n\t\t\ttext += `\\n`;\n\t\t}\n\n\t\t// details\n\t\tif (set.level && set.level !== 100) {\n\t\t\ttext += `Level: ${set.level}\\n`;\n\t\t}\n\t\tif (set.shiny) {\n\t\t\ttext += !newFormat ? `Shiny: Yes\\n` : `Shiny\\n`;\n\t\t}\n\t\tif (typeof set.happiness === 'number' && set.happiness !== 255 && !isNaN(set.happiness)) {\n\t\t\ttext += `Happiness: ${set.happiness}\\n`;\n\t\t}\n\t\tif (typeof set.dynamaxLevel === 'number' && set.dynamaxLevel !== 255 && !isNaN(set.dynamaxLevel)) {\n\t\t\ttext += `Dynamax Level: ${set.dynamaxLevel}\\n`;\n\t\t}\n\t\tif (set.gigantamax) {\n\t\t\ttext += !newFormat ? `Gigantamax: Yes\\n` : `Gigantamax\\n`;\n\t\t}\n\t\tif (set.teraType) {\n\t\t\ttext += `Tera Type: ${set.teraType}\\n`;\n\t\t}\n\n\t\tif (!newFormat) {\n\t\t\tfor (let move of set.moves || []) {\n\t\t\t\tif (move.startsWith('Hidden Power ')) {\n\t\t\t\t\tconst hpType = move.slice(13);\n\t\t\t\t\tmove = move.slice(0, 13);\n\t\t\t\t\tmove = !newFormat ? `${move}[${hpType}]` : `${move}${hpType}`;\n\t\t\t\t}\n\t\t\t\ttext += `- ${move}\\n`;\n\t\t\t}\n\t\t\tfor (let i = set.moves?.length || 0; i < 4; i++) {\n\t\t\t\ttext += `- \\n`;\n\t\t\t}\n\t\t}\n\n\t\ttext += `\\n`;\n\t\treturn text;\n\t}\n\t// TODO: finish this impl\n\t// getFullSet(set: Teams.PokemonSet, dex: ModdedDex): Teams.FullPokemonSet {\n\t// \t//\n\t// }\n\texport(sets: Teams.PokemonSet[], dex?: ModdedDex, newFormat?: boolean) {\n\t\tlet text = '';\n\t\tfor (const set of sets) {\n\t\t\t// core\n\t\t\ttext += Teams.exportSet(set, dex, newFormat);\n\t\t}\n\t\treturn text;\n\t}\n\n\tparseExportedTeamLine(line: string, isFirstLine: boolean, set: Dex.PokemonSet) {\n\t\tif (isFirstLine || line.startsWith('[')) {\n\t\t\tlet item;\n\t\t\t[line, item] = line.split('@');\n\t\t\tline = line.trim();\n\t\t\titem = item?.trim();\n\t\t\tif (item) {\n\t\t\t\tset.item = item;\n\t\t\t\tif (toID(set.item) === 'noitem') set.item = '';\n\t\t\t}\n\t\t\tif (line.endsWith(' (M)')) {\n\t\t\t\tset.gender = 'M';\n\t\t\t\tline = line.slice(0, -4);\n\t\t\t}\n\t\t\tif (line.endsWith(' (F)')) {\n\t\t\t\tset.gender = 'F';\n\t\t\t\tline = line.slice(0, -4);\n\t\t\t}\n\t\t\tif (line.startsWith('[') && line.endsWith(']')) {\n\t\t\t\t// the ending `]` is necessary to establish this as ability\n\t\t\t\t// (rather than nickname starting with `[`)\n\t\t\t\tset.ability = line.slice(1, -1);\n\t\t\t\tif (toID(set.ability) === 'selectability') {\n\t\t\t\t\tset.ability = '';\n\t\t\t\t}\n\t\t\t} else if (line) {\n\t\t\t\tconst parenIndex = line.lastIndexOf(' (');\n\t\t\t\tif (line.endsWith(')') && parenIndex !== -1) {\n\t\t\t\t\tset.species = Dex.species.get(line.slice(parenIndex + 2, -1)).name;\n\t\t\t\t\tset.name = line.slice(0, parenIndex);\n\t\t\t\t} else {\n\t\t\t\t\tset.species = Dex.species.get(line).name;\n\t\t\t\t\tset.name = '';\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (line.startsWith('Trait: ')) {\n\t\t\tset.ability = line.slice(7);\n\t\t} else if (line.startsWith('Ability: ')) {\n\t\t\tset.ability = line.slice(9);\n\t\t} else if (line.startsWith('Item: ')) {\n\t\t\tset.item = line.slice(6);\n\t\t} else if (line.startsWith('Nickname: ')) {\n\t\t\tset.name = line.slice(10);\n\t\t} else if (line.startsWith('Species: ')) {\n\t\t\tset.species = line.slice(9);\n\t\t} else if (line === 'Shiny: Yes' || line === 'Shiny') {\n\t\t\tset.shiny = true;\n\t\t} else if (line.startsWith('Level: ')) {\n\t\t\tset.level = +line.slice(7);\n\t\t} else if (line.startsWith('Happiness: ')) {\n\t\t\tset.happiness = +line.slice(11);\n\t\t} else if (line.startsWith('Pokeball: ')) {\n\t\t\tset.pokeball = line.slice(10);\n\t\t} else if (line.startsWith('Hidden Power: ')) {\n\t\t\tset.hpType = line.slice(14);\n\t\t} else if (line.startsWith('Dynamax Level: ')) {\n\t\t\tset.dynamaxLevel = +line.slice(15);\n\t\t} else if (line === 'Gigantamax: Yes' || line === 'Gigantamax') {\n\t\t\tset.gigantamax = true;\n\t\t} else if (line.startsWith('Tera Type: ')) {\n\t\t\tset.teraType = line.slice(11);\n\t\t} else if (line.startsWith('EVs: ')) {\n\t\t\tconst evLines = line.slice(5).split('(')[0].split('/');\n\t\t\tset.evs = { hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0 };\n\t\t\tlet plus = '', minus = '';\n\t\t\tfor (let evLine of evLines) {\n\t\t\t\tevLine = evLine.trim();\n\t\t\t\tconst spaceIndex = evLine.indexOf(' ');\n\t\t\t\tif (spaceIndex === -1) continue;\n\t\t\t\tconst statid = BattleStatIDs[evLine.slice(spaceIndex + 1)];\n\t\t\t\tif (!statid) continue;\n\t\t\t\tif (evLine.charAt(spaceIndex - 1) === '+') plus = statid;\n\t\t\t\tif (evLine.charAt(spaceIndex - 1) === '-') minus = statid;\n\t\t\t\tset.evs[statid] = parseInt(evLine.slice(0, spaceIndex), 10) || 0;\n\t\t\t}\n\t\t\tconst nature = this.getNatureFromPlusMinus(plus as StatNameExceptHP, minus as StatNameExceptHP);\n\t\t\tif (nature) set.nature = nature;\n\t\t} else if (line.startsWith('IVs: ')) {\n\t\t\tconst ivLines = line.slice(5).split(' / ');\n\t\t\tset.ivs = { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 };\n\t\t\tfor (let ivLine of ivLines) {\n\t\t\t\tivLine = ivLine.trim();\n\t\t\t\tconst spaceIndex = ivLine.indexOf(' ');\n\t\t\t\tif (spaceIndex === -1) continue;\n\t\t\t\tconst statid = BattleStatIDs[ivLine.slice(spaceIndex + 1)];\n\t\t\t\tif (!statid) continue;\n\t\t\t\tlet statval = parseInt(ivLine.slice(0, spaceIndex), 10);\n\t\t\t\tif (isNaN(statval)) statval = 31;\n\t\t\t\tset.ivs[statid] = statval;\n\t\t\t}\n\t\t} else if (/^[A-Za-z]+ (N|n)ature/.exec(line)) {\n\t\t\tlet natureIndex = line.indexOf(' Nature');\n\t\t\tif (natureIndex === -1) natureIndex = line.indexOf(' nature');\n\t\t\tif (natureIndex === -1) return;\n\t\t\tline = line.slice(0, natureIndex);\n\t\t\tif (line !== 'undefined') set.nature = line as Dex.NatureName;\n\t\t} else if (line.startsWith('-') || line.startsWith('~') || line.startsWith('Move:')) {\n\t\t\tif (line.startsWith('Move:')) line = line.slice(4);\n\t\t\tline = line.slice(line.charAt(1) === ' ' ? 2 : 1);\n\t\t\tif (line.startsWith('Hidden Power [')) {\n\t\t\t\tlet hpType = line.slice(14, line.indexOf(']')) as Dex.TypeName;\n\t\t\t\tif (hpType.includes(']') || hpType.includes('[')) hpType = '' as any;\n\t\t\t\tline = 'Hidden Power ' + hpType;\n\t\t\t\tset.hpType = hpType;\n\t\t\t}\n\t\t\tif (line === 'Frustration' && set.happiness === undefined) {\n\t\t\t\tset.happiness = 0;\n\t\t\t}\n\t\t\tset.moves.push(line);\n\t\t}\n\t}\n\tgetNatureFromPlusMinus(\n\t\tplus: StatNameExceptHP | '' | null, minus: StatNameExceptHP | '' | null\n\t): Dex.NatureName | null {\n\t\tif (!plus || !minus) return null;\n\t\tfor (const i in BattleNatures) {\n\t\t\tif (BattleNatures[i as 'Serious'].plus === plus && BattleNatures[i as 'Serious'].minus === minus) {\n\t\t\t\treturn i as Dex.NatureName;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\timport(buffer: string): Dex.PokemonSet[] {\n\t\tconst lines = buffer.split(\"\\n\");\n\n\t\tconst sets: Dex.PokemonSet[] = [];\n\t\tlet curSet: Dex.PokemonSet | null = null;\n\n\t\twhile (lines.length && !lines[0]) lines.shift();\n\t\twhile (lines.length && !lines[lines.length - 1]) lines.pop();\n\n\t\tif (lines.length === 1 && lines[0].includes('|')) {\n\t\t\treturn Teams.unpack(lines[0]);\n\t\t}\n\t\tfor (let line of lines) {\n\t\t\tline = line.trim();\n\t\t\tif (line === '' || line === '---') {\n\t\t\t\tcurSet = null;\n\t\t\t} else if (line.startsWith('===')) {\n\t\t\t\t// team backup format; ignore\n\t\t\t} else if (line.includes('|')) {\n\t\t\t\t// packed format\n\t\t\t\treturn Teams.unpack(line);\n\t\t\t} else if (!curSet) {\n\t\t\t\tcurSet = {\n\t\t\t\t\tname: '', species: '', gender: '',\n\t\t\t\t\tmoves: [],\n\t\t\t\t};\n\t\t\t\tsets.push(curSet);\n\t\t\t\tthis.parseExportedTeamLine(line, true, curSet);\n\t\t\t} else {\n\t\t\t\tthis.parseExportedTeamLine(line, false, curSet);\n\t\t\t}\n\t\t}\n\t\treturn sets;\n\t}\n};\n"],"mappings":"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","ignoreList":[]}