{"version":3,"file":"battle-tooltips.js","names":["ModifiableValue","battle","pokemon","serverPokemon","value","maxValue","comment","itemName","abilityName","weatherName","isAccuracy","dex","items","get","item","name","ability","baseAbility","abilities","moves","weather","exists","_proto","prototype","reset","arguments","length","undefined","tryItem","_this$pokemon","hasPseudoWeather","push","volatiles","ignoreKlutz","tryAbility","includes","_this$pokemon2","_this$pokemon3","effectiveAbility","tryWeather","_i2","_this$battle$sides2","sides","side","_i4","_side$active2","active","itemModify","factor","modify","abilityModify","weatherModify","round","tier","set","reason","setRange","Number","toFixed","toString","valueString","join","BattleTooltips","_this","clickTooltipEvent","e","isLocked","preventDefault","stopImmediatePropagation","holdLockTooltipEvent","hideTooltip","target","currentTarget","showTooltip","isClick","type","tagName","longTapTimeout","setTimeout","lockTooltip","LONG_CLICK_DELAY","LONG_TAP_DELAY","$","addClass","showTooltipEvent","cancelLongTap","elem","parentNode","removeChild","parentElem","removeClass","clearTimeout","_proto2","isPressed","handleTouchEnd","listen","_this2","$elem","on","unshowTooltip","click","args","dataset","tooltip","split","ownHeight","ownheight","buf","move","teamIndex","parseInt","nearSide","pokemonControlled","Math","floor","mySide","n","gmaxMove","myPokemon","showMoveTooltip","sideIndex","species","getBaseSpecies","baseSpecies","index","_i6","_side$pokemon2","otherPokemon","showPokemonTooltip","viewpointSwitched","activeIndex","pokemonIndex","ally","myAllyPokemon","showFieldTooltip","Promise","resolve","Error","stack","placeTooltip","innerHTML","hoveredElem","notRelativeToParent","scene","$turn","hoveredX1","offset","left","parent","hoveredY1","top","hoveredY2","outerHeight","x","max","y","$wrapper","document","body","append","selection","window","getSelection","_unused","css","min","documentElement","clientWidth","html","appendTo","find","height","clientHeight","width","outerWidth","availableWidth","scrollX","getStatusZMoveEffect","zMove","effect","zMoveEffects","boostText","boost","Object","entries","map","_ref","stat","BattleTextParser","getMaxMoveFromType","maxMoveTable","isZOrMax","text","zEffect","foeActive","foe","gameType","concat","filter","toID","_this$getMoveType","getMoveType","moveType","category","categoryDiff","zMoveFrom","Move","id","assign","moveName","zMoveTable","zMoveType","movePower","basePower","startsWith","maxMove","Dex","getTypeIcon","getCategoryIcon","showingMultipleBasePowers","prevBasePower","difference","basePowers","_i8","_foeActive2","getMoveBasePower","activeTarget","accuracy","getMoveAccuracy","calls","gen","calledMove","hardcoreMode","shortDesc","priority","desc","flags","defrost","protect","bypasssub","reflectable","contact","sound","powder","punch","pulse","bite","recoil","hasCrashDamage","bullet","slicing","wind","hpValues","hp","maxhp","failMessage","selfKO","clientPokemon","isActive","illusionIndex","_this3","genderBuf","gender","fxPrefix","toLowerCase","ignoreNicks","ignoreOpponent","nickname","speciesForme","BattleLog","escapeHTML","levelBuf","level","formechange","transform","types","terastallized","teraType","getPokemonTypes","knownPokemon","typechange","typeadd","rules","fainted","status","toUpperCase","exacthp","Pokemon","getHPText","reportExactHP","statusData","toxicTurns","sleepTurns","supportsAbilities","abilityText","getPokemonAbilityText","itemText","itemEffect","prevItem","prevItemEffect","renderStats","battlePokemon","findCorrespondingPokemon","_i10","_serverPokemon$moves2","moveid","moveTrack","_i12","_battlePokemon$moveTr2","row","getPPUseText","_i14","_clientPokemon$moveTr2","_ref2","isZ","isMax","pokemonHasClones","atLeastOne","_i16","_this$battle$sides4","sideConditions","sideConditionsLeft","weatherbuf","weatherLeft","slice","speciesClause","_i18","_side$pokemon4","searchid","calculateModifiedStats","statStagesOnly","_clientPokemon$effect","_clientPokemon$volati","stats","isPowerTrick","_i20","_Dex$statNamesExceptH2","statNamesExceptHP","statName","sourceStatName","clientStatName","boosts","spc","boostLevel","boostTable","atk","spe","_i22","_Dex$statNamesExceptH4","speedHalvingEVItems","isTransform","speciesName","speedModifiers","spa","def","spd","abilityActive","pokemonHasType","allyActive","_i24","allyAbility","getAllyAbility","getSpecies","_i26","_Dex$statNamesExceptH6","nfe","_i28","_i30","_Dex$statNamesExceptH8","chainedSpeedModifier","_i32","modifier","ceil","short","isTransformed","_this$getSpeedRange","getSpeedRange","modifiedStats","hasModifiedStat","_i34","_Dex$statNamesExceptH10","statLabel","BattleText","statShortName","_i36","_Dex$statNamesExceptH12","moveTrackRow","showKnown","ppUsed","maxpp","substr","pp","noPPBoosts","Infinity","_i38","_pokemon$moveTrack2","_ref3","_pokemon$volatiles$tr","tr","trunc","baseSpe","baseStats","bstWithoutHp","bst","scale","fusionSpecies","isCGT","isRandomBattle","minNature","maxNature","maxIv","maxIvEvOffset","forMaxMove","pokemonTypes","getTypeList","onMemory","onPlate","onDrive","naturalGift","isGrounded","getSpeciesForme","noTypeOverride","allowTypeOverride","_pokemon$getTypes","getTypes","i","isSound","turn","shiny","ohko","accuracyModifiers","_i40","_pokemon$side$active2","faintCounter","chain","_i42","mod","accuracyAfterChain","variableBPCap","multiplier","ratios","ratio","boostCount","_i44","_Object$values2","values","_i46","_Object$values4","ppLeft","_this$getSpeedRange2","minSpe","maxSpe","minRatio","maxRatio","_this$getSpeedRange3","fling","isGKLK","targetWeight","getWeightKg","pokemonWeight","timesAttacked","secondaries","auraBoosted","auraBroken","_i48","_pokemon$side$active4","_i50","_pokemon$side$foe$act2","getItemBoost","multihit","basePowerCallback","_i52","_Object$values6","some","timeDilationBPMod","_value$pokemon$volati","_BattleTooltips$orbUs","_BattleTooltips$orbTy","incenseTypes","itemTypes","orbUsers","orbTypes","noGemMoves","preterastallized","_i56","_types2","curType","slot","getPokemonAbilityData","abilityData","possibilities","_i58","_Object$values8","newAbility","hidePossible","baseAbilityName","Poison","Fighting","Dark","Grass","Normal","Rock","Steel","Dragon","Electric","Water","Fire","Ghost","Bug","Psychic","Ice","Flying","Ground","Fairy","Stellar","BattleStatGuesser","formatid","moveCount","hasMove","ignoreEVLimits","supportsEVs","supportsAVs","endsWith","_proto3","guess","role","guessRole","comboEVs","guessEVs","evs","plusStat","minusStat","itemid","abilityid","megaEvolves","megaStone","needsFourMoves","hasFourValidMoves","moveids","len","heal","isFast","physicalBulk","specialBulk","bulk","ultrafast","offenseBias","ensureMinEVs","evTotal","diff","change","evPriority","prioStat","ensureMaxEVs","statChart","primaryStat","getStat","ev","secondaryStat","SRweaknesses","SRresistances","SRweak","hpDivisibility","hpShouldBeDivisible","remaining","evOverride","natureOverride","_set$ivs","_set$evs","_BattleNatures","_BattleNatures2","baseStat","iv","ivs","val","BattleNatures","nature","plus","minus","friendshipValue","BattleStatOptimizer","_origSpread$evs2","_set$ivs2","origNature","origStats","getMinEVs","origSpread","origLeftoverEVs","_i60","_Dex$statNames2","statNames","_origSpread$evs","plusTooHigh","minusTooLow","bestPlus","bestPlusMinEVs","bestMinus","bestMinusMinEVs","savedEVs","_i62","_Dex$statNamesExceptH14","minEVs","_i64","_Dex$statNamesExceptH16","plusEVsSaved","newSpread","_i66","_Dex$statNames4","_i68","_Dex$statNames6","require","global"],"sources":["../src/battle-tooltips.ts"],"sourcesContent":["/**\n * Pokemon Showdown Tooltips\n *\n * A file for generating tooltips for battles. This should be IE7+ and\n * use the DOM directly.\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\nimport { Pokemon, type Battle, type ServerPokemon } from \"./battle\";\nimport { Dex, type ModdedDex, toID, type ID } from \"./battle-dex\";\nimport type { BattleScene } from \"./battle-animations\";\nimport { BattleLog } from \"./battle-log\";\nimport { Move, BattleNatures } from \"./battle-dex-data\";\nimport { BattleTextParser } from \"./battle-text-parser\";\n\nexport class ModifiableValue {\n\tvalue = 0;\n\tmaxValue = 0;\n\tcomment: string[];\n\tbattle: Battle;\n\tpokemon: Pokemon;\n\tserverPokemon: ServerPokemon;\n\titemName: string;\n\tabilityName: string;\n\tweatherName: string;\n\tisAccuracy = false;\n\tconstructor(battle: Battle, pokemon: Pokemon, serverPokemon: ServerPokemon) {\n\t\tthis.comment = [];\n\t\tthis.battle = battle;\n\t\tthis.pokemon = pokemon;\n\t\tthis.serverPokemon = serverPokemon;\n\n\t\tthis.itemName = this.battle.dex.items.get(serverPokemon.item).name;\n\t\tconst ability = serverPokemon.ability || pokemon?.ability || serverPokemon.baseAbility;\n\t\tthis.abilityName = this.battle.dex.abilities.get(ability).name;\n\t\tthis.weatherName = this.battle.dex.moves.get(battle.weather).exists ?\n\t\t\tthis.battle.dex.moves.get(battle.weather).name : this.battle.dex.abilities.get(battle.weather).name;\n\t}\n\treset(value = 0, isAccuracy?: boolean) {\n\t\tthis.value = value;\n\t\tthis.maxValue = 0;\n\t\tthis.isAccuracy = !!isAccuracy;\n\t\tthis.comment = [];\n\t}\n\ttryItem(itemName: string) {\n\t\tif (itemName !== this.itemName) return false;\n\t\tif (this.battle.hasPseudoWeather('Magic Room')) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Magic Room)`);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.pokemon?.volatiles['embargo']) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Embargo)`);\n\t\t\treturn false;\n\t\t}\n\t\tconst ignoreKlutz = [\n\t\t\t\"Macho Brace\", \"Power Anklet\", \"Power Band\", \"Power Belt\", \"Power Bracer\", \"Power Lens\", \"Power Weight\",\n\t\t];\n\t\tif (this.tryAbility('Klutz') && !ignoreKlutz.includes(itemName)) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Klutz)`);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\ttryAbility(abilityName: string) {\n\t\tif (abilityName !== this.abilityName) return false;\n\t\tif (this.pokemon?.volatiles['gastroacid']) {\n\t\t\tthis.comment.push(` (${abilityName} suppressed by Gastro Acid)`);\n\t\t\treturn false;\n\t\t}\n\t\t// Check for Neutralizing Gas\n\t\tif (!this.pokemon?.effectiveAbility(this.serverPokemon)) return false;\n\t\treturn true;\n\t}\n\ttryWeather(weatherName?: string) {\n\t\tif (!this.weatherName) return false;\n\t\tif (!weatherName) weatherName = this.weatherName;\n\t\telse if (weatherName !== this.weatherName) return false;\n\t\tfor (const side of this.battle.sides) {\n\t\t\tfor (const active of side.active) {\n\t\t\t\tif (active && ['Air Lock', 'Cloud Nine'].includes(active.ability)) {\n\t\t\t\t\tthis.comment.push(` (${weatherName} suppressed by ${active.ability})`);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\titemModify(factor: number, itemName?: string) {\n\t\tif (!itemName) itemName = this.itemName;\n\t\tif (!itemName) return false;\n\t\tif (!this.tryItem(itemName)) return false;\n\t\treturn this.modify(factor, itemName);\n\t}\n\tabilityModify(factor: number, abilityName: string) {\n\t\tif (!this.tryAbility(abilityName)) return false;\n\t\treturn this.modify(factor, abilityName);\n\t}\n\tweatherModify(factor: number, weatherName?: string, name?: string) {\n\t\tif (!weatherName) weatherName = this.weatherName;\n\t\tif (!weatherName) return false;\n\t\tif (!this.tryWeather(weatherName)) return false;\n\t\treturn this.modify(factor, name || weatherName);\n\t}\n\tmodify(factor: number, name?: string) {\n\t\tif (factor === 0) {\n\t\t\tif (name) this.comment.push(` (${name})`);\n\t\t\tthis.value = 0;\n\t\t\tthis.maxValue = 0;\n\t\t\treturn true;\n\t\t}\n\t\tif (name) this.comment.push(` (${this.round(factor)}&times; from ${name})`);\n\t\tthis.value *= factor;\n\t\tif (!(name === 'Technician' && this.maxValue > 60)) this.maxValue *= factor;\n\t\tif (this.battle.tier.includes('Super Staff Bros') &&\n\t\t\t!(name === 'Confirmed Town' && this.maxValue > 60)) this.maxValue *= factor;\n\t\treturn true;\n\t}\n\tset(value: number, reason?: string) {\n\t\tif (reason) this.comment.push(` (${reason})`);\n\t\tthis.value = value;\n\t\tthis.maxValue = 0;\n\t\treturn true;\n\t}\n\tsetRange(value: number, maxValue: number, reason?: string) {\n\t\tif (reason) this.comment.push(` (${reason})`);\n\t\tthis.value = value;\n\t\tthis.maxValue = maxValue;\n\t\treturn true;\n\t}\n\tround(value: number) {\n\t\treturn value ? Number(value.toFixed(2)) : 0;\n\t}\n\ttoString() {\n\t\tlet valueString;\n\t\tif (this.isAccuracy) {\n\t\t\tvalueString = this.value ? `${this.round(this.value)}%` : `can't miss`;\n\t\t} else {\n\t\t\tvalueString = this.value ? `${this.round(this.value)}` : ``;\n\t\t}\n\t\tif (this.maxValue) {\n\t\t\tvalueString += ` to ${this.round(this.maxValue)}` + (this.isAccuracy ? '%' : '');\n\t\t}\n\t\treturn valueString + this.comment.join('');\n\t}\n}\n\nexport class BattleTooltips {\n\tbattle: Battle;\n\n\tconstructor(battle: Battle) {\n\t\tthis.battle = battle;\n\t}\n\n\t// tooltips\n\t// Touch delay, pressing finger more than that time will cause the tooltip to open.\n\t// Shorter time will cause the button to click\n\tstatic LONG_TAP_DELAY = 500; // ms\n\tstatic LONG_CLICK_DELAY = 700; // ms\n\tstatic longTapTimeout = 0;\n\tstatic elem: HTMLDivElement | null = null;\n\tstatic parentElem: HTMLElement | null = null;\n\tstatic isLocked = false;\n\tstatic isPressed = false;\n\n\tstatic hideTooltip() {\n\t\tBattleTooltips.cancelLongTap();\n\t\tif (!BattleTooltips.elem) return;\n\t\tBattleTooltips.elem.parentNode!.removeChild(BattleTooltips.elem);\n\t\tBattleTooltips.elem = null;\n\t\tBattleTooltips.parentElem = null;\n\t\tBattleTooltips.isLocked = false;\n\t\t$('#tooltipwrapper').removeClass('tooltip-locked tooltip-locking-click tooltip-locking-tap');\n\t}\n\n\tstatic cancelLongTap() {\n\t\tif (BattleTooltips.longTapTimeout) {\n\t\t\tclearTimeout(BattleTooltips.longTapTimeout);\n\t\t\tBattleTooltips.longTapTimeout = 0;\n\t\t}\n\t\t$('#tooltipwrapper').removeClass('tooltip-locking-click tooltip-locking-tap');\n\t}\n\n\tlockTooltip() {\n\t\tif (BattleTooltips.elem && !BattleTooltips.isLocked) {\n\t\t\tBattleTooltips.isLocked = true;\n\t\t\tif (BattleTooltips.isPressed) {\n\t\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\n\t\t\t\tBattleTooltips.isPressed = false;\n\t\t\t}\n\t\t\t// $('#tooltipwrapper').removeClass('tooltip-locking');\n\t\t\t$('#tooltipwrapper').addClass('tooltip-locked');\n\t\t}\n\t}\n\n\thandleTouchEnd(e: TouchEvent) {\n\t\tBattleTooltips.cancelLongTap();\n\n\t\tif (!BattleTooltips.isLocked) BattleTooltips.hideTooltip();\n\t}\n\n\tlisten(elem: HTMLElement | JQuery) {\n\t\tconst $elem = $(elem);\n\t\t$elem.on('mouseover', '.has-tooltip', this.showTooltipEvent);\n\t\t$elem.on('click', '.has-tooltip', this.clickTooltipEvent);\n\t\t$elem.on('focus', '.has-tooltip', this.showTooltipEvent);\n\t\t$elem.on('mouseout', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('mousedown', '.has-tooltip', this.holdLockTooltipEvent);\n\t\t$elem.on('blur', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('mouseup', '.has-tooltip', BattleTooltips.unshowTooltip);\n\n\t\t$elem.on('touchstart', '.has-tooltip', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.holdLockTooltipEvent(e);\n\t\t\tif (!BattleTooltips.parentElem) {\n\t\t\t\t// should never happen, but in case there's a bug in the tooltip handler\n\t\t\t\tBattleTooltips.parentElem = e.currentTarget;\n\t\t\t}\n\t\t\t$(BattleTooltips.parentElem!).addClass('pressed');\n\t\t\tBattleTooltips.isPressed = true;\n\t\t});\n\t\t$elem.on('touchend', '.has-tooltip', e => {\n\t\t\te.preventDefault();\n\t\t\tif (e.currentTarget === BattleTooltips.parentElem && BattleTooltips.isPressed) {\n\t\t\t\tBattleTooltips.parentElem!.click();\n\t\t\t}\n\t\t\tBattleTooltips.unshowTooltip();\n\t\t});\n\t\t$elem.on('touchleave', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('touchcancel', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t}\n\n\tclickTooltipEvent = (e: Event) => {\n\t\tif (BattleTooltips.isLocked) {\n\t\t\te.preventDefault();\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\t};\n\t/**\n\t * An event that will lock a tooltip if held down\n\t *\n\t * (Namely, a long-tap or long-click)\n\t */\n\tholdLockTooltipEvent = (e: JQuery.TriggeredEvent) => {\n\t\tif (BattleTooltips.isLocked) BattleTooltips.hideTooltip();\n\t\tconst target = e.currentTarget as HTMLElement;\n\t\tthis.showTooltip(target);\n\t\tconst isClick = (e.type === 'mousedown' && target.tagName === 'BUTTON');\n\n\t\tBattleTooltips.longTapTimeout = setTimeout(() => {\n\t\t\tBattleTooltips.longTapTimeout = 0;\n\t\t\tthis.lockTooltip();\n\t\t}, isClick ? BattleTooltips.LONG_CLICK_DELAY : BattleTooltips.LONG_TAP_DELAY);\n\t\tif (isClick) {\n\t\t\t$('#tooltipwrapper').addClass('tooltip-locking-click');\n\t\t} else {\n\t\t\t$('#tooltipwrapper').addClass('tooltip-locking-tap');\n\t\t}\n\t};\n\n\tshowTooltipEvent = (e: Event) => {\n\t\tif (BattleTooltips.isLocked) return;\n\t\tthis.showTooltip(e.currentTarget as HTMLElement);\n\t};\n\n\t/**\n\t * Only hides tooltips if they're not locked\n\t */\n\tstatic unshowTooltip() {\n\t\tif (BattleTooltips.isLocked) return;\n\t\tif (BattleTooltips.isPressed) {\n\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\n\t\t\tBattleTooltips.isPressed = false;\n\t\t}\n\t\tBattleTooltips.hideTooltip();\n\t}\n\n\tshowTooltip(elem: HTMLElement) {\n\t\tconst args = (elem.dataset.tooltip || '').split('|');\n\t\tconst [type] = args;\n\t\t/**\n\t\t * If false, we instead attach the tooltip above the parent element.\n\t\t * This is important for the move/switch menus so the tooltip doesn't\n\t\t * cover up buttons above the hovered button.\n\t\t */\n\t\tlet ownHeight = !!elem.dataset.ownheight;\n\n\t\tlet buf: string;\n\t\tswitch (type) {\n\t\tcase 'move':\n\t\tcase 'zmove':\n\t\tcase 'maxmove': { // move|MOVE|ACTIVEPOKEMON|[GMAXMOVE]\n\t\t\tlet move = this.battle.dex.moves.get(args[1]);\n\t\t\tlet teamIndex = parseInt(args[2], 10);\n\t\t\tlet pokemon = this.battle.nearSide.active[\n\t\t\t\tteamIndex + this.battle.pokemonControlled * Math.floor(this.battle.mySide.n / 2)\n\t\t\t];\n\t\t\tlet gmaxMove = args[3] ? this.battle.dex.moves.get(args[3]) : undefined;\n\t\t\tif (!pokemon) return false;\n\t\t\tlet serverPokemon = this.battle.myPokemon![teamIndex];\n\t\t\tbuf = this.showMoveTooltip(move, type, pokemon, serverPokemon, gmaxMove);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'pokemon': { // pokemon|SIDE|POKEMON\n\t\t\t// mouse over sidebar pokemon\n\t\t\t// pokemon definitely exists, serverPokemon always ignored\n\t\t\tlet sideIndex = parseInt(args[1], 10);\n\t\t\tlet side = this.battle.sides[sideIndex];\n\t\t\tlet pokemon = side.pokemon[parseInt(args[2], 10)];\n\t\t\tif (args[3] === 'illusion') {\n\t\t\t\tbuf = '';\n\t\t\t\tconst species = pokemon.getBaseSpecies().baseSpecies;\n\t\t\t\tlet index = 1;\n\t\t\t\tfor (const otherPokemon of side.pokemon) {\n\t\t\t\t\tif (otherPokemon.getBaseSpecies().baseSpecies === species) {\n\t\t\t\t\t\tbuf += this.showPokemonTooltip(otherPokemon, null, false, index);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbuf = this.showPokemonTooltip(pokemon);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'activepokemon': { // activepokemon|SIDE|ACTIVE\n\t\t\t// mouse over active pokemon\n\t\t\t// pokemon definitely exists, serverPokemon maybe\n\t\t\tlet sideIndex = parseInt(args[1], 10);\n\t\t\tlet side = this.battle.sides[+this.battle.viewpointSwitched ^ sideIndex];\n\t\t\tlet activeIndex = parseInt(args[2], 10);\n\t\t\tlet pokemonIndex = activeIndex;\n\t\t\tif (activeIndex >= 1 && this.battle.sides.length > 2) {\n\t\t\t\tpokemonIndex -= 1;\n\t\t\t\tside = this.battle.sides[side.n + 2];\n\t\t\t}\n\t\t\tlet pokemon = side.active[activeIndex];\n\t\t\tlet serverPokemon = null;\n\t\t\tif (side === this.battle.mySide && this.battle.myPokemon) {\n\t\t\t\tserverPokemon = this.battle.myPokemon[pokemonIndex];\n\t\t\t}\n\t\t\tif (side === this.battle.mySide.ally && this.battle.myAllyPokemon) {\n\t\t\t\tserverPokemon = this.battle.myAllyPokemon[pokemonIndex];\n\t\t\t}\n\t\t\tif (!pokemon) return false;\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon, true);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'switchpokemon': { // switchpokemon|POKEMON\n\t\t\t// mouse over switchable pokemon\n\t\t\t// serverPokemon definitely exists, sidePokemon maybe\n\t\t\t// let side = this.battle.mySide;\n\t\t\tlet activeIndex = parseInt(args[1], 10);\n\t\t\tlet pokemon = null;\n\t\t\t/* if (activeIndex < side.active.length && activeIndex < this.battle.pokemonControlled) {\n\t\t\t\tpokemon = side.active[activeIndex];\n\t\t\t\tif (pokemon && pokemon.side === side.ally) pokemon = null;\n\t\t\t} */\n\t\t\tlet serverPokemon = this.battle.myPokemon![activeIndex];\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'allypokemon': { // allypokemon|POKEMON\n\t\t\t// mouse over ally's pokemon in multi battles\n\t\t\t// serverPokemon definitely exists, sidePokemon maybe\n\t\t\t// let side = this.battle.mySide.ally;\n\t\t\tlet activeIndex = parseInt(args[1], 10);\n\t\t\tlet pokemon = null;\n\t\t\t/* if (activeIndex < side.pokemon.length) {\n\t\t\t\tpokemon = side.pokemon[activeIndex] || side.ally ? side.ally.pokemon[activeIndex] : null;\n\t\t\t} */\n\t\t\tlet serverPokemon = this.battle.myAllyPokemon ? this.battle.myAllyPokemon[activeIndex] : null;\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'field': {\n\t\t\tbuf = this.showFieldTooltip();\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\t// \"throws\" an error without crashing\n\t\t\tPromise.resolve(new Error(`unrecognized type`));\n\t\t\tbuf = `<p class=\"message-error\" style=\"white-space: pre-wrap\">${new Error(`unrecognized type`).stack!}</p>`;\n\t\t}\n\n\t\tthis.placeTooltip(buf, elem, ownHeight, type);\n\t\treturn true;\n\t}\n\n\tplaceTooltip(innerHTML: string, hoveredElem?: HTMLElement, notRelativeToParent?: boolean, type?: string) {\n\t\tlet $elem;\n\t\tif (hoveredElem) {\n\t\t\t$elem = $(hoveredElem);\n\t\t} else {\n\t\t\t$elem = (this.battle.scene as BattleScene).$turn;\n\t\t\tnotRelativeToParent = true;\n\t\t}\n\n\t\tlet hoveredX1 = $elem.offset()!.left;\n\n\t\tif (!notRelativeToParent) {\n\t\t\t$elem = $elem.parent();\n\t\t}\n\n\t\tlet hoveredY1 = $elem.offset()!.top;\n\t\tlet hoveredY2 = hoveredY1 + $elem.outerHeight()!;\n\n\t\t// (x, y) are the left and top offsets of #tooltipwrapper, which mark the\n\t\t// BOTTOM LEFT CORNER of the tooltip\n\n\t\tlet x = Math.max(hoveredX1 - 2, 0);\n\t\tlet y = Math.max(hoveredY1 - 5, 0);\n\n\t\tlet $wrapper = $('#tooltipwrapper');\n\t\tif (!$wrapper.length) {\n\t\t\t$wrapper = $(`<div id=\"tooltipwrapper\" role=\"tooltip\"></div>`);\n\t\t\t$(document.body).append($wrapper);\n\t\t\t$wrapper.on('click', e => {\n\t\t\t\ttry {\n\t\t\t\t\tconst selection = window.getSelection()!;\n\t\t\t\t\tif (selection.type === 'Range') return;\n\t\t\t\t} catch {}\n\t\t\t\tBattleTooltips.hideTooltip();\n\t\t\t});\n\t\t} else {\n\t\t\t$wrapper.removeClass('tooltip-locked');\n\t\t}\n\t\t$wrapper.css({\n\t\t\tleft: Math.min(x, document.documentElement.clientWidth - 400),\n\t\t\ttop: y,\n\t\t});\n\t\tinnerHTML = `<div class=\"tooltipinner\"><div class=\"tooltip tooltip-${type!}\">${innerHTML}</div></div>`;\n\t\t$wrapper.html(innerHTML).appendTo(document.body);\n\t\tBattleTooltips.elem = $wrapper.find('.tooltip')[0] as HTMLDivElement;\n\t\tBattleTooltips.isLocked = false;\n\n\t\tlet height = $(BattleTooltips.elem).outerHeight()!;\n\t\tif (y - height < 1) {\n\t\t\t// tooltip is too tall to fit above the element:\n\t\t\t// try to fit it below it instead\n\t\t\ty = hoveredY2 + height + 5;\n\t\t\tif (y > document.documentElement.clientHeight) {\n\t\t\t\t// tooltip is also too tall to fit below the element:\n\t\t\t\t// just place it at the top of the screen\n\t\t\t\ty = height + 1;\n\t\t\t}\n\t\t\t$wrapper.css('top', y);\n\t\t} else if (y < 75) {\n\t\t\t// tooltip is pretty high up, put it below the element if it fits\n\t\t\ty = hoveredY2 + height + 5;\n\t\t\tif (y < document.documentElement.clientHeight) {\n\t\t\t\t// it fits\n\t\t\t\t$wrapper.css('top', y);\n\t\t\t}\n\t\t}\n\n\t\tlet width = $(BattleTooltips.elem).outerWidth()!;\n\t\tconst availableWidth = document.documentElement.clientWidth + window.scrollX;\n\t\tif (x > availableWidth - width - 2) {\n\t\t\tx = availableWidth - width - 2;\n\t\t\t$wrapper.css('left', x);\n\t\t} else if (x > document.documentElement.clientWidth - 400) {\n\t\t\t$wrapper.css('left', x);\n\t\t}\n\n\t\tBattleTooltips.parentElem = hoveredElem || null;\n\t\treturn true;\n\t}\n\n\thideTooltip() {\n\t\tBattleTooltips.hideTooltip();\n\t}\n\n\tstatic zMoveEffects: { [zEffect: string]: string } = {\n\t\t'clearnegativeboost': \"Restores negative stat stages to 0\",\n\t\t'crit2': \"Crit ratio +2\",\n\t\t'heal': \"Restores HP 100%\",\n\t\t'curse': \"Restores HP 100% if user is Ghost type, otherwise Attack +1\",\n\t\t'redirect': \"Redirects opposing attacks to user\",\n\t\t'healreplacement': \"Restores replacement's HP 100%\",\n\t};\n\n\tgetStatusZMoveEffect(move: Dex.Move) {\n\t\tif (move.zMove!.effect! in BattleTooltips.zMoveEffects) {\n\t\t\treturn BattleTooltips.zMoveEffects[move.zMove!.effect!];\n\t\t}\n\t\tlet boostText = '';\n\t\tif (move.zMove!.boost) {\n\t\t\tboostText = Object.entries(move.zMove!.boost).map(([stat, boost]) =>\n\t\t\t\t`${BattleTextParser.stat(stat)} +${boost}`\n\t\t\t).join(', ');\n\t\t}\n\t\treturn boostText;\n\t}\n\n\tstatic zMoveTable: { [type in Dex.TypeName]: string } = {\n\t\tPoison: \"Acid Downpour\",\n\t\tFighting: \"All-Out Pummeling\",\n\t\tDark: \"Black Hole Eclipse\",\n\t\tGrass: \"Bloom Doom\",\n\t\tNormal: \"Breakneck Blitz\",\n\t\tRock: \"Continental Crush\",\n\t\tSteel: \"Corkscrew Crash\",\n\t\tDragon: \"Devastating Drake\",\n\t\tElectric: \"Gigavolt Havoc\",\n\t\tWater: \"Hydro Vortex\",\n\t\tFire: \"Inferno Overdrive\",\n\t\tGhost: \"Never-Ending Nightmare\",\n\t\tBug: \"Savage Spin-Out\",\n\t\tPsychic: \"Shattered Psyche\",\n\t\tIce: \"Subzero Slammer\",\n\t\tFlying: \"Supersonic Skystrike\",\n\t\tGround: \"Tectonic Rage\",\n\t\tFairy: \"Twinkle Tackle\",\n\t\tStellar: \"\",\n\t\t\"???\": \"\",\n\t};\n\n\tstatic maxMoveTable: { [type in Dex.TypeName]: string } = {\n\t\tPoison: \"Max Ooze\",\n\t\tFighting: \"Max Knuckle\",\n\t\tDark: \"Max Darkness\",\n\t\tGrass: \"Max Overgrowth\",\n\t\tNormal: \"Max Strike\",\n\t\tRock: \"Max Rockfall\",\n\t\tSteel: \"Max Steelspike\",\n\t\tDragon: \"Max Wyrmwind\",\n\t\tElectric: \"Max Lightning\",\n\t\tWater: \"Max Geyser\",\n\t\tFire: \"Max Flare\",\n\t\tGhost: \"Max Phantasm\",\n\t\tBug: \"Max Flutterby\",\n\t\tPsychic: \"Max Mindstorm\",\n\t\tIce: \"Max Hailstorm\",\n\t\tFlying: \"Max Airstream\",\n\t\tGround: \"Max Quake\",\n\t\tFairy: \"Max Starfall\",\n\t\tStellar: \"\",\n\t\t\"???\": \"\",\n\t};\n\n\tgetMaxMoveFromType(type: Dex.TypeName, gmaxMove?: string | Dex.Move) {\n\t\tif (gmaxMove) {\n\t\t\tif (typeof gmaxMove === 'string') gmaxMove = this.battle.dex.moves.get(gmaxMove);\n\t\t\tif (type === gmaxMove.type) return gmaxMove;\n\t\t}\n\t\treturn this.battle.dex.moves.get(BattleTooltips.maxMoveTable[type]);\n\t}\n\n\tshowMoveTooltip(\n\t\tmove: Dex.Move, isZOrMax: string, pokemon: Pokemon, serverPokemon: ServerPokemon, gmaxMove?: Dex.Move\n\t) {\n\t\tlet text = '';\n\n\t\tlet zEffect = '';\n\t\tlet foeActive = pokemon.side.foe.active;\n\t\tif (this.battle.gameType === 'freeforall') {\n\t\t\tfoeActive = [...foeActive, ...pokemon.side.active].filter(active => active !== pokemon);\n\t\t}\n\t\t// TODO: move this somewhere it makes more sense\n\t\tif (pokemon.ability === '(suppressed)') serverPokemon.ability = '(suppressed)';\n\t\tlet ability = toID(serverPokemon.ability || pokemon.ability || serverPokemon.baseAbility);\n\t\tlet item = this.battle.dex.items.get(serverPokemon.item);\n\n\t\tlet value = new ModifiableValue(this.battle, pokemon, serverPokemon);\n\t\tlet [moveType, category] = this.getMoveType(move, value, gmaxMove || isZOrMax === 'maxmove');\n\t\tlet categoryDiff = move.category !== category;\n\n\t\tif (isZOrMax === 'zmove') {\n\t\t\tif (item.zMoveFrom === move.name) {\n\t\t\t\tmove = this.battle.dex.moves.get(item.zMove as string);\n\t\t\t} else if (move.category === 'Status') {\n\t\t\t\tmove = new Move(move.id, \"\", {\n\t\t\t\t\t...move,\n\t\t\t\t\tname: 'Z-' + move.name,\n\t\t\t\t});\n\t\t\t\tzEffect = this.getStatusZMoveEffect(move);\n\t\t\t} else {\n\t\t\t\tlet moveName = BattleTooltips.zMoveTable[item.zMoveType as Dex.TypeName];\n\t\t\t\tlet zMove = this.battle.dex.moves.get(moveName);\n\t\t\t\tlet movePower = move.zMove!.basePower;\n\t\t\t\t// the different Hidden Power types don't have a Z power set, fall back on base move\n\t\t\t\tif (!movePower && move.id.startsWith('hiddenpower')) {\n\t\t\t\t\tmovePower = this.battle.dex.moves.get('hiddenpower').zMove!.basePower;\n\t\t\t\t}\n\t\t\t\tif (move.id === 'weatherball') {\n\t\t\t\t\tswitch (this.battle.weather) {\n\t\t\t\t\tcase 'sunnyday':\n\t\t\t\t\tcase 'desolateland':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Fire']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'raindance':\n\t\t\t\t\tcase 'primordialsea':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Water']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'sandstorm':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Rock']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hail':\n\t\t\t\t\tcase 'snowscape':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Ice']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmove = new Move(zMove.id, zMove.name, {\n\t\t\t\t\t...zMove,\n\t\t\t\t\tcategory: move.category,\n\t\t\t\t\tbasePower: movePower,\n\t\t\t\t});\n\t\t\t\tcategoryDiff = false;\n\t\t\t}\n\t\t} else if (isZOrMax === 'maxmove') {\n\t\t\tif (move.category === 'Status') {\n\t\t\t\tmove = this.battle.dex.moves.get('Max Guard');\n\t\t\t} else {\n\t\t\t\tlet maxMove = this.getMaxMoveFromType(moveType, gmaxMove);\n\t\t\t\tconst basePower = ['gmaxdrumsolo', 'gmaxfireball', 'gmaxhydrosnipe'].includes(maxMove.id) ?\n\t\t\t\t\tmaxMove.basePower : move.maxMove.basePower;\n\t\t\t\tmove = new Move(maxMove.id, maxMove.name, {\n\t\t\t\t\t...maxMove,\n\t\t\t\t\tcategory: move.category,\n\t\t\t\t\tbasePower,\n\t\t\t\t});\n\t\t\t\tcategoryDiff = false;\n\t\t\t}\n\t\t}\n\n\t\tif (categoryDiff) {\n\t\t\tmove = new Move(move.id, move.name, {\n\t\t\t\t...move,\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\ttext += `<h2>${move.name}<br />`;\n\n\t\ttext += Dex.getTypeIcon(moveType);\n\t\ttext += ` ${Dex.getCategoryIcon(category)}</h2>`;\n\n\t\t// Check if there are more than one active Pokémon to check for multiple possible BPs.\n\t\tlet showingMultipleBasePowers = false;\n\t\tif (category !== 'Status' && foeActive.length > 1) {\n\t\t\t// We check if there is a difference in base powers to note it.\n\t\t\t// Otherwise, it is just shown as in singles.\n\t\t\t// The trick is that we need to calculate it first for each Pokémon to see if it changes.\n\t\t\tlet prevBasePower: string | null = null;\n\t\t\tlet basePower = '';\n\t\t\tlet difference = false;\n\t\t\tlet basePowers = [];\n\t\t\tfor (const active of foeActive) {\n\t\t\t\tif (!active) continue;\n\t\t\t\tvalue = this.getMoveBasePower(move, moveType, value, active);\n\t\t\t\tbasePower = `${value}`;\n\t\t\t\tif (prevBasePower === null) prevBasePower = basePower;\n\t\t\t\tif (prevBasePower !== basePower) difference = true;\n\t\t\t\tbasePowers.push(`Base power vs ${active.name}: ${basePower}`);\n\t\t\t}\n\t\t\tif (difference) {\n\t\t\t\ttext += '<p>' + basePowers.join('<br />') + '</p>';\n\t\t\t\tshowingMultipleBasePowers = true;\n\t\t\t}\n\t\t\t// Falls through to not to repeat code on showing the base power.\n\t\t}\n\t\tif (!showingMultipleBasePowers && category !== 'Status') {\n\t\t\tlet activeTarget = foeActive[0] || foeActive[1] || foeActive[2];\n\t\t\tvalue = this.getMoveBasePower(move, moveType, value, activeTarget);\n\t\t\ttext += `<p>Base power: ${value}</p>`;\n\t\t}\n\n\t\tlet accuracy = this.getMoveAccuracy(move, value);\n\n\t\t// Deal with Nature Power special case, indicating which move it calls.\n\t\tif (move.id === 'naturepower') {\n\t\t\tlet calls;\n\t\t\tif (this.battle.gen > 5) {\n\t\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\t\tcalls = 'Thunderbolt';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\t\tcalls = 'Energy Ball';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\t\t\tcalls = 'Moonblast';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\n\t\t\t\t\tcalls = 'Psychic';\n\t\t\t\t} else {\n\t\t\t\t\tcalls = 'Tri Attack';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gen > 3) {\n\t\t\t\t// In gens 4 and 5 it calls Earthquake.\n\t\t\t\tcalls = 'Earthquake';\n\t\t\t} else {\n\t\t\t\t// In gen 3 it calls Swift, so it retains its normal typing.\n\t\t\t\tcalls = 'Swift';\n\t\t\t}\n\t\t\tlet calledMove = this.battle.dex.moves.get(calls);\n\t\t\ttext += `Calls ${Dex.getTypeIcon(this.getMoveType(calledMove, value)[0])} ${calledMove.name}`;\n\t\t}\n\n\t\ttext += `<p>Accuracy: ${accuracy}</p>`;\n\t\tif (zEffect) text += `<p>Z-Effect: ${zEffect}</p>`;\n\n\t\tif (this.battle.hardcoreMode) {\n\t\t\ttext += `<p class=\"tooltip-section\">${move.shortDesc}</p>`;\n\t\t} else {\n\t\t\ttext += '<p class=\"tooltip-section\">';\n\t\t\tif (move.priority > 1) {\n\t\t\t\ttext += `Nearly always moves first <em>(priority +${move.priority})</em>.</p><p>`;\n\t\t\t} else if (move.priority <= -1) {\n\t\t\t\ttext += `Nearly always moves last <em>(priority &minus;${-move.priority})</em>.</p><p>`;\n\t\t\t} else if (move.priority === 1) {\n\t\t\t\ttext += `Usually moves first <em>(priority +${move.priority})</em>.</p><p>`;\n\t\t\t} else {\n\t\t\t\tif (move.id === 'grassyglide' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\t\ttext += 'Usually moves first <em>(priority +1)</em>.</p><p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext += '' + (move.desc || move.shortDesc || '') + '</p>';\n\n\t\t\tif (this.battle.gameType === 'doubles' || this.battle.gameType === 'multi') {\n\t\t\t\tif (move.target === 'allAdjacent') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes and ally.</p>';\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes.</p>';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gameType === 'triples') {\n\t\t\t\tif (move.target === 'allAdjacent') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes and allies.</p>';\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes.</p>';\n\t\t\t\t} else if (move.target === 'any') {\n\t\t\t\t\ttext += '<p>&#x25ce; Can target distant Pok&eacute;mon in Triples.</p>';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gameType === 'freeforall') {\n\t\t\t\tif (move.target === 'allAdjacent' || move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits all foes.</p>';\n\t\t\t\t} else if (move.target === 'adjacentAlly') {\n\t\t\t\t\ttext += '<p>&#x25ce; Can target any foe in Free-For-All.</p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (move.flags.defrost) {\n\t\t\t\ttext += `<p class=\"movetag\">The user thaws out if it is frozen.</p>`;\n\t\t\t}\n\t\t\tif (!move.flags.protect && !['self', 'allySide'].includes(move.target)) {\n\t\t\t\ttext += `<p class=\"movetag\">Not blocked by Protect <small>(and Detect, King's Shield, Spiky Shield)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bypasssub) {\n\t\t\t\ttext += `<p class=\"movetag\">Bypasses Substitute <small>(but does not break it)</small></p>`;\n\t\t\t}\n\t\t\tif (!move.flags.reflectable && !['self', 'allySide'].includes(move.target) && move.category === 'Status') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Not bounceable <small>(can't be bounced by Magic Coat/Bounce)</small></p>`;\n\t\t\t}\n\n\t\t\tif (move.flags.contact) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Contact <small>(triggers Iron Barbs, Spiky Shield, etc)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.sound) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Sound <small>(doesn't affect Soundproof pokemon)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.powder && this.battle.gen > 5) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Powder <small>(doesn't affect Grass, Overcoat, Safety Goggles)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.punch && ability === 'ironfist') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Fist <small>(boosted by Iron Fist)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.pulse && ability === 'megalauncher') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Pulse <small>(boosted by Mega Launcher)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bite && ability === 'strongjaw') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bite <small>(boosted by Strong Jaw)</small></p>`;\n\t\t\t}\n\t\t\tif ((move.recoil || move.hasCrashDamage) && ability === 'reckless') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Recoil <small>(boosted by Reckless)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bullet) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bullet-like <small>(doesn't affect Bulletproof pokemon)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.slicing) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Slicing <small>(boosted by Sharpness)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.wind) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Wind <small>(activates Wind Power and Wind Rider)</small></p>`;\n\t\t\t}\n\t\t\t// RBY healing move glitch\n\t\t\tif (this.battle.gen === 1 && !toID(this.battle.tier).includes('stadium') &&\n\t\t\t\t['recover', 'softboiled', 'rest'].includes(move.id)) {\n\t\t\t\tconst hpValues = [];\n\t\t\t\t// glitches at HP values equal to `maxHP + 1 % 256` unless they are `0 % 256`\n\t\t\t\tconst hp = serverPokemon.maxhp - 255;\n\t\t\t\tif (hp > 0 && hp % 256 !== 0) {\n\t\t\t\t\thpValues.push(hp);\n\t\t\t\t\tif (hp - 256 > 0) {\n\t\t\t\t\t\thpValues.push(hp - 256);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet failMessage = hpValues.length ? `Fails if current HP is ${hpValues.join(' or ')}.` : '';\n\t\t\t\tif (hpValues.includes(serverPokemon.hp)) failMessage = `<strong class=\"message-error\">${failMessage}</strong>`;\n\t\t\t\tif (failMessage) text += `<p>${failMessage}</p>`;\n\t\t\t}\n\t\t\tif (this.battle.gen === 1 && !toID(this.battle.tier).includes('stadium') &&\n\t\t\t\tmove.id === 'substitute') {\n\t\t\t\tconst selfKO = serverPokemon.maxhp % 4 === 0 ? serverPokemon.maxhp / 4 : null;\n\t\t\t\tlet failMessage = selfKO ? `KOs yourself if current HP is exactly ${selfKO}.` : '';\n\t\t\t\tif (selfKO === serverPokemon.hp) failMessage = `<strong class=\"message-error\">${failMessage}</strong>`;\n\t\t\t\tif (failMessage) text += `<p>${failMessage}</p>`;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n\n\t/**\n\t * Needs either a Pokemon or a ServerPokemon, but note that neither\n\t * are guaranteed: If you hover over a possible switch-in that's\n\t * never been switched in before, you'll only have a ServerPokemon,\n\t * and if you hover over an opponent's pokemon, you'll only have a\n\t * Pokemon.\n\t *\n\t * isActive is true if hovering over a pokemon in the battlefield,\n\t * and false if hovering over a pokemon in the Switch menu.\n\t */\n\tshowPokemonTooltip(\n\t\tclientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, isActive?: boolean, illusionIndex?: number\n\t) {\n\t\tconst pokemon = clientPokemon || serverPokemon!;\n\t\tlet text = '';\n\t\tlet genderBuf = '';\n\t\tconst gender = pokemon.gender;\n\t\tif (gender === 'M' || gender === 'F') {\n\t\t\tgenderBuf = ` <img src=\"${Dex.fxPrefix}gender-${gender.toLowerCase()}.png\" alt=\"${gender}\" width=\"7\" height=\"10\" class=\"pixelated\" /> `;\n\t\t}\n\n\t\tconst ignoreNicks = this.battle.ignoreNicks || this.battle.ignoreOpponent;\n\t\tconst nickname = ignoreNicks ? Dex.species.get(pokemon.speciesForme).baseSpecies : pokemon.name;\n\t\tlet name = BattleLog.escapeHTML(nickname);\n\t\tif (pokemon.speciesForme !== nickname) {\n\t\t\tname += ` <small>(${BattleLog.escapeHTML(pokemon.speciesForme)})</small>`;\n\t\t}\n\n\t\tlet levelBuf = (pokemon.level !== 100 ? ` <small>L${pokemon.level}</small>` : ``);\n\t\tif (!illusionIndex || illusionIndex === 1) {\n\t\t\ttext += `<h2>${name}${genderBuf}${illusionIndex ? '' : levelBuf}<br />`;\n\n\t\t\tif (clientPokemon?.volatiles.formechange) {\n\t\t\t\tif (clientPokemon.volatiles.transform) {\n\t\t\t\t\ttext += `<small>(Transformed into ${clientPokemon.volatiles.formechange[1]})</small><br />`;\n\t\t\t\t} else {\n\t\t\t\t\ttext += `<small>(Changed forme: ${clientPokemon.volatiles.formechange[1]})</small><br />`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet types = serverPokemon?.terastallized ? [serverPokemon.teraType] : this.getPokemonTypes(pokemon);\n\t\t\tlet knownPokemon = serverPokemon || clientPokemon!;\n\n\t\t\tif (pokemon.terastallized) {\n\t\t\t\ttext += `<small>(Terastallized)</small><br />`;\n\t\t\t} else if (clientPokemon?.volatiles.typechange || clientPokemon?.volatiles.typeadd) {\n\t\t\t\ttext += `<small>(Type changed)</small><br />`;\n\t\t\t}\n\t\t\ttext += `<span class=\"textaligned-typeicons\">${types.map(type => Dex.getTypeIcon(type)).join(' ')}</span>`;\n\t\t\tif (pokemon.terastallized) {\n\t\t\t\ttext += `&nbsp; &nbsp; <small>(base: <span class=\"textaligned-typeicons\">${this.getPokemonTypes(pokemon, true).map(type => Dex.getTypeIcon(type)).join(' ')}</span>)</small>`;\n\t\t\t} else if (knownPokemon.teraType && !this.battle.rules['Terastal Clause']) {\n\t\t\t\ttext += `&nbsp; &nbsp; <small>(Tera Type: <span class=\"textaligned-typeicons\">${Dex.getTypeIcon(knownPokemon.teraType)}</span>)</small>`;\n\t\t\t}\n\t\t\ttext += `</h2>`;\n\t\t}\n\n\t\tif (illusionIndex) {\n\t\t\ttext += `<p class=\"tooltip-section\"><strong>Possible Illusion #${illusionIndex}</strong>${levelBuf}</p>`;\n\t\t}\n\n\t\tif (pokemon.fainted) {\n\t\t\ttext += '<p><small>HP:</small> (fainted)</p>';\n\t\t} else if (this.battle.hardcoreMode) {\n\t\t\tif (serverPokemon) {\n\t\t\t\tconst status = pokemon.status ? ` <span class=\"status ${pokemon.status}\">${pokemon.status.toUpperCase()}</span>` : '';\n\t\t\t\ttext += `<p><small>HP:</small> ${serverPokemon.hp}/${serverPokemon.maxhp}${status}</p>`;\n\t\t\t}\n\t\t} else {\n\t\t\tlet exacthp = '';\n\t\t\tif (serverPokemon) {\n\t\t\t\texacthp = ` (${serverPokemon.hp}/${serverPokemon.maxhp})`;\n\t\t\t} else if (pokemon.maxhp === 48) {\n\t\t\t\texacthp = ` <small>(${pokemon.hp}/${pokemon.maxhp} pixels)</small>`;\n\t\t\t}\n\t\t\tconst status = pokemon.status ? ` <span class=\"status ${pokemon.status}\">${pokemon.status.toUpperCase()}</span>` : '';\n\t\t\ttext += `<p><small>HP:</small> ${Pokemon.getHPText(pokemon, this.battle.reportExactHP)}${exacthp}${status}`;\n\t\t\tif (clientPokemon) {\n\t\t\t\tif (pokemon.status === 'tox') {\n\t\t\t\t\tif (pokemon.ability === 'Poison Heal' || pokemon.ability === 'Magic Guard') {\n\t\t\t\t\t\ttext += ` <small>Would take if ability removed: ${Math.floor(\n\t\t\t\t\t\t\t100 / 16 * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)\n\t\t\t\t\t\t)}%</small>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += ` Next damage: ${Math.floor(\n\t\t\t\t\t\t\t100 / (clientPokemon.volatiles['dynamax'] ? 32 : 16) * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)\n\t\t\t\t\t\t)}%`;\n\t\t\t\t\t}\n\t\t\t\t} else if (pokemon.status === 'slp') {\n\t\t\t\t\ttext += ` Turns asleep: ${clientPokemon.statusData.sleepTurns}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttext += '</p>';\n\t\t}\n\n\t\tconst supportsAbilities = this.battle.gen > 2 && !this.battle.tier.includes(\"Let's Go\");\n\n\t\tlet abilityText = '';\n\t\tif (supportsAbilities) {\n\t\t\tabilityText = this.getPokemonAbilityText(\n\t\t\t\tclientPokemon, serverPokemon, isActive, !!illusionIndex && illusionIndex > 1\n\t\t\t);\n\t\t}\n\n\t\tlet itemText = '';\n\t\tif (serverPokemon) {\n\t\t\tlet item = '';\n\t\t\tlet itemEffect = '';\n\t\t\tif (clientPokemon?.prevItem) {\n\t\t\t\titem = 'None';\n\t\t\t\tlet prevItem = this.battle.dex.items.get(clientPokemon.prevItem).name;\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\n\t\t\t}\n\t\t\tif (serverPokemon.item) item = this.battle.dex.items.get(serverPokemon.item).name;\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\n\t\t} else if (clientPokemon) {\n\t\t\tlet item = '';\n\t\t\tlet itemEffect = clientPokemon.itemEffect || '';\n\t\t\tif (clientPokemon.prevItem) {\n\t\t\t\titem = 'None';\n\t\t\t\tif (itemEffect) itemEffect += '; ';\n\t\t\t\tlet prevItem = this.battle.dex.items.get(clientPokemon.prevItem).name;\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\n\t\t\t}\n\t\t\tif (pokemon.item) item = this.battle.dex.items.get(pokemon.item).name;\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\n\t\t}\n\n\t\tif (abilityText || itemText) {\n\t\t\ttext += '<p>';\n\t\t\ttext += abilityText;\n\t\t\tif (abilityText && itemText) {\n\t\t\t\t// ability/item on one line for your own switch tooltips, two lines everywhere else\n\t\t\t\ttext += (!isActive && serverPokemon ? ' / ' : '</p><p>');\n\t\t\t}\n\t\t\ttext += itemText;\n\t\t\ttext += '</p>';\n\t\t}\n\n\t\ttext += this.renderStats(clientPokemon, serverPokemon, !isActive);\n\n\t\tif (serverPokemon && !isActive) {\n\t\t\t// move list\n\t\t\ttext += `<p class=\"tooltip-section\">`;\n\t\t\tconst battlePokemon = clientPokemon || this.battle.findCorrespondingPokemon(pokemon);\n\t\t\tfor (const moveid of serverPokemon.moves) {\n\t\t\t\tconst move = this.battle.dex.moves.get(moveid);\n\t\t\t\tlet moveName = `&#8226; ${move.name}`;\n\t\t\t\tif (battlePokemon?.moveTrack) {\n\t\t\t\t\tfor (const row of battlePokemon.moveTrack) {\n\t\t\t\t\t\tif (moveName === row[0]) {\n\t\t\t\t\t\t\tmoveName = this.getPPUseText(row, true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttext += `${moveName}<br />`;\n\t\t\t}\n\t\t\ttext += '</p>';\n\t\t} else if (!this.battle.hardcoreMode && clientPokemon?.moveTrack.length) {\n\t\t\t// move list (guessed)\n\t\t\ttext += `<p class=\"tooltip-section\">`;\n\t\t\tfor (const row of clientPokemon.moveTrack) {\n\t\t\t\ttext += `${this.getPPUseText(row)}<br />`;\n\t\t\t}\n\t\t\tif (clientPokemon.moveTrack.filter(([moveName]) => {\n\t\t\t\tif (moveName.startsWith('*')) return false;\n\t\t\t\tconst move = this.battle.dex.moves.get(moveName);\n\t\t\t\treturn !move.isZ && !move.isMax && move.name !== 'Mimic';\n\t\t\t}).length > 4) {\n\t\t\t\ttext += `(More than 4 moves is usually a sign of Illusion Zoroark/Zorua.) `;\n\t\t\t}\n\t\t\tif (this.battle.gen === 3) {\n\t\t\t\ttext += `(Pressure is not visible in Gen 3, so in certain situations, more PP may have been lost than shown here.) `;\n\t\t\t}\n\t\t\tif (this.pokemonHasClones(clientPokemon)) {\n\t\t\t\ttext += `(Your opponent has two indistinguishable Pokémon, making it impossible for you to tell which one has which moves/ability/item.) `;\n\t\t\t}\n\t\t\ttext += `</p>`;\n\t\t}\n\t\treturn text;\n\t}\n\n\tshowFieldTooltip() {\n\t\tconst scene = this.battle.scene as BattleScene;\n\t\tlet buf = `<table style=\"border: 0; border-collapse: collapse; vertical-align: top; padding: 0; width: 100%\"><tr>`;\n\n\t\tlet atLeastOne = false;\n\t\tfor (const side of this.battle.sides) {\n\t\t\tconst sideConditions = scene.sideConditionsLeft(side, true);\n\t\t\tif (sideConditions) atLeastOne = true;\n\t\t\tbuf += `<td><p class=\"tooltip-section\"><strong>${BattleLog.escapeHTML(side.name)}</strong>${sideConditions || \"<br />(no conditions)\"}</p></td>`;\n\t\t}\n\t\tbuf += `</tr><table>`;\n\t\tif (!atLeastOne) buf = ``;\n\n\t\tlet weatherbuf = scene.weatherLeft() || `(no weather)`;\n\t\tif (weatherbuf.startsWith('<br />')) {\n\t\t\tweatherbuf = weatherbuf.slice(6);\n\t\t}\n\t\tbuf = `<p>${weatherbuf}</p>` + buf;\n\t\treturn `<p>${buf}</p>`;\n\t}\n\n\t/**\n\t * Does this Pokémon's trainer have two of these Pokémon that are\n\t * indistinguishable? (Same nickname, species, forme, level, gender,\n\t * and shininess.)\n\t */\n\tpokemonHasClones(pokemon: Pokemon) {\n\t\tconst side = pokemon.side;\n\t\tif (side.battle.speciesClause) return false;\n\t\tfor (const ally of side.pokemon) {\n\t\t\tif (pokemon !== ally && pokemon.searchid === ally.searchid) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tcalculateModifiedStats(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon, statStagesOnly?: boolean) {\n\t\tlet stats = { ...serverPokemon.stats };\n\t\tlet pokemon = clientPokemon || serverPokemon;\n\t\tconst isPowerTrick = clientPokemon?.volatiles['powertrick'];\n\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\tlet sourceStatName = statName;\n\t\t\tif (isPowerTrick) {\n\t\t\t\tif (statName === 'atk') sourceStatName = 'def';\n\t\t\t\tif (statName === 'def') sourceStatName = 'atk';\n\t\t\t}\n\t\t\tstats[statName] = serverPokemon.stats[sourceStatName];\n\t\t\tif (!clientPokemon) continue;\n\n\t\t\tconst clientStatName = clientPokemon.boosts.spc && (statName === 'spa' || statName === 'spd') ? 'spc' : statName;\n\t\t\tconst boostLevel = clientPokemon.boosts[clientStatName];\n\t\t\tif (boostLevel) {\n\t\t\t\tlet boostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\n\t\t\t\tif (boostLevel > 0) {\n\t\t\t\t\tstats[statName] *= boostTable[boostLevel];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.battle.gen <= 2) boostTable = [1, 100 / 66, 2, 2.5, 100 / 33, 100 / 28, 4];\n\t\t\t\t\tstats[statName] /= boostTable[-boostLevel];\n\t\t\t\t}\n\t\t\t\tstats[statName] = Math.floor(stats[statName]);\n\t\t\t}\n\t\t}\n\t\tif (statStagesOnly) return stats;\n\n\t\tconst ability = toID(\n\t\t\tclientPokemon?.effectiveAbility(serverPokemon) ?? (serverPokemon.ability || serverPokemon.baseAbility)\n\t\t);\n\n\t\t// check for burn, paralysis, guts, quick feet\n\t\tif (pokemon.status) {\n\t\t\tif (this.battle.gen > 2 && ability === 'guts') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t\t} else if (this.battle.gen < 2 && pokemon.status === 'brn') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\t}\n\n\t\t\t// Paralysis is calculated later in newer generations, so we need to apply it early here\n\t\t\tif (this.battle.gen <= 2 && pokemon.status === 'par') {\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.25);\n\t\t\t}\n\t\t}\n\n\t\t// gen 1 doesn't support items\n\t\tif (this.battle.gen <= 1) {\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (stats[statName] > 999) stats[statName] = 999;\n\t\t\t}\n\t\t\treturn stats;\n\t\t}\n\n\t\tlet item = toID(serverPokemon.item);\n\t\tlet speedHalvingEVItems = [\n\t\t\t'machobrace', 'poweranklet', 'powerband', 'powerbelt', 'powerbracer', 'powerlens', 'powerweight',\n\t\t];\n\t\tif (\n\t\t\t(ability === 'klutz' && !speedHalvingEVItems.includes(item)) ||\n\t\t\tthis.battle.hasPseudoWeather('Magic Room') ||\n\t\t\tclientPokemon?.volatiles['embargo']\n\t\t) {\n\t\t\titem = '' as ID;\n\t\t}\n\n\t\tconst species = this.battle.dex.species.get(serverPokemon.speciesForme).baseSpecies;\n\t\tconst isTransform = clientPokemon?.volatiles.transform;\n\t\tconst speciesName = isTransform && clientPokemon?.volatiles.formechange?.[1] && this.battle.gen <= 4 ?\n\t\t\tthis.battle.dex.species.get(clientPokemon.volatiles.formechange[1]).baseSpecies : species;\n\n\t\tlet speedModifiers = [];\n\n\t\t// check for light ball, thick club, metal/quick powder\n\t\t// the only stat modifying items in gen 2 were light ball, thick club, metal powder\n\t\tif (item === 'lightball' && speciesName === 'Pikachu' && this.battle.gen !== 4) {\n\t\t\tif (this.battle.gen > 4) stats.atk *= 2;\n\t\t\tstats.spa *= 2;\n\t\t}\n\n\t\tif (item === 'thickclub') {\n\t\t\tif (speciesName === 'Marowak' || speciesName === 'Cubone') {\n\t\t\t\tstats.atk *= 2;\n\t\t\t}\n\t\t}\n\n\t\tif (speciesName === 'Ditto' && !(clientPokemon && 'transform' in clientPokemon.volatiles)) {\n\t\t\tif (item === 'quickpowder') {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (item === 'metalpowder') {\n\t\t\t\tif (this.battle.gen === 2) {\n\t\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t\t} else {\n\t\t\t\t\tstats.def *= 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check abilities other than Guts and Quick Feet\n\t\t// check items other than light ball, thick club, metal/quick powder\n\t\tif (this.battle.gen <= 2) {\n\t\t\treturn stats;\n\t\t}\n\n\t\tlet weather = this.battle.weather;\n\t\tif (this.battle.abilityActive(['Air Lock', 'Cloud Nine'])) {\n\t\t\tweather = '' as ID;\n\t\t}\n\n\t\tif (item === 'choiceband' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t}\n\t\tif (ability === 'purepower' || ability === 'hugepower') {\n\t\t\tstats.atk *= 2;\n\t\t}\n\t\tif (ability === 'hustle' || (ability === 'gorillatactics' && !clientPokemon?.volatiles['dynamax'])) {\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t}\n\t\tif (weather) {\n\t\t\tif (this.battle.gen >= 4 && this.pokemonHasType(pokemon, 'Rock') && weather === 'sandstorm') {\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t}\n\t\t\tif (this.pokemonHasType(pokemon, 'Ice') && weather === 'snowscape') {\n\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t}\n\t\t\tif (ability === 'sandrush' && weather === 'sandstorm') {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (ability === 'slushrush' && (weather === 'hail' || weather === 'snowscape')) {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (item !== 'utilityumbrella') {\n\t\t\t\tif (weather === 'sunnyday' || weather === 'desolateland') {\n\t\t\t\t\tif (ability === 'chlorophyll') {\n\t\t\t\t\t\tspeedModifiers.push(2);\n\t\t\t\t\t}\n\t\t\t\t\tif (ability === 'solarpower') {\n\t\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\t\t}\n\t\t\t\t\tif (ability === 'orichalcumpulse') {\n\t\t\t\t\t\tstats.atk = Math.floor(stats.atk * 1.3333);\n\t\t\t\t\t}\n\t\t\t\t\tlet allyActive = clientPokemon?.side.active;\n\t\t\t\t\tif (allyActive) {\n\t\t\t\t\t\tfor (const ally of allyActive) {\n\t\t\t\t\t\t\tif (!ally || ally.fainted) continue;\n\t\t\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\t\t\t\tif (allyAbility === 'Flower Gift' && (ally.getSpecies().baseSpecies === 'Cherrim' || this.battle.gen <= 4)) {\n\t\t\t\t\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t\t\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (weather === 'raindance' || weather === 'primordialsea') {\n\t\t\t\t\tif (ability === 'swiftswim') {\n\t\t\t\t\t\tspeedModifiers.push(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ability === 'defeatist' && serverPokemon.hp <= serverPokemon.maxhp / 2) {\n\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\tstats.spa = Math.floor(stats.spa * 0.5);\n\t\t}\n\t\tif (clientPokemon) {\n\t\t\tif (clientPokemon.volatiles['slowstart']) {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\t\tspeedModifiers.push(0.5);\n\t\t\t}\n\t\t\tif (ability === 'unburden' && clientPokemon.volatiles['itemremoved'] && !item) {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (clientPokemon.volatiles['protosynthesis' + statName] || clientPokemon.volatiles['quarkdrive' + statName]) {\n\t\t\t\t\tif (statName === 'spe') {\n\t\t\t\t\t\tspeedModifiers.push(1.5);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstats[statName] = Math.floor(stats[statName] * 1.3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pokemon.status) {\n\t\t\tif (ability === 'marvelscale') {\n\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t}\n\t\t\tif (ability === 'quickfeet') {\n\t\t\t\tspeedModifiers.push(1.5);\n\t\t\t}\n\t\t}\n\t\tif (item === 'eviolite' && this.battle.dex.species.get(serverPokemon.speciesForme).nfe) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (ability === 'grasspelt' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t}\n\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\tif (ability === 'surgesurfer') {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (ability === 'hadronengine') {\n\t\t\t\tstats.spa = Math.floor(stats.spa * 1.3333);\n\t\t\t}\n\t\t}\n\t\tif (item === 'choicespecs' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t}\n\t\tif (item === 'deepseatooth' && species === 'Clamperl') {\n\t\t\tstats.spa *= 2;\n\t\t}\n\t\tif (item === 'souldew' && this.battle.gen <= 6 && (species === 'Latios' || species === 'Latias')) {\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (clientPokemon && (ability === 'plus' || ability === 'minus')) {\n\t\t\tlet allyActive = clientPokemon.side.active;\n\t\t\tif (allyActive.length > 1) {\n\t\t\t\tlet abilityName = (ability === 'plus' ? 'Plus' : 'Minus');\n\t\t\t\tfor (const ally of allyActive) {\n\t\t\t\t\tif (!ally || ally === clientPokemon || ally.fainted) continue;\n\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\t\tif (allyAbility !== 'Plus' && allyAbility !== 'Minus') continue;\n\t\t\t\t\tif (this.battle.gen <= 4 && allyAbility === abilityName) continue;\n\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (item === 'assaultvest') {\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (item === 'deepseascale' && species === 'Clamperl') {\n\t\t\tstats.spd *= 2;\n\t\t}\n\t\tif (item === 'choicescarf' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tspeedModifiers.push(1.5);\n\t\t}\n\t\tif (item === 'ironball' || speedHalvingEVItems.includes(item)) {\n\t\t\tspeedModifiers.push(0.5);\n\t\t}\n\t\tif (ability === 'furcoat') {\n\t\t\tstats.def *= 2;\n\t\t}\n\t\tif (this.battle.abilityActive('Vessel of Ruin')) {\n\t\t\tif (ability !== 'vesselofruin') {\n\t\t\t\tstats.spa = Math.floor(stats.spa * 0.75);\n\t\t\t}\n\t\t}\n\t\tif (this.battle.abilityActive('Sword of Ruin')) {\n\t\t\tif (ability !== 'swordofruin') {\n\t\t\t\tstats.def = Math.floor(stats.def * 0.75);\n\t\t\t}\n\t\t}\n\t\tif (this.battle.abilityActive('Tablets of Ruin')) {\n\t\t\tif (ability !== 'tabletsofruin') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.75);\n\t\t\t}\n\t\t}\n\t\tif (this.battle.abilityActive('Beads of Ruin')) {\n\t\t\tif (ability !== 'beadsofruin') {\n\t\t\t\tstats.spd = Math.floor(stats.spd * 0.75);\n\t\t\t}\n\t\t}\n\n\t\t// SSB\n\t\tif (this.battle.tier.includes('Super Staff Bros')) {\n\t\t\tif (pokemon.name === 'Felucia') {\n\t\t\t\tspeedModifiers.push(1.5);\n\t\t\t}\n\t\t\tif (ability === 'misspelled') {\n\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t}\n\t\t\tif (ability === 'fortifyingfrost' && weather === 'snowscape') {\n\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t}\n\t\t\tif (weather === 'deserteddunes' && this.pokemonHasType(pokemon, 'Rock')) {\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.25);\n\t\t\t}\n\t\t\tif (weather === 'stormsurge' && ability === 'swiftswim') {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (pokemon.status && ability === 'fortifiedmetal') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t\t}\n\t\t\tif (ability === 'grassyemperor' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 1.3333);\n\t\t\t}\n\t\t\tif (ability === 'magicalmysterycharge' && this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t}\n\t\t\tif (ability === 'youkaiofthedusk' || ability === 'galeguard') {\n\t\t\t\tstats.def *= 2;\n\t\t\t}\n\t\t\tif (ability === 'climatechange') {\n\t\t\t\tif (weather === 'snowscape') {\n\t\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t\t}\n\t\t\t\tif (weather === 'sunnyday' || weather === 'desolateland') stats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t}\n\t\t\tif (item !== 'utilityumbrella' && ability === 'ridethesun' &&\n\t\t\t\t(weather === 'sunnyday' || weather === 'desolateland')) {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (ability === 'soulsurfer' && this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (ability === 'orchardsgift' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t}\n\t\t\tif (item === 'eviolite' && this.battle.dex.species.get(serverPokemon.speciesForme).id === 'pichuspikyeared') {\n\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t}\n\t\t\tif (this.battle.abilityActive('quagofruin')) {\n\t\t\t\tif (ability !== 'quagofruin') {\n\t\t\t\t\tstats.def = Math.floor(stats.def * 0.85);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.battle.abilityActive('clodofruin')) {\n\t\t\t\tif (ability !== 'clodofruin') {\n\t\t\t\t\tstats.atk = Math.floor(stats.atk * 0.85);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.battle.abilityActive('blitzofruin')) {\n\t\t\t\tif (ability !== 'blitzofruin') {\n\t\t\t\t\tspeedModifiers.push(0.75);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.battle.hasPseudoWeather('Anfield Atmosphere') && ability === 'youllneverwalkalone') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 1.25);\n\t\t\t\tstats.def = Math.floor(stats.def * 1.25);\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.25);\n\t\t\t\tspeedModifiers.push(1.25);\n\t\t\t}\n\t\t\tif (clientPokemon) {\n\t\t\t\tif (clientPokemon.volatiles['boiled']) {\n\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\t}\n\t\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\t\tif (clientPokemon.volatiles['ultramystik']) {\n\t\t\t\t\t\tif (statName === 'spe') {\n\t\t\t\t\t\t\tspeedModifiers.push(1.3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstats[statName] = Math.floor(stats[statName] * 1.3);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst sideConditions = this.battle.mySide.sideConditions;\n\t\tif (sideConditions['tailwind']) {\n\t\t\tspeedModifiers.push(2);\n\t\t}\n\t\tif (sideConditions['grasspledge']) {\n\t\t\tspeedModifiers.push(0.25);\n\t\t}\n\n\t\tlet chainedSpeedModifier = 1;\n\t\tfor (const modifier of speedModifiers) {\n\t\t\tchainedSpeedModifier *= modifier;\n\t\t}\n\t\t// Chained modifiers round down on 0.5\n\t\tstats.spe *= chainedSpeedModifier;\n\t\tstats.spe = stats.spe % 1 > 0.5 ? Math.ceil(stats.spe) : Math.floor(stats.spe);\n\n\t\tif (pokemon.status === 'par' && ability !== 'quickfeet') {\n\t\t\tif (this.battle.gen > 6) {\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.5);\n\t\t\t} else {\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.25);\n\t\t\t}\n\t\t}\n\n\t\treturn stats;\n\t}\n\n\trenderStats(clientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, short?: boolean) {\n\t\tconst isTransformed = clientPokemon?.volatiles.transform;\n\t\tif (!serverPokemon || isTransformed) {\n\t\t\tif (!clientPokemon) throw new Error('Must pass either clientPokemon or serverPokemon');\n\t\t\tlet [min, max] = this.getSpeedRange(clientPokemon);\n\t\t\treturn `<p><small>Spe</small> ${min} to ${max} <small>(before items/abilities/modifiers)</small></p>`;\n\t\t}\n\t\tconst stats = serverPokemon.stats;\n\t\tconst modifiedStats = this.calculateModifiedStats(clientPokemon, serverPokemon);\n\n\t\tlet buf = '<p>';\n\n\t\tif (!short) {\n\t\t\tlet hasModifiedStat = false;\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\n\t\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\n\t\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\n\t\t\t\tbuf += `${BattleText[statLabel].statShortName}&nbsp;</small>`;\n\t\t\t\tbuf += `${stats[statName]}`;\n\t\t\t\tif (modifiedStats[statName] !== stats[statName]) hasModifiedStat = true;\n\t\t\t}\n\t\t\tbuf += '</p>';\n\n\t\t\tif (!hasModifiedStat) return buf;\n\n\t\t\tbuf += '<p><small>(After stat modifiers:)</small></p>';\n\t\t\tbuf += '<p>';\n\t\t}\n\n\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\n\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\n\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\n\t\t\tbuf += `${BattleText[statLabel].statShortName}&nbsp;</small>`;\n\t\t\tif (modifiedStats[statName] === stats[statName]) {\n\t\t\t\tbuf += `${modifiedStats[statName]}`;\n\t\t\t} else if (modifiedStats[statName] < stats[statName]) {\n\t\t\t\tbuf += `<strong class=\"stat-lowered\">${modifiedStats[statName]}</strong>`;\n\t\t\t} else {\n\t\t\t\tbuf += `<strong class=\"stat-boosted\">${modifiedStats[statName]}</strong>`;\n\t\t\t}\n\t\t}\n\t\tbuf += '</p>';\n\t\treturn buf;\n\t}\n\n\tgetPPUseText(moveTrackRow: [string, number], showKnown?: boolean) {\n\t\tlet [moveName, ppUsed] = moveTrackRow;\n\t\tlet move;\n\t\tlet maxpp;\n\t\tif (moveName.startsWith('*')) {\n\t\t\t// Transformed move\n\t\t\tmove = this.battle.dex.moves.get(moveName.substr(1));\n\t\t\tmaxpp = 5;\n\t\t} else {\n\t\t\tmove = this.battle.dex.moves.get(moveName);\n\t\t\tmaxpp = (move.pp === 1 || move.noPPBoosts ? move.pp : move.pp * 8 / 5);\n\t\t\tif (this.battle.gen < 3) maxpp = Math.min(61, maxpp);\n\t\t}\n\t\tconst bullet = moveName.startsWith('*') || move.isZ ? '<span style=\"color:#888\">&#8226;</span>' : '&#8226;';\n\t\tif (ppUsed === Infinity) {\n\t\t\treturn `${bullet} ${move.name} <small>(0/${maxpp})</small>`;\n\t\t}\n\t\tif (ppUsed || moveName.startsWith('*')) {\n\t\t\treturn `${bullet} ${move.name} <small>(${maxpp - ppUsed}/${maxpp})</small>`;\n\t\t}\n\t\treturn `${bullet} ${move.name} ${showKnown ? ' <small>(revealed)</small>' : ''}`;\n\t}\n\n\tppUsed(move: Dex.Move, pokemon: Pokemon) {\n\t\tfor (let [moveName, ppUsed] of pokemon.moveTrack) {\n\t\t\tif (moveName.startsWith('*')) moveName = moveName.substr(1);\n\t\t\tif (move.name === moveName) return ppUsed;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Calculates possible Speed stat range of an opponent\n\t */\n\tgetSpeedRange(pokemon: Pokemon): [number, number] {\n\t\tconst tr = Math.trunc || Math.floor;\n\t\tconst species = pokemon.getSpecies();\n\t\tlet rules = this.battle.rules;\n\t\tlet baseSpe = species.baseStats.spe;\n\t\tif (rules['Scalemons Mod']) {\n\t\t\tconst bstWithoutHp = species.bst - species.baseStats.hp;\n\t\t\tconst scale = 600 - species.baseStats.hp;\n\t\t\tbaseSpe = tr(baseSpe * scale / bstWithoutHp);\n\t\t\tif (baseSpe < 1) baseSpe = 1;\n\t\t\tif (baseSpe > 255) baseSpe = 255;\n\t\t}\n\t\tif (rules['Frantic Fusions Mod']) {\n\t\t\tconst fusionSpecies = this.battle.dex.species.get(pokemon.name);\n\t\t\tif (fusionSpecies.exists && fusionSpecies.name !== species.name) {\n\t\t\t\tbaseSpe += tr(fusionSpecies.baseStats.spe / 4);\n\t\t\t\tif (baseSpe < 1) baseSpe = 1;\n\t\t\t\tif (baseSpe > 255) baseSpe = 255;\n\t\t\t}\n\t\t}\n\t\tif (rules['Flipped Mod']) {\n\t\t\tbaseSpe = species.baseStats.hp;\n\t\t\tif (baseSpe < 1) baseSpe = 1;\n\t\t\tif (baseSpe > 255) baseSpe = 255;\n\t\t}\n\t\tif (rules['350 Cup Mod'] && species.bst <= 350) {\n\t\t\tbaseSpe *= 2;\n\t\t\tif (baseSpe < 1) baseSpe = 1;\n\t\t\tif (baseSpe > 255) baseSpe = 255;\n\t\t}\n\t\tlet level = pokemon.volatiles.transform?.[4] || pokemon.level;\n\t\tlet tier = this.battle.tier;\n\t\tlet gen = this.battle.gen;\n\t\tlet isCGT = tier.includes('Computer-Generated Teams');\n\t\tlet isRandomBattle = tier.includes('Random Battle') ||\n\t\t\t(tier.includes('Random') && tier.includes('Battle') && gen >= 6) || isCGT;\n\n\t\tlet minNature = (isRandomBattle || gen < 3) ? 1 : 0.9;\n\t\tlet maxNature = (isRandomBattle || gen < 3) ? 1 : 1.1;\n\t\tlet maxIv = (gen < 3) ? 30 : 31;\n\n\t\tlet min;\n\t\tlet max;\n\t\tif (tier.includes(\"Let's Go\")) {\n\t\t\tmin = tr(tr(tr(2 * baseSpe * level / 100 + 5) * minNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\n\t\t\tmax = tr(tr(tr((2 * baseSpe + maxIv) * level / 100 + 5) * maxNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\n\t\t\tif (tier.includes('No Restrictions')) max += 200;\n\t\t\telse if (tier.includes('Random')) max += 20;\n\t\t} else {\n\t\t\tlet maxIvEvOffset = maxIv + ((isRandomBattle && gen >= 3) ? 21 : 63);\n\t\t\tmax = tr(tr((2 * baseSpe + maxIvEvOffset) * level / 100 + 5) * maxNature);\n\t\t\tmin = isCGT ? max : tr(tr(2 * baseSpe * level / 100 + 5) * minNature);\n\t\t}\n\t\treturn [min, max];\n\t}\n\n\t/**\n\t * Gets the proper current type for moves with a variable type.\n\t */\n\tgetMoveType(\n\t\tmove: Dex.Move, value: ModifiableValue, forMaxMove?: boolean | Dex.Move\n\t): [Dex.TypeName, 'Physical' | 'Special' | 'Status'] {\n\t\tconst pokemon = value.pokemon;\n\t\tconst serverPokemon = value.serverPokemon;\n\n\t\tlet moveType = move.type;\n\t\tlet category = move.category;\n\t\tif (category === 'Status' && forMaxMove) return ['Normal', 'Status']; // Max Guard\n\t\t// can happen in obscure situations\n\t\tif (!pokemon) return [moveType, category];\n\n\t\tlet pokemonTypes = pokemon.getTypeList(serverPokemon);\n\t\tvalue.reset();\n\t\tif (move.id === 'revelationdance') {\n\t\t\tmoveType = pokemonTypes[0];\n\t\t}\n\t\t// Moves that require an item to change their type.\n\t\tlet item = this.battle.dex.items.get(value.itemName);\n\t\tif (move.id === 'multiattack' && item.onMemory) {\n\t\t\tif (value.itemModify(0)) moveType = item.onMemory;\n\t\t}\n\t\tif (move.id === 'judgment' && item.onPlate && !item.zMoveType) {\n\t\t\tif (value.itemModify(0)) moveType = item.onPlate;\n\t\t}\n\t\tif (move.id === 'technoblast' && item.onDrive) {\n\t\t\tif (value.itemModify(0)) moveType = item.onDrive;\n\t\t}\n\t\tif (move.id === 'naturalgift' && item.naturalGift) {\n\t\t\tif (value.itemModify(0)) moveType = item.naturalGift.type;\n\t\t}\n\t\t// Weather and pseudo-weather type changes.\n\t\tif (move.id === 'weatherball' && value.weatherModify(0)) {\n\t\t\tswitch (this.battle.weather) {\n\t\t\tcase 'sunnyday':\n\t\t\tcase 'desolateland':\n\t\t\t\tif (item.id === 'utilityumbrella') break;\n\t\t\t\tmoveType = 'Fire';\n\t\t\t\tbreak;\n\t\t\tcase 'raindance':\n\t\t\tcase 'primordialsea':\n\t\t\t\tif (item.id === 'utilityumbrella') break;\n\t\t\t\tmoveType = 'Water';\n\t\t\t\tbreak;\n\t\t\tcase 'sandstorm':\n\t\t\t\tmoveType = 'Rock';\n\t\t\t\tbreak;\n\t\t\tcase 'hail':\n\t\t\tcase 'snowscape':\n\t\t\t\tmoveType = 'Ice';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'terrainpulse' && pokemon.isGrounded(serverPokemon)) {\n\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\tmoveType = 'Electric';\n\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\tmoveType = 'Grass';\n\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\t\tmoveType = 'Fairy';\n\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\n\t\t\t\tmoveType = 'Psychic';\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'terablast' && pokemon.terastallized) {\n\t\t\tmoveType = pokemon.terastallized as Dex.TypeName;\n\t\t}\n\t\tif (move.id === 'terastarstorm' && pokemon.getSpeciesForme() === 'Terapagos-Stellar') {\n\t\t\tmoveType = 'Stellar';\n\t\t}\n\n\t\t// Aura Wheel as Morpeko-Hangry changes the type to Dark\n\t\tif (move.id === 'aurawheel' && pokemon.getSpeciesForme() === 'Morpeko-Hangry') {\n\t\t\tmoveType = 'Dark';\n\t\t}\n\t\t// Raging Bull's type depends on the Tauros forme\n\t\tif (move.id === 'ragingbull') {\n\t\t\tswitch (pokemon.getSpeciesForme()) {\n\t\t\tcase 'Tauros-Paldea-Combat':\n\t\t\t\tmoveType = 'Fighting';\n\t\t\t\tbreak;\n\t\t\tcase 'Tauros-Paldea-Blaze':\n\t\t\t\tmoveType = 'Fire';\n\t\t\t\tbreak;\n\t\t\tcase 'Tauros-Paldea-Aqua':\n\t\t\t\tmoveType = 'Water';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Ivy Cudgel's type depends on the Ogerpon forme\n\t\tif (move.id === 'ivycudgel') {\n\t\t\tswitch (pokemon.getSpeciesForme()) {\n\t\t\tcase 'Ogerpon-Wellspring': case 'Ogerpon-Wellspring-Tera':\n\t\t\t\tmoveType = 'Water';\n\t\t\t\tbreak;\n\t\t\tcase 'Ogerpon-Hearthflame': case 'Ogerpon-Hearthflame-Tera':\n\t\t\t\tmoveType = 'Fire';\n\t\t\t\tbreak;\n\t\t\tcase 'Ogerpon-Cornerstone': case 'Ogerpon-Cornerstone-Tera':\n\t\t\t\tmoveType = 'Rock';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Other abilities that change the move type.\n\t\tconst noTypeOverride = [\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t];\n\t\tconst allowTypeOverride = !noTypeOverride.includes(move.id) && (move.id !== 'terablast' || !pokemon.terastallized);\n\t\tif (allowTypeOverride) {\n\t\t\tif (this.battle.rules['Revelationmons Mod']) {\n\t\t\t\tconst [types] = pokemon.getTypes(serverPokemon);\n\t\t\t\tfor (let i = 0; i < types.length; i++) {\n\t\t\t\t\tif (serverPokemon.moves[i] && move.id === toID(serverPokemon.moves[i])) {\n\t\t\t\t\t\tmoveType = types[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (category !== 'Status' && !move.isZ && !move.id.startsWith('hiddenpower')) {\n\t\t\t\tif (moveType === 'Normal') {\n\t\t\t\t\tif (value.abilityModify(0, 'Aerilate')) moveType = 'Flying';\n\t\t\t\t\tif (value.abilityModify(0, 'Galvanize')) moveType = 'Electric';\n\t\t\t\t\tif (value.abilityModify(0, 'Pixilate')) moveType = 'Fairy';\n\t\t\t\t\tif (value.abilityModify(0, 'Refrigerate')) moveType = 'Ice';\n\t\t\t\t}\n\t\t\t\tif (value.abilityModify(0, 'Normalize')) moveType = 'Normal';\n\t\t\t}\n\n\t\t\t// There aren't any max moves with the sound flag, but if there were, Liquid Voice would make them water type\n\t\t\tconst isSound = !!(\n\t\t\t\tforMaxMove ?\n\t\t\t\t\tthis.getMaxMoveFromType(moveType, forMaxMove !== true && forMaxMove || undefined) : move\n\t\t\t).flags['sound'];\n\t\t\tif (isSound && value.abilityModify(0, 'Liquid Voice')) {\n\t\t\t\tmoveType = 'Water';\n\t\t\t}\n\t\t}\n\n\t\tif (move.id === 'photongeyser' || move.id === 'lightthatburnsthesky' ||\n\t\t\t(move.id === 'terablast' && pokemon.terastallized) ||\n\t\t\t(move.id === 'terastarstorm' && pokemon.getSpeciesForme() === 'Terapagos-Stellar')) {\n\t\t\tconst stats = this.calculateModifiedStats(pokemon, serverPokemon, true);\n\t\t\tif (stats.atk > stats.spa) category = 'Physical';\n\t\t}\n\n\t\t// SSB\n\t\tif (this.battle.tier.includes('Super Staff Bros')) {\n\t\t\tif (allowTypeOverride && category !== \"Status\" && !move.isZ && !move.id.startsWith('hiddenpower')) {\n\t\t\t\tif (value.abilityModify(0, 'Acetosa')) moveType = 'Grass';\n\t\t\t\tif (value.abilityModify(0, 'I Can Hear The Heart Beating As One') && moveType === 'Normal') moveType = 'Fairy';\n\t\t\t}\n\t\t\tif (move.id === 'tsignore' || move.id === 'o') {\n\t\t\t\tconst stats = this.calculateModifiedStats(pokemon, serverPokemon, true);\n\t\t\t\tif (stats.atk > stats.spa) category = 'Physical';\n\t\t\t}\n\t\t\tif (move.id === 'tsignore' && pokemon.getSpeciesForme().startsWith('Meloetta') &&\n\t\t\t\tpokemon.terastallized) {\n\t\t\t\tmoveType = 'Stellar';\n\t\t\t}\n\t\t\tif (move.id === 'weatherball' && value.weatherModify(0)) {\n\t\t\t\tif (this.battle.weather === 'stormsurge' && item.id !== 'utilityumbrella') moveType = 'Water';\n\t\t\t\tif (this.battle.weather === 'deserteddunes') moveType = 'Rock';\n\t\t\t}\n\t\t\tif (move.id === 'o' || move.id === 'worriednoises') {\n\t\t\t\tmoveType = pokemonTypes[0];\n\t\t\t}\n\t\t\tif (move.id === 'dillydally') {\n\t\t\t\tmoveType = pokemonTypes[pokemonTypes.length - 1];\n\t\t\t}\n\t\t\tif (move.id === 'magicalfocus') {\n\t\t\t\tif (this.battle.turn % 3 === 1) {\n\t\t\t\t\tmoveType = 'Fire';\n\t\t\t\t} else if (this.battle.turn % 3 === 2) {\n\t\t\t\t\tmoveType = 'Electric';\n\t\t\t\t} else {\n\t\t\t\t\tmoveType = 'Ice';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (move.id === 'hydrostatics' && pokemon.terastallized) {\n\t\t\t\tmoveType = 'Water';\n\t\t\t}\n\t\t\tif (move.id === 'asongoficeandfire' && pokemon.getSpeciesForme() === 'Volcarona') moveType = 'Ice';\n\t\t\tif (this.battle.abilityActive('dynamictyping')) {\n\t\t\t\tmoveType = '???';\n\t\t\t}\n\t\t\tif (move.id === 'alting') {\n\t\t\t\tmoveType = '???';\n\t\t\t\tif (pokemon.shiny) {\n\t\t\t\t\tcategory = 'Special';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn [moveType, category];\n\t}\n\n\t// Gets the current accuracy for a move.\n\tgetMoveAccuracy(move: Dex.Move, value: ModifiableValue, target?: Pokemon) {\n\t\tvalue.reset(move.accuracy === true ? 0 : move.accuracy, true);\n\n\t\tlet pokemon = value.pokemon;\n\t\t// Sure-hit accuracy\n\t\tif (move.id === 'toxic' && this.battle.gen >= 6 && this.pokemonHasType(pokemon, 'Poison')) {\n\t\t\tvalue.set(0, \"Poison type\");\n\t\t\treturn value;\n\t\t}\n\t\tif (move.id === 'blizzard' && this.battle.gen >= 4) {\n\t\t\tvalue.weatherModify(0, 'Hail');\n\t\t\tvalue.weatherModify(0, 'Snowscape');\n\t\t}\n\t\tif (['hurricane', 'thunder', 'bleakwindstorm', 'wildboltstorm', 'sandsearstorm'].includes(move.id)) {\n\t\t\tvalue.weatherModify(0, 'Rain Dance');\n\t\t\tvalue.weatherModify(0, 'Primordial Sea');\n\t\t}\n\t\tvalue.abilityModify(0, 'No Guard');\n\t\tif (!value.value) return value;\n\n\t\t// OHKO moves don't use standard accuracy / evasion modifiers\n\t\tif (move.ohko) {\n\t\t\tif (this.battle.gen === 1) {\n\t\t\t\tvalue.set(value.value, `fails if target's Speed is higher`);\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (move.id === 'sheercold' && this.battle.gen >= 7 && !this.pokemonHasType(pokemon, 'Ice')) {\n\t\t\t\tvalue.set(20, 'not Ice-type');\n\t\t\t}\n\t\t\tif (target) {\n\t\t\t\tif (pokemon.level < target.level) {\n\t\t\t\t\tvalue.reset(0);\n\t\t\t\t\tvalue.set(0, \"FAILS: target's level is higher\");\n\t\t\t\t} else if (pokemon.level > target.level) {\n\t\t\t\t\tvalue.set(value.value + pokemon.level - target.level, \"+1% per level above target\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (pokemon.level < 100) value.set(value.value, \"fails if target's level is higher\");\n\t\t\t\tif (pokemon.level > 1) value.set(value.value, \"+1% per level above target\");\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\t// Accuracy modifiers start\n\n\t\tlet accuracyModifiers = [];\n\t\tif (this.battle.hasPseudoWeather('Gravity')) {\n\t\t\taccuracyModifiers.push(6840);\n\t\t\tvalue.modify(5 / 3, \"Gravity\");\n\t\t}\n\n\t\tfor (const active of pokemon.side.active) {\n\t\t\tif (!active || active.fainted) continue;\n\t\t\tconst ability = this.getAllyAbility(active);\n\t\t\tif (ability === 'Victory Star') {\n\t\t\t\taccuracyModifiers.push(4506);\n\t\t\t\tvalue.modify(1.1, \"Victory Star\");\n\t\t\t}\n\t\t}\n\n\t\tif (value.tryAbility('Hustle') && move.category === 'Physical') {\n\t\t\taccuracyModifiers.push(3277);\n\t\t\tvalue.abilityModify(0.8, \"Hustle\");\n\t\t} else if (value.tryAbility('Compound Eyes')) {\n\t\t\taccuracyModifiers.push(5325);\n\t\t\tvalue.abilityModify(1.3, \"Compound Eyes\");\n\t\t}\n\n\t\tif (value.tryItem('Wide Lens')) {\n\t\t\taccuracyModifiers.push(4505);\n\t\t\tvalue.itemModify(1.1, \"Wide Lens\");\n\t\t}\n\n\t\t// SSB\n\t\tif (this.battle.tier.includes('Super Staff Bros')) {\n\t\t\tif (move.id === 'alting' && pokemon.shiny) {\n\t\t\t\tvalue.set(100);\n\t\t\t}\n\t\t\tif (move.flags['wind'] && this.battle.weather === 'stormsurge') {\n\t\t\t\tvalue.weatherModify(0, 'Storm Surge');\n\t\t\t}\n\t\t\tif (value.tryAbility('Misspelled') && move.category === 'Special') {\n\t\t\t\taccuracyModifiers.push(3277);\n\t\t\t\tvalue.abilityModify(0.8, \"Misspelled\");\n\t\t\t}\n\t\t\tif (value.tryAbility('Hydrostatic Positivity') && ['Electric', 'Water'].includes(move.type)) {\n\t\t\t\taccuracyModifiers.push(5325);\n\t\t\t\tvalue.abilityModify(1.3, \"Hydrostatic Positivity\");\n\t\t\t}\n\t\t\tif (value.tryAbility('Hardcore Hustle')) {\n\t\t\t\tfor (let i = 1; i <= 5 && i <= pokemon.side.faintCounter; i++) {\n\t\t\t\t\tif (pokemon.volatiles[`fallen${i}`]) {\n\t\t\t\t\t\tvalue.abilityModify([1, 0.95, 0.90, 0.85, 0.80, 0.75][i], \"Hardcore Hustle\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (value.tryAbility('See No Evil, Hear No Evil, Speak No Evil') &&\n\t\t\t\tpokemon.getSpeciesForme().includes('Wellspring')) {\n\t\t\t\tvalue.abilityModify(0, 'See No Evil, Hear No Evil, Speak No Evil');\n\t\t\t}\n\t\t\tvalue.abilityModify(0, 'Sure Hit Sorcery');\n\t\t\tvalue.abilityModify(0, 'Eyes of Eternity');\n\t\t\tif (!value.value) return value;\n\t\t}\n\n\t\t// Chaining modifiers\n\t\tlet chain = 4096;\n\t\tfor (const mod of accuracyModifiers) {\n\t\t\tif (mod !== 4096) {\n\t\t\t\tchain = (chain * mod + 2048) >> 12;\n\t\t\t}\n\t\t}\n\n\t\t// Applying modifiers\n\t\tvalue.set(move.accuracy as number);\n\n\t\tif (move.id === 'hurricane' || move.id === 'thunder') {\n\t\t\tif (value.tryWeather('Sunny Day')) value.set(50, 'Sunny Day');\n\t\t\tif (value.tryWeather('Desolate Land')) value.set(50, 'Desolate Land');\n\t\t}\n\n\t\t// Chained modifiers round down on 0.5\n\t\tlet accuracyAfterChain = (value.value * chain) / 4096;\n\t\taccuracyAfterChain = accuracyAfterChain % 1 > 0.5 ? Math.ceil(accuracyAfterChain) : Math.floor(accuracyAfterChain);\n\t\tvalue.set(accuracyAfterChain);\n\n\t\t// Unlike for Atk, Def, etc. accuracy and evasion boosts are applied after modifiers\n\t\tif (pokemon?.boosts.accuracy) {\n\t\t\tif (pokemon.boosts.accuracy > 0) {\n\t\t\t\tvalue.set(Math.floor(value.value * (pokemon.boosts.accuracy + 3) / 3));\n\t\t\t} else {\n\t\t\t\tvalue.set(Math.floor(value.value * 3 / (3 - pokemon.boosts.accuracy)));\n\t\t\t}\n\t\t}\n\n\t\t// 1/256 glitch\n\t\tif (this.battle.gen === 1 && !toID(this.battle.tier).includes('stadium')) {\n\t\t\tvalue.set((Math.floor(value.value * 255 / 100) / 256) * 100);\n\t\t}\n\t\treturn value;\n\t}\n\n\t// Gets the proper current base power for moves which have a variable base power.\n\t// Takes into account the target for some moves.\n\t// If it is unsure of the actual base power, it gives an estimate.\n\tgetMoveBasePower(move: Dex.Move, moveType: Dex.TypeName, value: ModifiableValue, target: Pokemon | null = null) {\n\t\tconst pokemon = value.pokemon;\n\t\tconst serverPokemon = value.serverPokemon;\n\n\t\t// apply modifiers for moves that depend on the actual stats\n\t\tconst modifiedStats = this.calculateModifiedStats(pokemon, serverPokemon);\n\n\t\tvalue.reset(move.basePower);\n\n\t\tif (move.id === 'acrobatics') {\n\t\t\tif (!serverPokemon.item) {\n\t\t\t\tvalue.modify(2, \"Acrobatics + no item\");\n\t\t\t}\n\t\t}\n\t\tlet variableBPCap = ['crushgrip', 'wringout'].includes(move.id) ? 120 : move.id === 'hardpress' ? 100 : undefined;\n\t\tif (variableBPCap && target) {\n\t\t\tvalue.set(\n\t\t\t\tMath.floor(\n\t\t\t\t\tMath.floor((variableBPCap * (100 * Math.floor(target.hp * 4096 / target.maxhp)) + 2048 - 1) / 4096) / 100\n\t\t\t\t) || 1,\n\t\t\t\t'approximate'\n\t\t\t);\n\t\t}\n\t\tif (move.id === 'terablast' && pokemon.terastallized === 'Stellar') {\n\t\t\tvalue.set(100, 'Tera Stellar boost');\n\t\t}\n\t\tif (move.id === 'brine' && target && target.hp * 2 <= target.maxhp) {\n\t\t\tvalue.modify(2, 'Brine + target below half HP');\n\t\t}\n\t\tif (move.id === 'eruption' || move.id === 'waterspout' || move.id === 'dragonenergy') {\n\t\t\tvalue.set(Math.floor(150 * pokemon.hp / pokemon.maxhp) || 1);\n\t\t}\n\t\tif (move.id === 'facade' && !['', 'slp', 'frz'].includes(pokemon.status)) {\n\t\t\tvalue.modify(2, 'Facade + status');\n\t\t}\n\t\tif (move.id === 'flail' || move.id === 'reversal') {\n\t\t\tlet multiplier;\n\t\t\tlet ratios;\n\t\t\tif (this.battle.gen > 4) {\n\t\t\t\tmultiplier = 48;\n\t\t\t\tratios = [2, 5, 10, 17, 33];\n\t\t\t} else {\n\t\t\t\tmultiplier = 64;\n\t\t\t\tratios = [2, 6, 13, 22, 43];\n\t\t\t}\n\t\t\tlet ratio = pokemon.hp * multiplier / pokemon.maxhp;\n\t\t\tlet basePower;\n\t\t\tif (ratio < ratios[0]) basePower = 200;\n\t\t\telse if (ratio < ratios[1]) basePower = 150;\n\t\t\telse if (ratio < ratios[2]) basePower = 100;\n\t\t\telse if (ratio < ratios[3]) basePower = 80;\n\t\t\telse if (ratio < ratios[4]) basePower = 40;\n\t\t\telse basePower = 20;\n\t\t\tvalue.set(basePower);\n\t\t}\n\t\tif (['hex', 'infernalparade'].includes(move.id) && target?.status) {\n\t\t\tvalue.modify(2, move.name + ' + status');\n\t\t}\n\t\tif (move.id === 'lastrespects') {\n\t\t\tvalue.set(Math.min(50 + 50 * pokemon.side.faintCounter));\n\t\t}\n\t\tif (move.id === 'punishment' && target) {\n\t\t\tlet boostCount = 0;\n\t\t\tfor (const boost of Object.values(target.boosts)) {\n\t\t\t\tif (boost > 0) boostCount += boost;\n\t\t\t}\n\t\t\tvalue.set(Math.min(60 + 20 * boostCount, 200));\n\t\t}\n\t\tif (move.id === 'smellingsalts' && target) {\n\t\t\tif (target.status === 'par') {\n\t\t\t\tvalue.modify(2, 'Smelling Salts + Paralysis');\n\t\t\t}\n\t\t}\n\t\tif (['storedpower', 'powertrip'].includes(move.id) && target) {\n\t\t\tlet boostCount = 0;\n\t\t\tfor (const boost of Object.values(pokemon.boosts)) {\n\t\t\t\tif (boost > 0) boostCount += boost;\n\t\t\t}\n\t\t\tvalue.set(20 + 20 * boostCount);\n\t\t}\n\t\tif (move.id === 'trumpcard') {\n\t\t\tconst ppLeft = 5 - this.ppUsed(move, pokemon);\n\t\t\tlet basePower = 40;\n\t\t\tif (ppLeft === 1) basePower = 200;\n\t\t\telse if (ppLeft === 2) basePower = 80;\n\t\t\telse if (ppLeft === 3) basePower = 60;\n\t\t\telse if (ppLeft === 4) basePower = 50;\n\t\t\tvalue.set(basePower);\n\t\t}\n\t\tif (move.id === 'magnitude') {\n\t\t\tvalue.setRange(10, 150);\n\t\t}\n\t\tif (['venoshock', 'barbbarrage'].includes(move.id) && target) {\n\t\t\tif (['psn', 'tox'].includes(target.status)) {\n\t\t\t\tvalue.modify(2, move.name + ' + Poison');\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'wakeupslap' && target) {\n\t\t\tif (target.status === 'slp') {\n\t\t\t\tvalue.modify(2, 'Wake-Up Slap + Sleep');\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'weatherball') {\n\t\t\tif (this.battle.weather !== 'deltastream') {\n\t\t\t\tvalue.weatherModify(2);\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'hydrosteam') {\n\t\t\tvalue.weatherModify(1.5, 'Sunny Day');\n\t\t}\n\t\tif (move.id === 'psyblade' && this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\tvalue.modify(1.5, 'Electric Terrain');\n\t\t}\n\t\tif (move.id === 'terrainpulse' && pokemon.isGrounded(serverPokemon)) {\n\t\t\tif (\n\t\t\t\tthis.battle.hasPseudoWeather('Electric Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Grassy Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Misty Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain')\n\t\t\t) {\n\t\t\t\tvalue.modify(2, 'Terrain Pulse boost');\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'watershuriken' && pokemon.getSpeciesForme() === 'Greninja-Ash' && pokemon.ability === 'Battle Bond'\n\t\t) {\n\t\t\tvalue.set(20, 'Battle Bond');\n\t\t}\n\t\t// Moves that check opponent speed\n\t\tif (move.id === 'electroball' && target) {\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\n\t\t\tlet minRatio = (modifiedStats.spe / maxSpe);\n\t\t\tlet maxRatio = (modifiedStats.spe / minSpe);\n\t\t\tlet min;\n\t\t\tlet max;\n\n\t\t\tif (minRatio >= 4) min = 150;\n\t\t\telse if (minRatio >= 3) min = 120;\n\t\t\telse if (minRatio >= 2) min = 80;\n\t\t\telse if (minRatio >= 1) min = 60;\n\t\t\telse min = 40;\n\n\t\t\tif (maxRatio >= 4) max = 150;\n\t\t\telse if (maxRatio >= 3) max = 120;\n\t\t\telse if (maxRatio >= 2) max = 80;\n\t\t\telse if (maxRatio >= 1) max = 60;\n\t\t\telse max = 40;\n\n\t\t\tvalue.setRange(min, max);\n\t\t}\n\t\tif (move.id === 'gyroball' && target) {\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\n\t\t\tlet min = (Math.floor(25 * minSpe / modifiedStats.spe) || 1);\n\t\t\tif (min > 150) min = 150;\n\t\t\tlet max = (Math.floor(25 * maxSpe / modifiedStats.spe) || 1);\n\t\t\tif (max > 150) max = 150;\n\t\t\tvalue.setRange(min, max);\n\t\t}\n\t\t// Moves which have base power changed due to items\n\t\tif (serverPokemon.item) {\n\t\t\tlet item = this.battle.dex.items.get(serverPokemon.item);\n\t\t\tif (move.id === 'fling' && item.fling) {\n\t\t\t\tvalue.itemModify(item.fling.basePower);\n\t\t\t}\n\t\t\tif (move.id === 'naturalgift') {\n\t\t\t\tvalue.itemModify(item.naturalGift.basePower);\n\t\t\t}\n\t\t}\n\t\t// Moves which have base power changed according to weight\n\t\tif (['lowkick', 'grassknot', 'heavyslam', 'heatcrash'].includes(move.id) && this.battle.gen > 2) {\n\t\t\tlet isGKLK = ['lowkick', 'grassknot'].includes(move.id);\n\t\t\tif (target) {\n\t\t\t\tlet targetWeight = target.getWeightKg();\n\t\t\t\tlet pokemonWeight = pokemon.getWeightKg(serverPokemon);\n\t\t\t\tlet basePower;\n\t\t\t\tif (isGKLK) {\n\t\t\t\t\tbasePower = 20;\n\t\t\t\t\tif (targetWeight >= 200) basePower = 120;\n\t\t\t\t\telse if (targetWeight >= 100) basePower = 100;\n\t\t\t\t\telse if (targetWeight >= 50) basePower = 80;\n\t\t\t\t\telse if (targetWeight >= 25) basePower = 60;\n\t\t\t\t\telse if (targetWeight >= 10) basePower = 40;\n\t\t\t\t} else {\n\t\t\t\t\tbasePower = 40;\n\t\t\t\t\tif (pokemonWeight >= targetWeight * 5) basePower = 120;\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 4) basePower = 100;\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 3) basePower = 80;\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 2) basePower = 60;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['dynamax']) {\n\t\t\t\t\tvalue.set(0, 'blocked by target\\'s Dynamax');\n\t\t\t\t} else {\n\t\t\t\t\tvalue.set(basePower);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue.setRange(isGKLK ? 20 : 40, 120);\n\t\t\t}\n\t\t}\n\t\t// Base power based on times hit\n\t\tif (move.id === 'ragefist') {\n\t\t\tvalue.set(Math.min(350, 50 + 50 * pokemon.timesAttacked),\n\t\t\t\tpokemon.timesAttacked > 0 ?\n\t\t\t\t\t`Hit ${pokemon.timesAttacked} time${pokemon.timesAttacked > 1 ? 's' : ''}` :\n\t\t\t\t\tundefined);\n\t\t}\n\t\tif (!value.value) return value;\n\n\t\t// Other ability boosts\n\t\tif (pokemon.status === 'brn' && move.category === 'Special') {\n\t\t\tvalue.abilityModify(1.5, \"Flare Boost\");\n\t\t}\n\t\tif (move.flags['punch']) {\n\t\t\tvalue.abilityModify(1.2, 'Iron Fist');\n\t\t}\n\t\tif (move.flags['pulse']) {\n\t\t\tvalue.abilityModify(1.5, \"Mega Launcher\");\n\t\t}\n\t\tif (move.flags['bite']) {\n\t\t\tvalue.abilityModify(1.5, \"Strong Jaw\");\n\t\t}\n\t\tif (value.value <= 60) {\n\t\t\tvalue.abilityModify(1.5, \"Technician\");\n\t\t}\n\t\tif (['psn', 'tox'].includes(pokemon.status) && move.category === 'Physical') {\n\t\t\tvalue.abilityModify(1.5, \"Toxic Boost\");\n\t\t}\n\t\tif (['Rock', 'Ground', 'Steel'].includes(moveType) && this.battle.weather === 'sandstorm') {\n\t\t\tif (value.tryAbility(\"Sand Force\")) value.weatherModify(1.3, \"Sandstorm\", \"Sand Force\");\n\t\t}\n\t\tif (move.secondaries) {\n\t\t\tvalue.abilityModify(1.3, \"Sheer Force\");\n\t\t}\n\t\tif (move.flags['contact']) {\n\t\t\tvalue.abilityModify(1.3, \"Tough Claws\");\n\t\t}\n\t\tif (move.flags['sound']) {\n\t\t\tvalue.abilityModify(1.3, \"Punk Rock\");\n\t\t}\n\t\tif (move.flags['slicing']) {\n\t\t\tvalue.abilityModify(1.5, \"Sharpness\");\n\t\t}\n\t\tfor (let i = 1; i <= 5 && i <= pokemon.side.faintCounter; i++) {\n\t\t\tif (pokemon.volatiles[`fallen${i}`]) {\n\t\t\t\tvalue.abilityModify(1 + 0.1 * i, \"Supreme Overlord\");\n\t\t\t}\n\t\t}\n\t\tif (target) {\n\t\t\tif ([\"MF\", \"FM\"].includes(pokemon.gender + target.gender)) {\n\t\t\t\tvalue.abilityModify(0.75, \"Rivalry\");\n\t\t\t} else if ([\"MM\", \"FF\"].includes(pokemon.gender + target.gender)) {\n\t\t\t\tvalue.abilityModify(1.25, \"Rivalry\");\n\t\t\t}\n\t\t}\n\t\tconst noTypeOverride = [\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t];\n\t\tconst allowTypeOverride = !noTypeOverride.includes(move.id) && (move.id !== 'terablast' || !pokemon.terastallized);\n\t\tif (\n\t\t\tmove.category !== 'Status' && allowTypeOverride && !move.isZ && !move.isMax &&\n\t\t\t!move.id.startsWith('hiddenpower')\n\t\t) {\n\t\t\tif (move.type === 'Normal') {\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Aerilate\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Galvanize\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Pixilate\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Refrigerate\");\n\t\t\t}\n\t\t\tif (this.battle.gen > 6) {\n\t\t\t\tvalue.abilityModify(1.2, \"Normalize\");\n\t\t\t}\n\t\t}\n\t\tif (move.recoil || move.hasCrashDamage) {\n\t\t\tvalue.abilityModify(1.2, 'Reckless');\n\t\t}\n\n\t\tif (move.category !== 'Status') {\n\t\t\tlet auraBoosted = '';\n\t\t\tlet auraBroken = false;\n\t\t\tfor (const ally of pokemon.side.active) {\n\t\t\t\tif (!ally || ally.fainted) continue;\n\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\tif (moveType === 'Fairy' && allyAbility === 'Fairy Aura') {\n\t\t\t\t\tauraBoosted = 'Fairy Aura';\n\t\t\t\t} else if (moveType === 'Dark' && allyAbility === 'Dark Aura') {\n\t\t\t\t\tauraBoosted = 'Dark Aura';\n\t\t\t\t} else if (allyAbility === 'Aura Break') {\n\t\t\t\t\tauraBroken = true;\n\t\t\t\t} else if (allyAbility === 'Battery' && ally !== pokemon && move.category === 'Special') {\n\t\t\t\t\tvalue.modify(1.3, 'Battery');\n\t\t\t\t} else if (allyAbility === 'Power Spot' && ally !== pokemon) {\n\t\t\t\t\tvalue.modify(1.3, 'Power Spot');\n\t\t\t\t} else if (allyAbility === 'Steely Spirit' && moveType === 'Steel') {\n\t\t\t\t\tvalue.modify(1.5, 'Steely Spirit');\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const foe of pokemon.side.foe.active) {\n\t\t\t\tif (!foe || foe.fainted) continue;\n\t\t\t\tif (foe.ability === 'Fairy Aura' && moveType === 'Fairy') {\n\t\t\t\t\tauraBoosted = 'Fairy Aura';\n\t\t\t\t} else if (foe.ability === 'Dark Aura' && moveType === 'Dark') {\n\t\t\t\t\tauraBoosted = 'Dark Aura';\n\t\t\t\t} else if (foe.ability === 'Aura Break') {\n\t\t\t\t\tauraBroken = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (auraBoosted) {\n\t\t\t\tif (auraBroken) {\n\t\t\t\t\tvalue.modify(0.75, auraBoosted + ' + Aura Break');\n\t\t\t\t} else {\n\t\t\t\t\tvalue.modify(1.33, auraBoosted);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Terrain\n\t\tif ((this.battle.hasPseudoWeather('Electric Terrain') && moveType === 'Electric') ||\n\t\t\t(this.battle.hasPseudoWeather('Grassy Terrain') && moveType === 'Grass') ||\n\t\t\t(this.battle.hasPseudoWeather('Psychic Terrain') && moveType === 'Psychic')) {\n\t\t\tif (pokemon.isGrounded(serverPokemon)) {\n\t\t\t\tvalue.modify(this.battle.gen > 7 ? 1.3 : 1.5, 'Terrain boost');\n\t\t\t}\n\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain') && moveType === 'Dragon') {\n\t\t\tif (target ? target.isGrounded() : true) {\n\t\t\t\tvalue.modify(0.5, 'Misty Terrain + grounded target');\n\t\t\t}\n\t\t} else if (\n\t\t\tthis.battle.hasPseudoWeather('Grassy Terrain') && ['earthquake', 'bulldoze', 'magnitude'].includes(move.id)\n\t\t) {\n\t\t\tif (target ? target.isGrounded() : true) {\n\t\t\t\tvalue.modify(0.5, 'Grassy Terrain + grounded target');\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'expandingforce' &&\n\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain') &&\n\t\t\tpokemon.isGrounded(serverPokemon)\n\t\t) {\n\t\t\tvalue.modify(1.5, 'Expanding Force + Psychic Terrain boost');\n\t\t}\n\t\tif (move.id === 'mistyexplosion' && this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\tvalue.modify(1.5, 'Misty Explosion + Misty Terrain boost');\n\t\t}\n\t\tif (move.id === 'risingvoltage' && this.battle.hasPseudoWeather('Electric Terrain') && target?.isGrounded()) {\n\t\t\tvalue.modify(2, 'Rising Voltage + Electric Terrain boost');\n\t\t}\n\n\t\t// Item\n\t\tvalue = this.getItemBoost(move, value, moveType);\n\n\t\t// Terastal base power floor\n\t\tif (\n\t\t\tpokemon.terastallized && (pokemon.terastallized === move.type || pokemon.terastallized === 'Stellar') &&\n\t\t\tvalue.value < 60 && move.priority <= 0 && !move.multihit && !(\n\t\t\t\t(move.basePower === 0 || move.basePower === 150) && move.basePowerCallback\n\t\t\t)\n\t\t) {\n\t\t\tvalue.set(60, 'Tera type BP minimum');\n\t\t}\n\n\t\t// Burn isn't really a base power modifier, so it needs to be applied after the Tera BP floor\n\t\tif (this.battle.gen > 2 && serverPokemon.status === 'brn' && move.id !== 'facade' && move.category === 'Physical') {\n\t\t\tif (!value.tryAbility(\"Guts\")) value.modify(0.5, 'Burn');\n\t\t}\n\n\t\tif (\n\t\t\tmove.id === 'steelroller' &&\n\t\t\t!this.battle.hasPseudoWeather('Electric Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Grassy Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Misty Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Psychic Terrain')\n\t\t) {\n\t\t\tvalue.set(0, 'no Terrain');\n\t\t}\n\n\t\t// SSB\n\t\tif (this.battle.tier.includes('Super Staff Bros')) {\n\t\t\tif (move.id === 'bodycount') {\n\t\t\t\tvalue.set(50 + 50 * pokemon.side.faintCounter,\n\t\t\t\t\tpokemon.side.faintCounter > 0 ?\n\t\t\t\t\t\t`${pokemon.side.faintCounter} teammate${pokemon.side.faintCounter > 1 ? 's' : ''} KOed` :\n\t\t\t\t\t\tundefined);\n\t\t\t}\n\t\t\t// Base power based on times hit\n\t\t\tif (move.id === 'vengefulmood') {\n\t\t\t\tvalue.set(Math.min(140, 60 + 20 * pokemon.timesAttacked),\n\t\t\t\t\tpokemon.timesAttacked > 0 ?\n\t\t\t\t\t\t`Hit ${pokemon.timesAttacked} time${pokemon.timesAttacked > 1 ? 's' : ''}` :\n\t\t\t\t\t\tundefined);\n\t\t\t}\n\t\t\tif (move.id === 'alting' && pokemon.shiny) {\n\t\t\t\tvalue.set(69, 'Shiny');\n\t\t\t}\n\t\t\tif (move.id === 'darkmooncackle') {\n\t\t\t\tlet boostCount = 0;\n\t\t\t\tfor (const boost of Object.values(pokemon.boosts)) {\n\t\t\t\t\tif (boost > 0) boostCount += boost;\n\t\t\t\t}\n\t\t\t\tvalue.set(30 + 20 * boostCount);\n\t\t\t}\n\t\t\tif (move.id === 'buildingcharacter' && target?.terastallized) {\n\t\t\t\tvalue.modify(2, 'Terastallized target');\n\t\t\t}\n\t\t\tif (move.id === 'mysticalbonfire' && target?.status) {\n\t\t\t\tvalue.modify(1.5, 'Mystical Bonfire + status');\n\t\t\t}\n\t\t\tif (move.id === 'adaptivebeam' && target && Object.values(target.boosts).some(x => x > 0)) {\n\t\t\t\tvalue.set(0, \"Target has more boosts\");\n\t\t\t}\n\t\t\tif (value.value <= 60) {\n\t\t\t\tvalue.abilityModify(1.5, \"Confirmed Town\");\n\t\t\t}\n\t\t\tif (move.category !== 'Status' && allowTypeOverride && !move.isZ &&\n\t\t\t\t!move.isMax && !move.id.startsWith('hiddenpower')) {\n\t\t\t\tif (moveType === 'Normal') value.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"I Can Hear The Heart Beating As One\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Acetosa\");\n\t\t\t}\n\t\t\tif (move.flags['punch']) {\n\t\t\t\tvalue.abilityModify(1.5, \"Harambe Hit\");\n\t\t\t}\n\t\t\tif (move.flags['slicing']) {\n\t\t\t\tvalue.abilityModify(1.5, \"I Can Hear The Heart Beating As One\");\n\t\t\t}\n\t\t\tif (move.priority > 0) {\n\t\t\t\tvalue.abilityModify(2, \"Full Bloom\");\n\t\t\t}\n\t\t\tif (move.recoil || move.hasCrashDamage) {\n\t\t\t\tvalue.abilityModify(1.2, 'Hogwash');\n\t\t\t\tif (pokemon.name === \"Billo\") {\n\t\t\t\t\tvalue.modify(1.2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (target?.gender === \"M\" && pokemon.getSpeciesForme().includes(\"Hearthflame\")) {\n\t\t\t\tvalue.abilityModify(1.3, 'See No Evil, Hear No Evil, Speak No Evil');\n\t\t\t}\n\t\t\tfor (let i = 1; i <= 5 && i <= pokemon.side.faintCounter; i++) {\n\t\t\t\tif (pokemon.volatiles[`fallen${i}`]) {\n\t\t\t\t\tvalue.abilityModify([1, 1.15, 1.3, 1.45, 1.6, 1.75][i], \"Hardcore Hustle\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet timeDilationBPMod = 1 + (0.1 * Math.floor(this.battle.turn / 10));\n\t\t\tif (timeDilationBPMod > 2) timeDilationBPMod = 2;\n\t\t\tvalue.abilityModify(timeDilationBPMod, \"Time Dilation\");\n\n\t\t\tfor (let i = 1; i <= 5 && i <= pokemon.side.faintCounter; i++) {\n\t\t\t\tif (pokemon.volatiles[`fallen${i}`]) {\n\t\t\t\t\tvalue.abilityModify(1 + 0.05 * i, \"The Eminence in the Shadow\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tstatic incenseTypes: { [itemName: string]: Dex.TypeName } = {\n\t\t'Odd Incense': 'Psychic',\n\t\t'Rock Incense': 'Rock',\n\t\t'Rose Incense': 'Grass',\n\t\t'Sea Incense': 'Water',\n\t\t'Wave Incense': 'Water',\n\t};\n\tstatic itemTypes: { [itemName: string]: Dex.TypeName } = {\n\t\t'Black Belt': 'Fighting',\n\t\t'Black Glasses': 'Dark',\n\t\t'Charcoal': 'Fire',\n\t\t'Dragon Fang': 'Dragon',\n\t\t'Fairy Feather': 'Fairy',\n\t\t'Hard Stone': 'Rock',\n\t\t'Magnet': 'Electric',\n\t\t'Metal Coat': 'Steel',\n\t\t'Miracle Seed': 'Grass',\n\t\t'Mystic Water': 'Water',\n\t\t'Never-Melt Ice': 'Ice',\n\t\t'Poison Barb': 'Poison',\n\t\t'Sharp Beak': 'Flying',\n\t\t'Silk Scarf': 'Normal',\n\t\t'Silver Powder': 'Bug',\n\t\t'Soft Sand': 'Ground',\n\t\t'Spell Tag': 'Ghost',\n\t\t'Twisted Spoon': 'Psychic',\n\t};\n\tstatic orbUsers: { [speciesForme: string]: string[] } = {\n\t\t'Latias': ['Soul Dew'],\n\t\t'Latios': ['Soul Dew'],\n\t\t'Dialga': ['Adamant Crystal', 'Adamant Orb'],\n\t\t'Palkia': ['Lustrous Globe', 'Lustrous Orb'],\n\t\t'Giratina': ['Griseous Core', 'Griseous Orb'],\n\t\t'Venomicon': ['Vile Vial'],\n\t};\n\tstatic orbTypes: { [itemName: string]: Dex.TypeName[] } = {\n\t\t'Soul Dew': ['Psychic', 'Dragon'],\n\t\t'Adamant Crystal': ['Steel', 'Dragon'],\n\t\t'Adamant Orb': ['Steel', 'Dragon'],\n\t\t'Lustrous Globe': ['Water', 'Dragon'],\n\t\t'Lustrous Orb': ['Water', 'Dragon'],\n\t\t'Griseous Core': ['Ghost', 'Dragon'],\n\t\t'Griseous Orb': ['Ghost', 'Dragon'],\n\t\t'Vile Vial': ['Poison', 'Flying'],\n\t};\n\tstatic noGemMoves = [\n\t\t'Fire Pledge',\n\t\t'Fling',\n\t\t'Grass Pledge',\n\t\t'Struggle',\n\t\t'Water Pledge',\n\t];\n\tgetItemBoost(move: Dex.Move, value: ModifiableValue, moveType: Dex.TypeName) {\n\t\tlet item = this.battle.dex.items.get(value.serverPokemon.item);\n\t\tlet itemName = item.name;\n\t\tlet moveName = move.name;\n\t\tlet species = this.battle.dex.species.get(value.serverPokemon.speciesForme);\n\t\tlet isTransform = value.pokemon.volatiles.transform;\n\t\tlet speciesName = isTransform && value.pokemon.volatiles.formechange?.[1] && this.battle.gen <= 4 ?\n\t\t\tthis.battle.dex.species.get(value.pokemon.volatiles.formechange[1]).baseSpecies : species.baseSpecies;\n\n\t\t// Plates\n\t\tif (item.onPlate === moveType && !item.zMove) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Incenses\n\t\tif (BattleTooltips.incenseTypes[item.name] === moveType) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Type-enhancing items\n\t\tif (BattleTooltips.itemTypes[item.name] === moveType) {\n\t\t\tvalue.itemModify(this.battle.gen < 4 ? 1.1 : 1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Light ball is a base power modifier in gen 4 only\n\t\tif (item.name === 'Light Ball' && this.battle.gen === 4 && speciesName === 'Pikachu') {\n\t\t\tvalue.itemModify(2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Pokemon-specific items\n\t\tif (item.name === 'Soul Dew' && this.battle.gen < 7) return value;\n\t\tif (BattleTooltips.orbUsers[speciesName]?.includes(item.name) &&\n\t\t\tBattleTooltips.orbTypes[item.name]?.includes(moveType)) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\t\tif (speciesName === 'Ogerpon') {\n\t\t\tconst speciesForme = value.pokemon.getSpeciesForme();\n\t\t\tif (\n\t\t\t\t(speciesForme.startsWith('Ogerpon-Wellspring') && itemName === 'Wellspring Mask') ||\n\t\t\t\t(speciesForme.startsWith('Ogerpon-Hearthflame') && itemName === 'Hearthflame Mask') ||\n\t\t\t\t(speciesForme.startsWith('Ogerpon-Cornerstone') && itemName === 'Cornerstone Mask')\n\t\t\t) {\n\t\t\t\tvalue.itemModify(1.2);\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\t// Gems\n\t\tif (BattleTooltips.noGemMoves.includes(moveName)) return value;\n\t\tif (itemName === moveType + ' Gem') {\n\t\t\tvalue.itemModify(this.battle.gen < 6 ? 1.5 : 1.3);\n\t\t\treturn value;\n\t\t}\n\n\t\tif (itemName === 'Muscle Band' && move.category === 'Physical' ||\n\t\t\titemName === 'Wise Glasses' && move.category === 'Special' ||\n\t\t\titemName === 'Punching Glove' && move.flags['punch']) {\n\t\t\tvalue.itemModify(1.1);\n\t\t}\n\n\t\treturn value;\n\t}\n\tgetPokemonTypes(pokemon: Pokemon | ServerPokemon, preterastallized = false): readonly Dex.TypeName[] {\n\t\tif (!(pokemon as Pokemon).getTypes) {\n\t\t\treturn this.battle.dex.species.get(pokemon.speciesForme).types;\n\t\t}\n\n\t\treturn (pokemon as Pokemon).getTypeList(undefined, preterastallized);\n\t}\n\tpokemonHasType(pokemon: Pokemon | ServerPokemon, type: Dex.TypeName, types?: readonly Dex.TypeName[]) {\n\t\tif (!types) types = this.getPokemonTypes(pokemon);\n\t\tfor (const curType of types) {\n\t\t\tif (curType === type) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tgetAllyAbility(ally: Pokemon) {\n\t\tlet serverPokemon;\n\t\tif (this.battle.myAllyPokemon) {\n\t\t\tserverPokemon = this.battle.myAllyPokemon[ally.slot];\n\t\t} else if (this.battle.myPokemon) {\n\t\t\tserverPokemon = this.battle.myPokemon[ally.slot];\n\t\t}\n\t\treturn ally.effectiveAbility(serverPokemon);\n\t}\n\tgetPokemonAbilityData(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon | null | undefined) {\n\t\tconst abilityData: { ability: string, baseAbility: string, possibilities: string[] } = {\n\t\t\tability: '', baseAbility: '', possibilities: [],\n\t\t};\n\t\tif (clientPokemon) {\n\t\t\tif (clientPokemon.ability) {\n\t\t\t\tabilityData.ability = clientPokemon.ability || clientPokemon.baseAbility;\n\t\t\t\tif (clientPokemon.baseAbility) {\n\t\t\t\t\tabilityData.baseAbility = clientPokemon.baseAbility;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst speciesForme = clientPokemon.getSpeciesForme() || serverPokemon?.speciesForme || '';\n\t\t\t\tconst species = this.battle.dex.species.get(speciesForme);\n\t\t\t\tif (species.exists && species.abilities) {\n\t\t\t\t\tabilityData.possibilities = Object.values(species.abilities);\n\t\t\t\t\tif (this.battle.rules['Frantic Fusions Mod']) {\n\t\t\t\t\t\tconst fusionSpecies = this.battle.dex.species.get(clientPokemon.name);\n\t\t\t\t\t\tif (fusionSpecies.exists && fusionSpecies.name !== species.name) {\n\t\t\t\t\t\t\tfor (const newAbility of Object.values(fusionSpecies.abilities)) {\n\t\t\t\t\t\t\t\tif (abilityData.possibilities.includes(newAbility)) continue;\n\t\t\t\t\t\t\t\tabilityData.possibilities.push(newAbility);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (serverPokemon) {\n\t\t\tif (!abilityData.ability) abilityData.ability = serverPokemon.ability || serverPokemon.baseAbility;\n\t\t\tif (!abilityData.baseAbility && serverPokemon.baseAbility) {\n\t\t\t\tabilityData.baseAbility = serverPokemon.baseAbility;\n\t\t\t}\n\t\t}\n\t\treturn abilityData;\n\t}\n\tgetPokemonAbilityText(\n\t\tclientPokemon: Pokemon | null,\n\t\tserverPokemon: ServerPokemon | null | undefined,\n\t\tisActive: boolean | undefined,\n\t\thidePossible?: boolean\n\t) {\n\t\tlet text = '';\n\t\tconst abilityData = this.getPokemonAbilityData(clientPokemon, serverPokemon);\n\t\tif (!isActive) {\n\t\t\t// for switch tooltips, only show the original ability\n\t\t\tconst ability = abilityData.baseAbility || abilityData.ability;\n\t\t\tif (ability) text = '<small>Ability:</small> ' + this.battle.dex.abilities.get(ability).name;\n\t\t} else {\n\t\t\tif (abilityData.ability) {\n\t\t\t\tconst abilityName = this.battle.dex.abilities.get(abilityData.ability).name;\n\t\t\t\ttext = '<small>Ability:</small> ' + abilityName;\n\t\t\t\tconst baseAbilityName = this.battle.dex.abilities.get(abilityData.baseAbility).name;\n\t\t\t\tif (baseAbilityName && baseAbilityName !== abilityName) text += ' (base: ' + baseAbilityName + ')';\n\t\t\t}\n\t\t}\n\t\tconst tier = this.battle.tier;\n\t\tif (!text && abilityData.possibilities.length && !hidePossible &&\n\t\t\t!(tier.includes('Almost Any Ability') || tier.includes('Hackmons') ||\n\t\t\t\ttier.includes('Inheritance') || tier.includes('Metronome'))) {\n\t\t\ttext = '<small>Possible abilities:</small> ' + abilityData.possibilities.join(', ');\n\t\t}\n\t\treturn text;\n\t}\n}\n\nexport class BattleStatGuesser {\n\tformatid: ID;\n\tdex: ModdedDex;\n\tmoveCount: any = null;\n\thasMove: any = null;\n\n\tignoreEVLimits: boolean;\n\tsupportsEVs: boolean;\n\tsupportsAVs: boolean;\n\n\tconstructor(formatid: ID) {\n\t\tthis.formatid = formatid;\n\t\tthis.dex = formatid ? Dex.mod(formatid.slice(0, 4) as ID) : Dex;\n\t\tthis.ignoreEVLimits = (\n\t\t\tthis.dex.gen < 3 ||\n\t\t\t((this.formatid.endsWith('hackmons') || this.formatid.endsWith('bh')) && this.dex.gen !== 6) ||\n\t\t\tthis.formatid.includes('metronomebattle') ||\n\t\t\tthis.formatid.endsWith('norestrictions')\n\t\t);\n\t\tthis.supportsEVs = !this.formatid.includes('letsgo');\n\t\tthis.supportsAVs = !this.supportsEVs && this.formatid.endsWith('norestrictions');\n\t}\n\tguess(set: Dex.PokemonSet) {\n\t\tlet role = this.guessRole(set);\n\t\tlet comboEVs = this.guessEVs(set, role);\n\t\tlet evs = { hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0 };\n\t\tfor (let stat in evs) {\n\t\t\tevs[stat as Dex.StatName] = comboEVs[stat as Dex.StatName] || 0;\n\t\t}\n\t\tlet plusStat = comboEVs.plusStat || '' as const;\n\t\tlet minusStat = comboEVs.minusStat || '' as const;\n\t\treturn { role, evs, plusStat, minusStat, moveCount: this.moveCount, hasMove: this.hasMove };\n\t}\n\tguessRole(set: Dex.PokemonSet) {\n\t\tif (!set) return '?';\n\t\tif (!set.moves) return '?';\n\n\t\tlet moveCount = {\n\t\t\t'Physical': 0,\n\t\t\t'Special': 0,\n\t\t\t'PhysicalAttack': 0,\n\t\t\t'SpecialAttack': 0,\n\t\t\t'PhysicalSetup': 0,\n\t\t\t'SpecialSetup': 0,\n\t\t\t'Support': 0,\n\t\t\t'Setup': 0,\n\t\t\t'Restoration': 0,\n\t\t\t'Offense': 0,\n\t\t\t'Stall': 0,\n\t\t\t'SpecialStall': 0,\n\t\t\t'PhysicalStall': 0,\n\t\t\t'Fast': 0,\n\t\t\t'Ultrafast': 0,\n\t\t\t'bulk': 0,\n\t\t\t'specialBulk': 0,\n\t\t\t'physicalBulk': 0,\n\t\t};\n\t\tlet hasMove: { [moveid: string]: 1 } = {};\n\t\tlet itemid = toID(set.item);\n\t\tlet item = this.dex.items.get(itemid);\n\t\tlet abilityid = toID(set.ability);\n\n\t\tlet species = this.dex.species.get(set.species || set.name!);\n\t\tif (item.megaEvolves === species.name) species = this.dex.species.get(item.megaStone);\n\t\tif (!species.exists) return '?';\n\t\tlet stats = species.baseStats;\n\n\t\tif (set.moves.length < 1) return '?';\n\t\tlet needsFourMoves = !['unown', 'ditto'].includes(species.id);\n\t\tlet hasFourValidMoves = set.moves.length >= 4 && !set.moves.includes('');\n\t\tlet moveids = set.moves.map(toID);\n\t\tif (moveids.includes('lastresort' as ID)) needsFourMoves = false;\n\t\tif (!hasFourValidMoves && needsFourMoves && !this.formatid.includes('metronomebattle')) {\n\t\t\treturn '?';\n\t\t}\n\n\t\tfor (let i = 0, len = set.moves.length; i < len; i++) {\n\t\t\tlet move = this.dex.moves.get(set.moves[i]);\n\t\t\thasMove[move.id] = 1;\n\t\t\tif (move.category === 'Status') {\n\t\t\t\tif (['batonpass', 'healingwish', 'lunardance'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t} else if (['metronome', 'assist', 'copycat', 'mefirst', 'photongeyser', 'shellsidearm'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Physical'] += 0.5;\n\t\t\t\t\tmoveCount['Special'] += 0.5;\n\t\t\t\t} else if (move.id === 'naturepower') {\n\t\t\t\t\tmoveCount['Special']++;\n\t\t\t\t} else if (['protect', 'detect', 'spikyshield', 'kingsshield'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t} else if (move.id === 'wish') {\n\t\t\t\t\tmoveCount['Restoration']++;\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t} else if (move.heal) {\n\t\t\t\t\tmoveCount['Restoration']++;\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t} else if (move.target === 'self') {\n\t\t\t\t\tif (['agility', 'rockpolish', 'shellsmash', 'growth', 'workup'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\n\t\t\t\t\t} else if (['dragondance', 'swordsdance', 'coil', 'bulkup', 'curse', 'bellydrum'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\t\t} else if (['nastyplot', 'tailglow', 'quiverdance', 'calmmind', 'geomancy'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\n\t\t\t\t\t}\n\t\t\t\t\tif (move.id === 'substitute') moveCount['Stall']++;\n\t\t\t\t\tmoveCount['Setup']++;\n\t\t\t\t} else {\n\t\t\t\t\tif (['toxic', 'leechseed', 'willowisp'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t\t}\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t}\n\t\t\t} else if (['counter', 'endeavor', 'metalburst', 'mirrorcoat', 'rapidspin'].includes(move.id)) {\n\t\t\t\tmoveCount['Support']++;\n\t\t\t} else if ([\n\t\t\t\t'nightshade', 'seismictoss', 'psywave', 'superfang', 'naturesmadness', 'foulplay', 'endeavor', 'finalgambit', 'bodypress',\n\t\t\t].includes(move.id)) {\n\t\t\t\tmoveCount['Offense']++;\n\t\t\t} else if (move.id === 'fellstinger') {\n\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\tmoveCount['Setup']++;\n\t\t\t} else {\n\t\t\t\tmoveCount[move.category]++;\n\t\t\t\tmoveCount['Offense']++;\n\t\t\t\tif (move.id === 'knockoff') {\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t}\n\t\t\t\tif (['scald', 'voltswitch', 'uturn', 'flipturn'].includes(move.id)) {\n\t\t\t\t\tmoveCount[move.category] -= 0.2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (hasMove['batonpass']) moveCount['Support'] += moveCount['Setup'];\n\t\tmoveCount['PhysicalAttack'] = moveCount['Physical'];\n\t\tmoveCount['Physical'] += moveCount['PhysicalSetup'];\n\t\tmoveCount['SpecialAttack'] = moveCount['Special'];\n\t\tmoveCount['Special'] += moveCount['SpecialSetup'];\n\n\t\tif (hasMove['dragondance'] || hasMove['quiverdance']) moveCount['Ultrafast'] = 1;\n\n\t\tlet isFast = (stats.spe >= 80);\n\t\tlet physicalBulk = (stats.hp + 75) * (stats.def + 87);\n\t\tlet specialBulk = (stats.hp + 75) * (stats.spd + 87);\n\n\t\tif (hasMove['willowisp'] || hasMove['acidarmor'] || hasMove['irondefense'] || hasMove['cottonguard']) {\n\t\t\tphysicalBulk *= 1.6;\n\t\t\tmoveCount['PhysicalStall']++;\n\t\t} else if (hasMove['scald'] || hasMove['bulkup'] || hasMove['coil'] || hasMove['cosmicpower']) {\n\t\t\tphysicalBulk *= 1.3;\n\t\t\tif (hasMove['scald']) { // partial stall goes in reverse\n\t\t\t\tmoveCount['SpecialStall']++;\n\t\t\t} else {\n\t\t\t\tmoveCount['PhysicalStall']++;\n\t\t\t}\n\t\t}\n\t\tif (abilityid === 'flamebody') physicalBulk *= 1.1;\n\n\t\tif (hasMove['calmmind'] || hasMove['quiverdance'] || hasMove['geomancy']) {\n\t\t\tspecialBulk *= 1.3;\n\t\t\tmoveCount['SpecialStall']++;\n\t\t}\n\t\tif (abilityid === 'sandstream' && species.types.includes('Rock')) {\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\n\t\tif (hasMove['bellydrum']) {\n\t\t\tphysicalBulk *= 0.6;\n\t\t\tspecialBulk *= 0.6;\n\t\t}\n\t\tif (moveCount['Restoration']) {\n\t\t\tphysicalBulk *= 1.5;\n\t\t\tspecialBulk *= 1.5;\n\t\t} else if (hasMove['painsplit'] && hasMove['substitute']) {\n\t\t\t// SubSplit isn't generally a stall set\n\t\t\tmoveCount['Stall']--;\n\t\t} else if (hasMove['painsplit'] || hasMove['rest']) {\n\t\t\tphysicalBulk *= 1.4;\n\t\t\tspecialBulk *= 1.4;\n\t\t}\n\t\tif ((hasMove['bodyslam'] || hasMove['thunder']) && abilityid === 'serenegrace' || hasMove['thunderwave']) {\n\t\t\tphysicalBulk *= 1.1;\n\t\t\tspecialBulk *= 1.1;\n\t\t}\n\t\tif ((hasMove['ironhead'] || hasMove['airslash']) && abilityid === 'serenegrace') {\n\t\t\tphysicalBulk *= 1.1;\n\t\t\tspecialBulk *= 1.1;\n\t\t}\n\t\tif (hasMove['gigadrain'] || hasMove['drainpunch'] || hasMove['hornleech']) {\n\t\t\tphysicalBulk *= 1.15;\n\t\t\tspecialBulk *= 1.15;\n\t\t}\n\t\tif (itemid === 'leftovers' || itemid === 'blacksludge') {\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t}\n\t\tif (hasMove['leechseed']) {\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t}\n\t\tif ((itemid === 'flameorb' || itemid === 'toxicorb') && abilityid !== 'magicguard') {\n\t\t\tif (itemid === 'toxicorb' && abilityid === 'poisonheal') {\n\t\t\t\tphysicalBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\n\t\t\t\tspecialBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\n\t\t\t} else {\n\t\t\t\tphysicalBulk *= 0.8;\n\t\t\t\tspecialBulk *= 0.8;\n\t\t\t}\n\t\t}\n\t\tif (itemid === 'lifeorb') {\n\t\t\tphysicalBulk *= 0.7;\n\t\t\tspecialBulk *= 0.7;\n\t\t}\n\t\tif (abilityid === 'multiscale' || abilityid === 'magicguard' || abilityid === 'regenerator') {\n\t\t\tphysicalBulk *= 1.4;\n\t\t\tspecialBulk *= 1.4;\n\t\t}\n\t\tif (itemid === 'eviolite') {\n\t\t\tphysicalBulk *= 1.5;\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\t\tif (itemid === 'assaultvest') {\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\n\t\tlet bulk = physicalBulk + specialBulk;\n\t\tif (bulk < 46000 && stats.spe >= 70) isFast = true;\n\t\tif (hasMove['trickroom']) isFast = false;\n\t\tmoveCount['bulk'] = bulk;\n\t\tmoveCount['physicalBulk'] = physicalBulk;\n\t\tmoveCount['specialBulk'] = specialBulk;\n\n\t\tif (\n\t\t\thasMove['agility'] || hasMove['dragondance'] || hasMove['quiverdance'] ||\n\t\t\thasMove['rockpolish'] || hasMove['shellsmash'] || hasMove['flamecharge']\n\t\t) {\n\t\t\tisFast = true;\n\t\t} else if (abilityid === 'unburden' || abilityid === 'speedboost' || abilityid === 'motordrive') {\n\t\t\tisFast = true;\n\t\t\tmoveCount['Ultrafast'] = 1;\n\t\t} else if (abilityid === 'chlorophyll' || abilityid === 'swiftswim' || abilityid === 'sandrush') {\n\t\t\tisFast = true;\n\t\t\tmoveCount['Ultrafast'] = 2;\n\t\t} else if (itemid === 'salacberry') {\n\t\t\tisFast = true;\n\t\t}\n\t\tconst ultrafast = hasMove['agility'] || hasMove['shellsmash'] ||\n\t\t\thasMove['autotomize'] || hasMove['shiftgear'] || hasMove['rockpolish'];\n\t\tif (ultrafast) {\n\t\t\tmoveCount['Ultrafast'] = 2;\n\t\t}\n\t\tmoveCount['Fast'] = isFast ? 1 : 0;\n\n\t\tthis.moveCount = moveCount;\n\t\tthis.hasMove = hasMove;\n\n\t\tif (species.id === 'ditto') return abilityid === 'imposter' ? 'Physically Defensive' : 'Fast Bulky Support';\n\t\tif (species.id === 'shedinja') return 'Fast Physical Sweeper';\n\n\t\tif (itemid === 'choiceband' && moveCount['PhysicalAttack'] >= 2) {\n\t\t\tif (!isFast) return 'Bulky Band';\n\t\t\treturn 'Fast Band';\n\t\t} else if (itemid === 'choicespecs' && moveCount['SpecialAttack'] >= 2) {\n\t\t\tif (!isFast) return 'Bulky Specs';\n\t\t\treturn 'Fast Specs';\n\t\t} else if (itemid === 'choicescarf') {\n\t\t\tif (moveCount['PhysicalAttack'] === 0) return 'Special Scarf';\n\t\t\tif (moveCount['SpecialAttack'] === 0) return 'Physical Scarf';\n\t\t\tif (moveCount['PhysicalAttack'] > moveCount['SpecialAttack']) return 'Physical Biased Mixed Scarf';\n\t\t\tif (moveCount['PhysicalAttack'] < moveCount['SpecialAttack']) return 'Special Biased Mixed Scarf';\n\t\t\tif (stats.atk < stats.spa) return 'Special Biased Mixed Scarf';\n\t\t\treturn 'Physical Biased Mixed Scarf';\n\t\t}\n\n\t\tif (species.id === 'unown') return 'Fast Special Sweeper';\n\n\t\tif (moveCount['PhysicalStall'] && moveCount['Restoration']) {\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\n\t\t\treturn 'Specially Defensive';\n\t\t}\n\t\tif (moveCount['SpecialStall'] && moveCount['Restoration'] && itemid !== 'lifeorb') {\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\n\t\t\treturn 'Physically Defensive';\n\t\t}\n\n\t\tlet offenseBias: 'Physical' | 'Special' = 'Physical';\n\t\tif (stats.spa > stats.atk && moveCount['Special'] > 1) offenseBias = 'Special';\n\t\telse if (stats.atk > stats.spa && moveCount['Physical'] > 1) offenseBias = 'Physical';\n\t\telse if (moveCount['Special'] > moveCount['Physical']) offenseBias = 'Special';\n\n\t\tif (moveCount['Stall'] + moveCount['Support'] / 2 <= 2 && bulk < 135000 && moveCount[offenseBias] >= 1.5) {\n\t\t\tif (isFast) {\n\t\t\t\tif (bulk > 80000 && !moveCount['Ultrafast']) return 'Bulky ' + offenseBias + ' Sweeper';\n\t\t\t\treturn 'Fast ' + offenseBias + ' Sweeper';\n\t\t\t} else {\n\t\t\t\tif (moveCount[offenseBias] >= 3 || moveCount['Stall'] <= 0) {\n\t\t\t\t\treturn 'Bulky ' + offenseBias + ' Sweeper';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isFast && abilityid !== 'prankster') {\n\t\t\tif (stats.spe > 100 || bulk < 55000 || moveCount['Ultrafast']) {\n\t\t\t\treturn 'Fast Bulky Support';\n\t\t\t}\n\t\t}\n\t\tif (moveCount['SpecialStall']) return 'Physically Defensive';\n\t\tif (moveCount['PhysicalStall']) return 'Specially Defensive';\n\t\tif (species.id === 'blissey' || species.id === 'chansey') return 'Physically Defensive';\n\t\tif (specialBulk >= physicalBulk) return 'Specially Defensive';\n\t\treturn 'Physically Defensive';\n\t}\n\tensureMinEVs(evs: Dex.StatsTable, stat: Dex.StatName, min: number, evTotal: number) {\n\t\tif (!evs[stat]) evs[stat] = 0;\n\t\tlet diff = min - evs[stat];\n\t\tif (diff <= 0) return evTotal;\n\t\tif (evTotal <= 504) {\n\t\t\tlet change = Math.min(508 - evTotal, diff);\n\t\t\tevTotal += change;\n\t\t\tevs[stat] += change;\n\t\t\tdiff -= change;\n\t\t}\n\t\tif (diff <= 0) return evTotal;\n\t\tlet evPriority = { def: 1, spd: 1, hp: 1, atk: 1, spa: 1, spe: 1 };\n\t\tlet prioStat: Dex.StatName;\n\t\tfor (prioStat in evPriority) {\n\t\t\tif (prioStat === stat) continue;\n\t\t\tif (evs[prioStat] && evs[prioStat] > 128) {\n\t\t\t\tevs[prioStat] -= diff;\n\t\t\t\tevs[stat] += diff;\n\t\t\t\treturn evTotal;\n\t\t\t}\n\t\t}\n\t\treturn evTotal; // can't do it :(\n\t}\n\tensureMaxEVs(evs: Dex.StatsTable, stat: Dex.StatName, min: number, evTotal: number) {\n\t\tif (!evs[stat]) evs[stat] = 0;\n\t\tlet diff = evs[stat] - min;\n\t\tif (diff <= 0) return evTotal;\n\t\tevs[stat] -= diff;\n\t\tevTotal -= diff;\n\t\treturn evTotal; // can't do it :(\n\t}\n\tguessEVs(\n\t\tset: Dex.PokemonSet, role: string\n\t): Partial<Dex.StatsTable> & { plusStat?: Dex.StatNameExceptHP, minusStat?: Dex.StatNameExceptHP } {\n\t\tif (!set) return {};\n\t\tif (role === '?') return {};\n\t\tlet species = this.dex.species.get(set.species || set.name!);\n\t\tlet stats = species.baseStats;\n\n\t\tlet hasMove = this.hasMove;\n\t\tlet moveCount = this.moveCount;\n\n\t\tlet evs: Dex.StatsTable & { plusStat?: Dex.StatNameExceptHP, minusStat?: Dex.StatNameExceptHP } = {\n\t\t\thp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0,\n\t\t};\n\t\tlet plusStat: Dex.StatNameExceptHP;\n\t\tlet minusStat: Dex.StatNameExceptHP | undefined = undefined;\n\n\t\tlet statChart: { [role: string]: [Dex.StatNameExceptHP, Dex.StatName] } = {\n\t\t\t'Bulky Band': ['atk', 'hp'],\n\t\t\t'Fast Band': ['spe', 'atk'],\n\t\t\t'Bulky Specs': ['spa', 'hp'],\n\t\t\t'Fast Specs': ['spe', 'spa'],\n\t\t\t'Physical Scarf': ['spe', 'atk'],\n\t\t\t'Special Scarf': ['spe', 'spa'],\n\t\t\t'Physical Biased Mixed Scarf': ['spe', 'atk'],\n\t\t\t'Special Biased Mixed Scarf': ['spe', 'spa'],\n\t\t\t'Fast Physical Sweeper': ['spe', 'atk'],\n\t\t\t'Fast Special Sweeper': ['spe', 'spa'],\n\t\t\t'Bulky Physical Sweeper': ['atk', 'hp'],\n\t\t\t'Bulky Special Sweeper': ['spa', 'hp'],\n\t\t\t'Fast Bulky Support': ['spe', 'hp'],\n\t\t\t'Physically Defensive': ['def', 'hp'],\n\t\t\t'Specially Defensive': ['spd', 'hp'],\n\t\t};\n\n\t\tplusStat = statChart[role][0];\n\t\tif (role === 'Fast Bulky Support') moveCount['Ultrafast'] = 0;\n\t\tif (plusStat === 'spe' && moveCount['Ultrafast']) {\n\t\t\tif (statChart[role][1] === 'atk' || statChart[role][1] === 'spa') {\n\t\t\t\tplusStat = statChart[role][1];\n\t\t\t} else if (moveCount['Physical'] >= 3) {\n\t\t\t\tplusStat = 'atk';\n\t\t\t} else if (stats.spd > stats.def) {\n\t\t\t\tplusStat = 'spd';\n\t\t\t} else {\n\t\t\t\tplusStat = 'def';\n\t\t\t}\n\t\t}\n\n\t\tif (this.supportsAVs) {\n\t\t\t// Let's Go, AVs enabled\n\t\t\tevs = { hp: 200, atk: 200, def: 200, spa: 200, spd: 200, spe: 200 };\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\n\t\t\tif (!moveCount['SpecialAttack']) evs.spa = 0;\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\n\t\t} else if (!this.supportsEVs) {\n\t\t\t// Let's Go, AVs disabled\n\t\t\t// no change\n\t\t} else if (this.ignoreEVLimits) {\n\t\t\t// Gen 1-2, hackable EVs (like Hackmons)\n\t\t\tevs = { hp: 252, atk: 252, def: 252, spa: 252, spd: 252, spe: 252 };\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\n\t\t\tif (!moveCount['SpecialAttack'] && this.dex.gen > 1) evs.spa = 0;\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\n\t\t\tif (this.dex.gen === 1) evs.spd = 0;\n\t\t\tif (this.dex.gen < 3) return evs;\n\t\t} else {\n\t\t\t// Normal Gen 3-7\n\t\t\tif (!statChart[role]) return {};\n\n\t\t\tlet evTotal = 0;\n\n\t\t\tlet primaryStat = statChart[role][0];\n\t\t\tlet stat = this.getStat(primaryStat, set, 252, plusStat === primaryStat ? 1.1 : 1.0);\n\t\t\tlet ev = 252;\n\t\t\twhile (ev > 0 && stat <= this.getStat(primaryStat, set, ev - 4, plusStat === primaryStat ? 1.1 : 1.0)) ev -= 4;\n\t\t\tevs[primaryStat] = ev;\n\t\t\tevTotal += ev;\n\n\t\t\tlet secondaryStat: Dex.StatName | null = statChart[role][1];\n\t\t\tif (secondaryStat === 'hp' && set.level && set.level < 20) secondaryStat = 'spd';\n\t\t\tstat = this.getStat(secondaryStat, set, 252, plusStat === secondaryStat ? 1.1 : 1.0);\n\t\t\tev = 252;\n\t\t\twhile (ev > 0 && stat <= this.getStat(secondaryStat, set, ev - 4, plusStat === secondaryStat ? 1.1 : 1.0)) ev -= 4;\n\t\t\tevs[secondaryStat] = ev;\n\t\t\tevTotal += ev;\n\n\t\t\tlet SRweaknesses = ['Fire', 'Flying', 'Bug', 'Ice'];\n\t\t\tlet SRresistances = ['Ground', 'Steel', 'Fighting'];\n\t\t\tlet SRweak = 0;\n\t\t\tif (set.ability !== 'Magic Guard' && set.ability !== 'Mountaineer') {\n\t\t\t\tif (SRweaknesses.includes(species.types[0])) {\n\t\t\t\t\tSRweak++;\n\t\t\t\t} else if (SRresistances.includes(species.types[0])) {\n\t\t\t\t\tSRweak--;\n\t\t\t\t}\n\t\t\t\tif (SRweaknesses.includes(species.types[1])) {\n\t\t\t\t\tSRweak++;\n\t\t\t\t} else if (SRresistances.includes(species.types[1])) {\n\t\t\t\t\tSRweak--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet hpDivisibility = 0;\n\t\t\tlet hpShouldBeDivisible = false;\n\t\t\tlet hp = evs['hp'] || 0;\n\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\tif ((set.item === 'Leftovers' || set.item === 'Black Sludge') && hasMove['substitute'] && stat !== 404) {\n\t\t\t\thpDivisibility = 4;\n\t\t\t} else if (set.item === 'Leftovers' || set.item === 'Black Sludge') {\n\t\t\t\thpDivisibility = 0;\n\t\t\t} else if (hasMove['bellydrum'] && (set.item || '').endsWith('Berry')) {\n\t\t\t\thpDivisibility = 2;\n\t\t\t\thpShouldBeDivisible = true;\n\t\t\t} else if (hasMove['substitute'] && (set.item || '').endsWith('Berry')) {\n\t\t\t\thpDivisibility = 4;\n\t\t\t\thpShouldBeDivisible = true;\n\t\t\t} else if (SRweak >= 2 || hasMove['bellydrum']) {\n\t\t\t\thpDivisibility = 2;\n\t\t\t} else if (SRweak >= 1 || hasMove['substitute'] || hasMove['transform']) {\n\t\t\t\thpDivisibility = 4;\n\t\t\t} else if (set.ability !== 'Magic Guard') {\n\t\t\t\thpDivisibility = 8;\n\t\t\t}\n\n\t\t\tif (hpDivisibility) {\n\t\t\t\twhile (hp < 252 && evTotal < 508 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\n\t\t\t\t\thp += 4;\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\t\t\tevTotal += 4;\n\t\t\t\t}\n\t\t\t\twhile (hp > 0 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\n\t\t\t\t\thp -= 4;\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\t\t\tevTotal -= 4;\n\t\t\t\t}\n\t\t\t\twhile (hp > 0 && stat === this.getStat('hp', set, hp - 4, 1)) {\n\t\t\t\t\thp -= 4;\n\t\t\t\t\tevTotal -= 4;\n\t\t\t\t}\n\t\t\t\tif (hp || evs['hp']) evs['hp'] = hp;\n\t\t\t}\n\n\t\t\tif (species.id === 'tentacruel') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 16, evTotal);\n\t\t\t} else if (species.id === 'skarmory') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 24, evTotal);\n\t\t\t} else if (species.id === 'jirachi') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 32, evTotal);\n\t\t\t} else if (species.id === 'celebi') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 36, evTotal);\n\t\t\t} else if (species.id === 'volcarona') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 52, evTotal);\n\t\t\t} else if (species.id === 'gliscor') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 72, evTotal);\n\t\t\t} else if (species.id === 'dragonite' && evs['hp']) {\n\t\t\t\tevTotal = this.ensureMaxEVs(evs, 'spe', 220, evTotal);\n\t\t\t}\n\n\t\t\tif (evTotal < 508) {\n\t\t\t\tlet remaining = 508 - evTotal;\n\t\t\t\tif (remaining > 252) remaining = 252;\n\t\t\t\tsecondaryStat = null;\n\t\t\t\tif (!evs['atk'] && moveCount['PhysicalAttack'] >= 1) {\n\t\t\t\t\tsecondaryStat = 'atk';\n\t\t\t\t} else if (!evs['spa'] && moveCount['SpecialAttack'] >= 1) {\n\t\t\t\t\tsecondaryStat = 'spa';\n\t\t\t\t} else if (stats.hp === 1 && !evs['def']) {\n\t\t\t\t\tsecondaryStat = 'def';\n\t\t\t\t} else if (stats.def === stats.spd && !evs['spd']) {\n\t\t\t\t\tsecondaryStat = 'spd';\n\t\t\t\t} else if (!evs['spd']) {\n\t\t\t\t\tsecondaryStat = 'spd';\n\t\t\t\t} else if (!evs['def']) {\n\t\t\t\t\tsecondaryStat = 'def';\n\t\t\t\t}\n\t\t\t\tif (secondaryStat) {\n\t\t\t\t\tev = remaining;\n\t\t\t\t\tstat = this.getStat(secondaryStat, set, ev);\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat(secondaryStat, set, ev - 4)) ev -= 4;\n\t\t\t\t\tif (ev) evs[secondaryStat] = ev;\n\t\t\t\t\tremaining -= ev;\n\t\t\t\t}\n\t\t\t\tif (remaining && !evs['spe']) {\n\t\t\t\t\tev = remaining;\n\t\t\t\t\tstat = this.getStat('spe', set, ev);\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat('spe', set, ev - 4)) ev -= 4;\n\t\t\t\t\tif (ev) evs['spe'] = ev;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasMove['gyroball'] || hasMove['trickroom']) {\n\t\t\tminusStat = 'spe';\n\t\t} else if (!moveCount['PhysicalAttack']) {\n\t\t\tminusStat = 'atk';\n\t\t} else if (moveCount['SpecialAttack'] < 1 && !evs['spa']) {\n\t\t\tif (moveCount['SpecialAttack'] < moveCount['PhysicalAttack']) {\n\t\t\t\tminusStat = 'spa';\n\t\t\t} else if (!evs['atk']) {\n\t\t\t\tminusStat = 'atk';\n\t\t\t}\n\t\t} else if (moveCount['PhysicalAttack'] < 1 && !evs['atk']) {\n\t\t\tminusStat = 'atk';\n\t\t} else if (stats.def > stats.spe && stats.spd > stats.spe && !evs['spe']) {\n\t\t\tminusStat = 'spe';\n\t\t} else if (stats.def > stats.spd) {\n\t\t\tminusStat = 'spd';\n\t\t} else {\n\t\t\tminusStat = 'def';\n\t\t}\n\n\t\tif (!minusStat || plusStat === minusStat) {\n\t\t\tminusStat = (plusStat === 'spe' ? 'spd' : 'spe');\n\t\t}\n\n\t\tevs.plusStat = plusStat;\n\t\tevs.minusStat = minusStat;\n\n\t\treturn evs;\n\t}\n\n\tgetStat(stat: Dex.StatName, set: Dex.PokemonSet, evOverride?: number, natureOverride?: number) {\n\t\tlet species = this.dex.species.get(set.species);\n\t\tif (!species.exists) return 0;\n\n\t\tlet level = set.level || 100;\n\n\t\tlet baseStat = species.baseStats[stat];\n\n\t\tlet iv = set.ivs?.[stat];\n\t\tif (typeof iv !== 'number') iv = 31;\n\t\tif (this.dex.gen <= 2) iv &= 30;\n\n\t\tlet ev = set.evs?.[stat];\n\t\tif (typeof ev !== 'number') ev = (this.dex.gen > 2 ? 0 : 252);\n\t\tif (evOverride !== undefined) ev = evOverride;\n\n\t\tif (stat === 'hp') {\n\t\t\tif (baseStat === 1) return 1;\n\t\t\tif (!this.supportsEVs) return ~~(~~(2 * baseStat + iv + 100) * level / 100 + 10) + (this.supportsAVs ? ev : 0);\n\t\t\treturn ~~(~~(2 * baseStat + iv + ~~(ev / 4) + 100) * level / 100 + 10);\n\t\t}\n\t\tlet val = ~~(~~(2 * baseStat + iv + ~~(ev / 4)) * level / 100 + 5);\n\t\tif (!this.supportsEVs) {\n\t\t\tval = ~~(~~(2 * baseStat + iv) * level / 100 + 5);\n\t\t}\n\t\tif (natureOverride) {\n\t\t\tval *= natureOverride;\n\t\t} else if (BattleNatures[set.nature!]?.plus === stat) {\n\t\t\tval *= 1.1;\n\t\t} else if (BattleNatures[set.nature!]?.minus === stat) {\n\t\t\tval *= 0.9;\n\t\t}\n\t\tif (!this.supportsEVs) {\n\t\t\tlet friendshipValue = ~~((70 / 255 / 10 + 1) * 100);\n\t\t\tval = ~~(val) * friendshipValue / 100 + (this.supportsAVs ? ev : 0);\n\t\t}\n\t\treturn ~~(val);\n\t}\n}\n\nexport function BattleStatOptimizer(set: Dex.PokemonSet, formatid: ID) {\n\tif (!set.evs) return null;\n\n\tconst dex = Dex.mod(formatid.slice(0, 4) as ID);\n\tconst ignoreEVLimits = (\n\t\tdex.gen < 3 ||\n\t\t((formatid.endsWith('hackmons') || formatid.endsWith('bh')) && dex.gen !== 6) ||\n\t\tformatid.includes('metronomebattle') || formatid.endsWith('norestrictions')\n\t);\n\tconst supportsEVs = !formatid.includes('letsgo');\n\tif (!supportsEVs || ignoreEVLimits) return null;\n\n\tconst species = dex.species.get(set.species);\n\tconst level = set.level || 100;\n\tconst getStat = (stat: Dex.StatNameExceptHP, ev: number, nature: Dex.Nature) => {\n\t\tconst baseStat = species.baseStats[stat];\n\t\tconst iv = set.ivs?.[stat] || 31;\n\t\tlet val = ~~(~~(2 * baseStat + iv + ~~(ev / 4)) * level / 100 + 5);\n\t\tif (nature.plus === stat) {\n\t\t\tval *= 1.1;\n\t\t} else if (nature.minus === stat) {\n\t\t\tval *= 0.9;\n\t\t}\n\t\treturn ~~(val);\n\t};\n\n\tconst origNature = BattleNatures[set.nature || 'Serious'];\n\tconst origStats = {\n\t\t// no need to calculate hp\n\t\tatk: getStat('atk', set.evs.atk || 0, origNature),\n\t\tdef: getStat('def', set.evs.def || 0, origNature),\n\t\tspa: getStat('spa', set.evs.spa || 0, origNature),\n\t\tspd: getStat('spd', set.evs.spd || 0, origNature),\n\t\tspe: getStat('spe', set.evs.spe || 0, origNature),\n\t};\n\tconst getMinEVs = (stat: Dex.StatNameExceptHP, nature: Dex.Nature) => {\n\t\tlet ev = 0;\n\t\twhile (getStat(stat, ev, nature) < origStats[stat]) {\n\t\t\tev += 4;\n\t\t}\n\t\treturn ev;\n\t};\n\n\tconst origSpread = { evs: set.evs, ...origNature };\n\tlet origLeftoverEVs = 508;\n\tfor (const stat of Dex.statNames) {\n\t\torigLeftoverEVs -= origSpread.evs?.[stat] || 0;\n\t}\n\t// Only check for optimizations if EVs are completed\n\tif (origLeftoverEVs > 4) return null;\n\n\t// Can't move the plus if it boosts its stat past normal EV limit\n\tconst plusTooHigh = origNature.plus && getStat(origNature.plus, 252, {}) < origStats[origNature.plus];\n\t// Can't move the minus if there's no investment in its stat to redistribute\n\tconst minusTooLow = origNature.minus && !origSpread.evs?.[origNature.minus];\n\t// If we can't move either of them, do nothing\n\tif (plusTooHigh && minusTooLow) return null;\n\n\tlet bestPlus = origNature.plus;\n\tlet bestPlusMinEVs = bestPlus && origSpread.evs[bestPlus];\n\tlet bestMinus = origNature.minus || 'atk';\n\tlet bestMinusMinEVs = origSpread.evs[bestMinus];\n\tlet savedEVs = 0;\n\n\t// Try and move the minus first, as figuring out where the plus should go is harder if the minus hasn't been placed\n\tif (!minusTooLow) {\n\t\tfor (const stat of Dex.statNamesExceptHP) {\n\t\t\tif (origStats[stat] < origStats[bestMinus]) {\n\t\t\t\tconst minEVs = getMinEVs(stat, { minus: stat });\n\t\t\t\tif (minEVs > 252) continue;\n\t\t\t\t// This number can go negative at this point, but we'll make up for it later (and check to make sure)\n\t\t\t\tsavedEVs = (origSpread.evs[stat] || 0) - minEVs;\n\t\t\t\tif (origNature.minus) {\n\t\t\t\t\tsavedEVs += (origSpread.evs[origNature.minus] || 0) - getMinEVs(origNature.minus, { minus: stat });\n\t\t\t\t}\n\t\t\t\tbestMinus = stat;\n\t\t\t\tbestMinusMinEVs = minEVs;\n\t\t\t}\n\t\t}\n\t}\n\tif (!plusTooHigh) {\n\t\tfor (const stat of Dex.statNamesExceptHP) {\n\t\t\t// Don't move the plus to an uninvested stat\n\t\t\tif (stat !== origNature.plus && origSpread.evs[stat] && stat !== bestMinus) {\n\t\t\t\tconst minEVs = getMinEVs(stat, { plus: stat });\n\t\t\t\tlet plusEVsSaved = (origNature.minus === stat ? getMinEVs(stat, {}) : origSpread.evs[stat] || 0) - minEVs;\n\t\t\t\tif (bestPlus && bestPlus !== bestMinus) {\n\t\t\t\t\tplusEVsSaved += bestPlusMinEVs! - getMinEVs(bestPlus, { plus: stat, minus: bestMinus });\n\t\t\t\t}\n\t\t\t\tif (plusEVsSaved > 0 && savedEVs + plusEVsSaved > 0) {\n\t\t\t\t\tsavedEVs += plusEVsSaved;\n\t\t\t\t\tbestPlus = stat;\n\t\t\t\t\tbestPlusMinEVs = minEVs;\n\t\t\t\t} else if (plusEVsSaved === 0 && (bestPlus || savedEVs > 0) || plusEVsSaved > 0 && savedEVs + plusEVsSaved === 0) {\n\t\t\t\t\tif (!bestPlus || getStat(stat, getMinEVs(stat, { plus: stat }), { plus: stat }) > origStats[stat]) {\n\t\t\t\t\t\tsavedEVs += plusEVsSaved;\n\t\t\t\t\t\tbestPlus = stat;\n\t\t\t\t\t\tbestPlusMinEVs = minEVs;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (bestPlus && savedEVs >= 0) {\n\t\tconst newSpread: {\n\t\t\tevs: Partial<Dex.StatsTable>,\n\t\t\tplus?: Dex.StatNameExceptHP,\n\t\t\tminus?: Dex.StatNameExceptHP,\n\t\t} = { evs: { ...origSpread.evs }, plus: bestPlus, minus: bestMinus };\n\t\tif (bestPlus !== origNature.plus || bestMinus !== origNature.minus) {\n\t\t\tnewSpread.evs[bestPlus] = bestPlusMinEVs!;\n\t\t\tnewSpread.evs[bestMinus] = bestMinusMinEVs!;\n\t\t\tif (origNature.plus && origNature.plus !== bestPlus && origNature.plus !== bestMinus) {\n\t\t\t\tnewSpread.evs[origNature.plus] = getMinEVs(origNature.plus, newSpread);\n\t\t\t}\n\t\t\tif (origNature.minus && origNature.minus !== bestPlus && origNature.minus !== bestMinus) {\n\t\t\t\tnewSpread.evs[origNature.minus] = getMinEVs(origNature.minus, newSpread);\n\t\t\t}\n\t\t\tfor (const stat of Dex.statNames) {\n\t\t\t\tif (!newSpread.evs[stat]) delete newSpread.evs[stat];\n\t\t\t}\n\t\t\treturn { ...newSpread, savedEVs };\n\t\t} else if (!plusTooHigh && !minusTooLow) {\n\t\t\tif (Math.floor(getStat(bestPlus, bestMinusMinEVs!, newSpread) / 11) <= Math.ceil(origStats[bestMinus] / 9)) {\n\t\t\t\t// We're not gaining more points from our plus than we're losing to our minus\n\t\t\t\t// So a neutral nature would be better\n\t\t\t\tdelete newSpread.plus;\n\t\t\t\tdelete newSpread.minus;\n\t\t\t\tnewSpread.evs[origNature.plus] = getMinEVs(origNature.plus, newSpread);\n\t\t\t\tnewSpread.evs[origNature.minus] = getMinEVs(origNature.minus, newSpread);\n\t\t\t\tsavedEVs += (origSpread.evs[origNature.plus] || 0) - newSpread.evs[origNature.plus]!;\n\t\t\t\tsavedEVs += (origSpread.evs[origNature.minus] || 0) - newSpread.evs[origNature.minus]!;\n\t\t\t\tif (savedEVs < 0) return null;\n\t\t\t\tfor (const stat of Dex.statNames) {\n\t\t\t\t\tif (!newSpread.evs[stat]) delete newSpread.evs[stat];\n\t\t\t\t}\n\t\t\t\treturn { ...newSpread, savedEVs };\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\ndeclare const require: any;\ndeclare const global: any;\nif (typeof require === 'function') {\n\t// in Node\n\tglobal.BattleStatGuesser = BattleStatGuesser;\n\tglobal.BattleStatOptimizer = BattleStatOptimizer;\n}\n"],"mappings":"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","ignoreList":[]}