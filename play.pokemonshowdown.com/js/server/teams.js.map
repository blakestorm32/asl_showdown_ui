{"version":3,"file":"teams.js","names":["Teams","_proto","prototype","pack","team","getIv","ivs","s","undefined","toString","buf","_i2","length","set","name","species","id","packName","item","ability","moves","map","join","nature","evs","gender","shiny","level","happiness","pokeball","hpType","gigantamax","dynamaxLevel","teraType","unpack","_this","startsWith","endsWith","JSON","parse","_unused","i","j","count","push","indexOf","substring","unpackName","Dex","items","get","includes","abilities","split","natures","hp","Number","atk","def","spa","spd","spe","parseInt","misc","replace","dexTable","obj","exists","trim","export","options","output","_i4","exportSet","_ref","arguments","hideStats","removeNicknames","out","isNaN","stats","ids","stat","shortNames","filter","Boolean","_i6","_set$moves2","move","charAt","slice","parseExportedTeamLine","line","isFirstLine","aggressive","_line$split","toID","_line$slice$split","evLines","_i8","evLine","_evLine$trim$split","statValue","statName","statid","getID","value","ivLines","_i10","ivLine","_ivLine$trim$split","test","natureIndex","substr","types","isName","hpIVs","HPivs","import","buffer","sanitize","getName","Array","isArray","Error","_i12","_unused2","lines","sets","curSet","shift","pop","_i14","getGenerator","format","_format$ruleTable","seed","TeamGenerator","formats","mod","formatID","require","ruleTable","has","generate","getTeam"],"sources":["../../../caches/pokemon-showdown/sim/teams.ts"],"sourcesContent":["/**\n * Teams\n * Pokemon Showdown - http://pokemonshowdown.com/\n *\n * Functions for converting and generating teams.\n *\n * @license MIT\n */\n\nimport { Dex, toID } from './dex';\nimport type { PRNG, PRNGSeed } from './prng';\n\ninterface ExportOptions {\n\thideStats?: boolean;\n\tremoveNicknames?: boolean | ((nickname: string) => string | null);\n}\n\nexport interface PokemonSet {\n\t/**\n\t * Nickname. Should be identical to its base species if not specified\n\t * by the player, e.g. \"Minior\".\n\t */\n\tname: string;\n\t/**\n\t * Species name (including forme if applicable), e.g. \"Minior-Red\".\n\t * This should always be converted to an id before use.\n\t */\n\tspecies: string;\n\t/**\n\t * This can be an id, e.g. \"whiteherb\" or a full name, e.g. \"White Herb\".\n\t * This should always be converted to an id before use.\n\t */\n\titem: string;\n\t/**\n\t * This can be an id, e.g. \"shieldsdown\" or a full name,\n\t * e.g. \"Shields Down\".\n\t * This should always be converted to an id before use.\n\t */\n\tability: string;\n\t/**\n\t * Each move can be an id, e.g. \"shellsmash\" or a full name,\n\t * e.g. \"Shell Smash\"\n\t * These should always be converted to ids before use.\n\t */\n\tmoves: string[];\n\t/**\n\t * This can be an id, e.g. \"adamant\" or a full name, e.g. \"Adamant\".\n\t * This should always be converted to an id before use.\n\t */\n\tnature: string;\n\tgender: string;\n\t/**\n\t * Effort Values, used in stat calculation.\n\t * These must be between 0 and 255, inclusive.\n\t *\n\t * Also used to store AVs for Let's Go\n\t */\n\tevs: StatsTable;\n\t/**\n\t * Individual Values, used in stat calculation.\n\t * These must be between 0 and 31, inclusive.\n\t *\n\t * These are also used as DVs, or determinant values, in Gens\n\t * 1 and 2, which are represented as even numbers from 0 to 30.\n\t *\n\t * In Gen 2-6, these must match the Hidden Power type.\n\t *\n\t * In Gen 7+, Bottle Caps means these can either match the\n\t * Hidden Power type or 31.\n\t */\n\tivs: StatsTable;\n\t/**\n\t * This is usually between 1 and 100, inclusive,\n\t * but the simulator supports levels up to 9999 for testing purposes.\n\t */\n\tlevel: number;\n\t/**\n\t * While having no direct competitive effect, certain Pokemon cannot\n\t * be legally obtained as shiny, either as a whole or with certain\n\t * event-only abilities or moves.\n\t */\n\tshiny?: boolean;\n\t/**\n\t * This is technically \"Friendship\", but the community calls this\n\t * \"Happiness\".\n\t *\n\t * It's used to calculate the power of the moves Return and Frustration.\n\t * This value must be between 0 and 255, inclusive.\n\t */\n\thappiness?: number;\n\t/**\n\t * The pokeball this Pokemon is in. Like shininess, this property\n\t * has no direct competitive effects, but has implications for\n\t * event legality. For example, any Rayquaza that knows V-Create\n\t * must be sent out from a Cherish Ball.\n\t *\n\t * TODO: actually support this in the validator, switching animations,\n\t * and the teambuilder.\n\t */\n\tpokeball?: string;\n\t/**\n\t * Hidden Power type. Optional in older gens, but used in Gen 7+\n\t * because `ivs` contain post-Battle-Cap values.\n\t */\n\thpType?: string;\n\t/**\n\t * Dynamax Level. Affects the amount of HP gained when Dynamaxed.\n\t * This value must be between 0 and 10, inclusive.\n\t */\n\tdynamaxLevel?: number;\n\tgigantamax?: boolean;\n\t/**\n\t * Tera Type\n\t */\n\tteraType?: string;\n}\n\nexport const Teams = new class Teams {\n\tpack(team: PokemonSet[] | null): string {\n\t\tif (!team) return '';\n\n\t\tfunction getIv(ivs: StatsTable, s: keyof StatsTable): string {\n\t\t\treturn ivs[s] === 31 || ivs[s] === undefined ? '' : ivs[s].toString();\n\t\t}\n\n\t\tlet buf = '';\n\t\tfor (const set of team) {\n\t\t\tif (buf) buf += ']';\n\n\t\t\t// name\n\t\t\tbuf += (set.name || set.species);\n\n\t\t\t// species\n\t\t\tconst id = this.packName(set.species || set.name);\n\t\t\tbuf += `|${this.packName(set.name || set.species) === id ? '' : id}`;\n\n\t\t\t// item\n\t\t\tbuf += `|${this.packName(set.item)}`;\n\n\t\t\t// ability\n\t\t\tbuf += `|${this.packName(set.ability)}`;\n\n\t\t\t// moves\n\t\t\tbuf += '|' + set.moves.map(this.packName).join(',');\n\n\t\t\t// nature\n\t\t\tbuf += `|${set.nature || ''}`;\n\n\t\t\t// evs\n\t\t\tlet evs = '|';\n\t\t\tif (set.evs) {\n\t\t\t\tevs = `|${set.evs['hp'] || ''},${set.evs['atk'] || ''},${set.evs['def'] || ''},` +\n\t\t\t\t\t`${set.evs['spa'] || ''},${set.evs['spd'] || ''},${set.evs['spe'] || ''}`;\n\t\t\t}\n\t\t\tif (evs === '|,,,,,') {\n\t\t\t\tbuf += '|';\n\t\t\t} else {\n\t\t\t\tbuf += evs;\n\t\t\t}\n\n\t\t\t// gender\n\t\t\tif (set.gender) {\n\t\t\t\tbuf += `|${set.gender}`;\n\t\t\t} else {\n\t\t\t\tbuf += '|';\n\t\t\t}\n\n\t\t\t// ivs\n\t\t\tlet ivs = '|';\n\t\t\tif (set.ivs) {\n\t\t\t\tivs = `|${getIv(set.ivs, 'hp')},${getIv(set.ivs, 'atk')},${getIv(set.ivs, 'def')},` +\n\t\t\t\t\t`${getIv(set.ivs, 'spa')},${getIv(set.ivs, 'spd')},${getIv(set.ivs, 'spe')}`;\n\t\t\t}\n\t\t\tif (ivs === '|,,,,,') {\n\t\t\t\tbuf += '|';\n\t\t\t} else {\n\t\t\t\tbuf += ivs;\n\t\t\t}\n\n\t\t\t// shiny\n\t\t\tif (set.shiny) {\n\t\t\t\tbuf += '|S';\n\t\t\t} else {\n\t\t\t\tbuf += '|';\n\t\t\t}\n\n\t\t\t// level\n\t\t\tif (set.level && set.level !== 100) {\n\t\t\t\tbuf += `|${set.level}`;\n\t\t\t} else {\n\t\t\t\tbuf += '|';\n\t\t\t}\n\n\t\t\t// happiness\n\t\t\tif (set.happiness !== undefined && set.happiness !== 255) {\n\t\t\t\tbuf += `|${set.happiness}`;\n\t\t\t} else {\n\t\t\t\tbuf += '|';\n\t\t\t}\n\n\t\t\tif (set.pokeball || set.hpType || set.gigantamax ||\n\t\t\t\t(set.dynamaxLevel !== undefined && set.dynamaxLevel !== 10) || set.teraType) {\n\t\t\t\tbuf += `,${set.hpType || ''}`;\n\t\t\t\tbuf += `,${this.packName(set.pokeball || '')}`;\n\t\t\t\tbuf += `,${set.gigantamax ? 'G' : ''}`;\n\t\t\t\tbuf += `,${set.dynamaxLevel !== undefined && set.dynamaxLevel !== 10 ? set.dynamaxLevel : ''}`;\n\t\t\t\tbuf += `,${set.teraType || ''}`;\n\t\t\t}\n\t\t}\n\n\t\treturn buf;\n\t}\n\n\tunpack(buf: string): PokemonSet[] | null {\n\t\tif (!buf) return null;\n\t\tif (typeof buf !== 'string') return buf;\n\t\tif (buf.startsWith('[') && buf.endsWith(']')) {\n\t\t\ttry {\n\t\t\t\tbuf = this.pack(JSON.parse(buf));\n\t\t\t} catch {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tconst team = [];\n\t\tlet i = 0;\n\t\tlet j = 0;\n\n\t\t// limit to 24\n\t\tfor (let count = 0; count < 24; count++) {\n\t\t\tconst set: PokemonSet = {} as PokemonSet;\n\t\t\tteam.push(set);\n\n\t\t\t// name\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tset.name = buf.substring(i, j);\n\t\t\ti = j + 1;\n\n\t\t\t// species\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tset.species = this.unpackName(buf.substring(i, j), Dex.species) || set.name;\n\t\t\ti = j + 1;\n\n\t\t\t// item\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tset.item = this.unpackName(buf.substring(i, j), Dex.items);\n\t\t\ti = j + 1;\n\n\t\t\t// ability\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tconst ability = buf.substring(i, j);\n\t\t\tconst species = Dex.species.get(set.species);\n\t\t\tset.ability = ['', '0', '1', 'H', 'S'].includes(ability) ?\n\t\t\t\tspecies.abilities[ability as '0' || '0'] || (ability === '' ? '' : '!!!ERROR!!!') :\n\t\t\t\tthis.unpackName(ability, Dex.abilities);\n\t\t\ti = j + 1;\n\n\t\t\t// moves\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tset.moves = buf.substring(i, j).split(',', 24).map(name => this.unpackName(name, Dex.moves));\n\t\t\ti = j + 1;\n\n\t\t\t// nature\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tset.nature = this.unpackName(buf.substring(i, j), Dex.natures);\n\t\t\ti = j + 1;\n\n\t\t\t// evs\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tif (j !== i) {\n\t\t\t\tconst evs = buf.substring(i, j).split(',', 6);\n\t\t\t\tset.evs = {\n\t\t\t\t\thp: Number(evs[0]) || 0,\n\t\t\t\t\tatk: Number(evs[1]) || 0,\n\t\t\t\t\tdef: Number(evs[2]) || 0,\n\t\t\t\t\tspa: Number(evs[3]) || 0,\n\t\t\t\t\tspd: Number(evs[4]) || 0,\n\t\t\t\t\tspe: Number(evs[5]) || 0,\n\t\t\t\t};\n\t\t\t}\n\t\t\ti = j + 1;\n\n\t\t\t// gender\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tif (i !== j) set.gender = buf.substring(i, j);\n\t\t\ti = j + 1;\n\n\t\t\t// ivs\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tif (j !== i) {\n\t\t\t\tconst ivs = buf.substring(i, j).split(',', 6);\n\t\t\t\tset.ivs = {\n\t\t\t\t\thp: ivs[0] === '' ? 31 : Number(ivs[0]) || 0,\n\t\t\t\t\tatk: ivs[1] === '' ? 31 : Number(ivs[1]) || 0,\n\t\t\t\t\tdef: ivs[2] === '' ? 31 : Number(ivs[2]) || 0,\n\t\t\t\t\tspa: ivs[3] === '' ? 31 : Number(ivs[3]) || 0,\n\t\t\t\t\tspd: ivs[4] === '' ? 31 : Number(ivs[4]) || 0,\n\t\t\t\t\tspe: ivs[5] === '' ? 31 : Number(ivs[5]) || 0,\n\t\t\t\t};\n\t\t\t}\n\t\t\ti = j + 1;\n\n\t\t\t// shiny\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tif (i !== j) set.shiny = true;\n\t\t\ti = j + 1;\n\n\t\t\t// level\n\t\t\tj = buf.indexOf('|', i);\n\t\t\tif (j < 0) return null;\n\t\t\tif (i !== j) set.level = parseInt(buf.substring(i, j));\n\t\t\ti = j + 1;\n\n\t\t\t// happiness\n\t\t\tj = buf.indexOf(']', i);\n\t\t\tlet misc;\n\t\t\tif (j < 0) {\n\t\t\t\tif (i < buf.length) misc = buf.substring(i).split(',', 6);\n\t\t\t} else {\n\t\t\t\tif (i !== j) misc = buf.substring(i, j).split(',', 6);\n\t\t\t}\n\t\t\tif (misc) {\n\t\t\t\tset.happiness = (misc[0] ? Number(misc[0]) : 255);\n\t\t\t\tset.hpType = misc[1] || '';\n\t\t\t\tset.pokeball = this.unpackName(misc[2] || '', Dex.items);\n\t\t\t\tset.gigantamax = !!misc[3];\n\t\t\t\tset.dynamaxLevel = (misc[4] ? Number(misc[4]) : 10);\n\t\t\t\tset.teraType = misc[5];\n\t\t\t}\n\t\t\tif (j < 0) break;\n\t\t\ti = j + 1;\n\t\t}\n\n\t\treturn team;\n\t}\n\n\t/** Very similar to toID but without the lowercase conversion */\n\tpackName(this: void, name: string | undefined | null) {\n\t\tif (!name) return '';\n\t\treturn name.replace(/[^A-Za-z0-9]+/g, '');\n\t}\n\n\t/** Will not entirely recover a packed name, but will be a pretty readable guess */\n\tunpackName(name: string, dexTable?: { get: (name: string) => AnyObject }) {\n\t\tif (!name) return '';\n\t\tif (dexTable) {\n\t\t\tconst obj = dexTable.get(name);\n\t\t\tif (obj.exists) return obj.name;\n\t\t}\n\t\treturn name.replace(/([0-9]+)/g, ' $1 ').replace(/([A-Z])/g, ' $1').replace(/[ ][ ]/g, ' ').trim();\n\t}\n\n\t/**\n\t * Exports a team in human-readable PS export format\n\t */\n\texport(team: PokemonSet[], options?: ExportOptions) {\n\t\tlet output = '';\n\t\tfor (const set of team) {\n\t\t\toutput += this.exportSet(set, options) + `\\n`;\n\t\t}\n\t\treturn output;\n\t}\n\n\texportSet(set: PokemonSet, { hideStats, removeNicknames }: ExportOptions = {}) {\n\t\tlet out = ``;\n\n\t\t// core\n\t\tif (typeof removeNicknames === 'function' && set.name && set.name !== set.species) {\n\t\t\tset.name = removeNicknames(set.name) || set.species;\n\t\t}\n\t\tif (set.name && set.name !== set.species && removeNicknames !== true) {\n\t\t\tout += `${set.name} (${set.species})`;\n\t\t} else {\n\t\t\tout += set.species;\n\t\t}\n\t\tif (set.gender === 'M') out += ` (M)`;\n\t\tif (set.gender === 'F') out += ` (F)`;\n\t\tif (set.item) out += ` @ ${set.item}`;\n\t\tout += `  \\n`;\n\n\t\tif (set.ability) {\n\t\t\tout += `Ability: ${set.ability}  \\n`;\n\t\t}\n\n\t\t// details\n\t\tif (set.level && set.level !== 100) {\n\t\t\tout += `Level: ${set.level}  \\n`;\n\t\t}\n\t\tif (set.shiny) {\n\t\t\tout += `Shiny: Yes  \\n`;\n\t\t}\n\t\tif (typeof set.happiness === 'number' && set.happiness !== 255 && !isNaN(set.happiness)) {\n\t\t\tout += `Happiness: ${set.happiness}  \\n`;\n\t\t}\n\t\tif (set.pokeball) {\n\t\t\tout += `Pokeball: ${set.pokeball}  \\n`;\n\t\t}\n\t\tif (set.hpType) {\n\t\t\tout += `Hidden Power: ${set.hpType}  \\n`;\n\t\t}\n\t\tif (typeof set.dynamaxLevel === 'number' && set.dynamaxLevel !== 10 && !isNaN(set.dynamaxLevel)) {\n\t\t\tout += `Dynamax Level: ${set.dynamaxLevel}  \\n`;\n\t\t}\n\t\tif (set.gigantamax) {\n\t\t\tout += `Gigantamax: Yes  \\n`;\n\t\t}\n\t\tif (set.teraType) {\n\t\t\tout += `Tera Type: ${set.teraType}  \\n`;\n\t\t}\n\n\t\t// stats\n\t\tif (!hideStats) {\n\t\t\tif (set.evs) {\n\t\t\t\tconst stats = Dex.stats.ids().map(\n\t\t\t\t\tstat => set.evs[stat] ?\n\t\t\t\t\t\t`${set.evs[stat]} ${Dex.stats.shortNames[stat]}` : ``\n\t\t\t\t).filter(Boolean);\n\t\t\t\tif (stats.length) {\n\t\t\t\t\tout += `EVs: ${stats.join(\" / \")}  \\n`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (set.nature) {\n\t\t\t\tout += `${set.nature} Nature  \\n`;\n\t\t\t}\n\t\t\tif (set.ivs) {\n\t\t\t\tconst stats = Dex.stats.ids().map(\n\t\t\t\t\tstat => (set.ivs[stat] !== 31 && set.ivs[stat] !== undefined) ?\n\t\t\t\t\t\t`${set.ivs[stat] || 0} ${Dex.stats.shortNames[stat]}` : ``\n\t\t\t\t).filter(Boolean);\n\t\t\t\tif (stats.length) {\n\t\t\t\t\tout += `IVs: ${stats.join(\" / \")}  \\n`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// moves\n\t\tfor (let move of set.moves) {\n\t\t\tif (move.startsWith(`Hidden Power `) && move.charAt(13) !== '[') {\n\t\t\t\tmove = `Hidden Power [${move.slice(13)}]`;\n\t\t\t}\n\t\t\tout += `- ${move}  \\n`;\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tparseExportedTeamLine(line: string, isFirstLine: boolean, set: PokemonSet, aggressive?: boolean) {\n\t\tif (isFirstLine) {\n\t\t\tlet item;\n\t\t\t[line, item] = line.split(' @ ');\n\t\t\tif (item) {\n\t\t\t\tset.item = item;\n\t\t\t\tif (toID(set.item) === 'noitem') set.item = '';\n\t\t\t}\n\t\t\tif (line.endsWith(' (M)')) {\n\t\t\t\tset.gender = 'M';\n\t\t\t\tline = line.slice(0, -4);\n\t\t\t}\n\t\t\tif (line.endsWith(' (F)')) {\n\t\t\t\tset.gender = 'F';\n\t\t\t\tline = line.slice(0, -4);\n\t\t\t}\n\t\t\tif (line.endsWith(')') && line.includes('(')) {\n\t\t\t\tconst [name, species] = line.slice(0, -1).split('(');\n\t\t\t\tset.species = Dex.species.get(species).name;\n\t\t\t\tset.name = name.trim();\n\t\t\t} else {\n\t\t\t\tset.species = Dex.species.get(line).name;\n\t\t\t\tset.name = '';\n\t\t\t}\n\t\t} else if (line.startsWith('Trait: ')) {\n\t\t\tline = line.slice(7);\n\t\t\tset.ability = aggressive ? toID(line) : line;\n\t\t} else if (line.startsWith('Ability: ')) {\n\t\t\tline = line.slice(9);\n\t\t\tset.ability = aggressive ? toID(line) : line;\n\t\t} else if (line === 'Shiny: Yes') {\n\t\t\tset.shiny = true;\n\t\t} else if (line.startsWith('Level: ')) {\n\t\t\tline = line.slice(7);\n\t\t\tset.level = +line;\n\t\t} else if (line.startsWith('Happiness: ')) {\n\t\t\tline = line.slice(11);\n\t\t\tset.happiness = +line;\n\t\t} else if (line.startsWith('Pokeball: ')) {\n\t\t\tline = line.slice(10);\n\t\t\tset.pokeball = aggressive ? toID(line) : line;\n\t\t} else if (line.startsWith('Hidden Power: ')) {\n\t\t\tline = line.slice(14);\n\t\t\tset.hpType = aggressive ? toID(line) : line;\n\t\t} else if (line.startsWith('Tera Type: ')) {\n\t\t\tline = line.slice(11);\n\t\t\tset.teraType = aggressive ? line.replace(/[^a-zA-Z0-9]/g, '') : line;\n\t\t} else if (line === 'Gigantamax: Yes') {\n\t\t\tset.gigantamax = true;\n\t\t} else if (line.startsWith('EVs: ')) {\n\t\t\tline = line.slice(5);\n\t\t\tconst evLines = line.split('/');\n\t\t\tset.evs = { hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0 };\n\t\t\tfor (const evLine of evLines) {\n\t\t\t\tconst [statValue, statName] = evLine.trim().split(' ');\n\t\t\t\tconst statid = Dex.stats.getID(statName);\n\t\t\t\tif (!statid) continue;\n\t\t\t\tconst value = parseInt(statValue);\n\t\t\t\tset.evs[statid] = value;\n\t\t\t}\n\t\t} else if (line.startsWith('IVs: ')) {\n\t\t\tline = line.slice(5);\n\t\t\tconst ivLines = line.split('/');\n\t\t\tset.ivs = { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 };\n\t\t\tfor (const ivLine of ivLines) {\n\t\t\t\tconst [statValue, statName] = ivLine.trim().split(' ');\n\t\t\t\tconst statid = Dex.stats.getID(statName);\n\t\t\t\tif (!statid) continue;\n\t\t\t\tlet value = parseInt(statValue);\n\t\t\t\tif (isNaN(value)) value = 31;\n\t\t\t\tset.ivs[statid] = value;\n\t\t\t}\n\t\t} else if (/^[A-Za-z]+ (N|n)ature/.test(line)) {\n\t\t\tlet natureIndex = line.indexOf(' Nature');\n\t\t\tif (natureIndex === -1) natureIndex = line.indexOf(' nature');\n\t\t\tif (natureIndex === -1) return;\n\t\t\tline = line.substr(0, natureIndex);\n\t\t\tif (line !== 'undefined') set.nature = aggressive ? toID(line) : line;\n\t\t} else if (line.startsWith('-') || line.startsWith('~')) {\n\t\t\tline = line.slice(line.charAt(1) === ' ' ? 2 : 1);\n\t\t\tif (line.startsWith('Hidden Power [')) {\n\t\t\t\tconst hpType = line.slice(14, -1);\n\t\t\t\tline = 'Hidden Power ' + hpType;\n\t\t\t\tif (!set.ivs && Dex.types.isName(hpType)) {\n\t\t\t\t\tset.ivs = { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 };\n\t\t\t\t\tconst hpIVs = Dex.types.get(hpType).HPivs || {};\n\t\t\t\t\tfor (const statid in hpIVs) {\n\t\t\t\t\t\tset.ivs[statid as StatID] = hpIVs[statid as StatID]!;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (line === 'Frustration' && set.happiness === undefined) {\n\t\t\t\tset.happiness = 0;\n\t\t\t}\n\t\t\tset.moves.push(line);\n\t\t}\n\t}\n\t/** Accepts a team in any format (JSON, packed, or exported) */\n\timport(buffer: string, aggressive?: boolean): PokemonSet[] | null {\n\t\tconst sanitize = aggressive ? toID : Dex.getName;\n\t\tif (buffer.startsWith('[')) {\n\t\t\ttry {\n\t\t\t\tconst team = JSON.parse(buffer);\n\t\t\t\tif (!Array.isArray(team)) throw new Error(`Team should be an Array but isn't`);\n\t\t\t\tfor (const set of team) {\n\t\t\t\t\tset.name = sanitize(set.name);\n\t\t\t\t\tset.species = sanitize(set.species);\n\t\t\t\t\tset.item = sanitize(set.item);\n\t\t\t\t\tset.ability = sanitize(set.ability);\n\t\t\t\t\tset.gender = sanitize(set.gender);\n\t\t\t\t\tset.nature = sanitize(set.nature);\n\t\t\t\t\tconst evs = { hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0 };\n\t\t\t\t\tif (set.evs) {\n\t\t\t\t\t\tfor (const statid in evs) {\n\t\t\t\t\t\t\tif (typeof set.evs[statid] === 'number') evs[statid as StatID] = set.evs[statid];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tset.evs = evs;\n\t\t\t\t\tconst ivs = { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 };\n\t\t\t\t\tif (set.ivs) {\n\t\t\t\t\t\tfor (const statid in ivs) {\n\t\t\t\t\t\t\tif (typeof set.ivs[statid] === 'number') ivs[statid as StatID] = set.ivs[statid];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tset.ivs = ivs;\n\t\t\t\t\tif (!Array.isArray(set.moves)) {\n\t\t\t\t\t\tset.moves = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tset.moves = set.moves.map(sanitize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn team;\n\t\t\t} catch {}\n\t\t}\n\n\t\tconst lines = buffer.split(\"\\n\");\n\n\t\tconst sets: PokemonSet[] = [];\n\t\tlet curSet: PokemonSet | null = null;\n\n\t\twhile (lines.length && !lines[0]) lines.shift();\n\t\twhile (lines.length && !lines[lines.length - 1]) lines.pop();\n\n\t\tif (lines.length === 1 && lines[0].includes('|')) {\n\t\t\treturn this.unpack(lines[0]);\n\t\t}\n\t\tfor (let line of lines) {\n\t\t\tline = line.trim();\n\t\t\tif (line === '' || line === '---') {\n\t\t\t\tcurSet = null;\n\t\t\t} else if (line.startsWith('===')) {\n\t\t\t\t// team backup format; ignore\n\t\t\t} else if (!curSet) {\n\t\t\t\tcurSet = {\n\t\t\t\t\tname: '', species: '', item: '', ability: '', gender: '',\n\t\t\t\t\tnature: '',\n\t\t\t\t\tevs: { hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0 },\n\t\t\t\t\tivs: { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 },\n\t\t\t\t\tlevel: 100,\n\t\t\t\t\tmoves: [],\n\t\t\t\t};\n\t\t\t\tsets.push(curSet);\n\t\t\t\tthis.parseExportedTeamLine(line, true, curSet, aggressive);\n\t\t\t} else {\n\t\t\t\tthis.parseExportedTeamLine(line, false, curSet, aggressive);\n\t\t\t}\n\t\t}\n\t\treturn sets;\n\t}\n\n\tgetGenerator(format: Format | string, seed: PRNG | PRNGSeed | null = null) {\n\t\tlet TeamGenerator;\n\t\tformat = Dex.formats.get(format);\n\t\tlet mod = format.mod;\n\t\tif (format.mod === 'monkeyspaw') mod = 'gen9';\n\t\tconst formatID = toID(format);\n\t\tif (mod === 'gen9ssb') {\n\t\t\tTeamGenerator = require(`../data/mods/gen9ssb/random-teams`).default;\n\t\t} else if (formatID.includes('gen9babyrandombattle')) {\n\t\t\tTeamGenerator = require(`../data/random-battles/gen9baby/teams`).default;\n\t\t} else if (formatID.includes('gen9randombattle') && format.ruleTable?.has('+pokemontag:cap')) {\n\t\t\tTeamGenerator = require(`../data/random-battles/gen9cap/teams`).default;\n\t\t} else if (formatID.includes('gen9freeforallrandombattle')) {\n\t\t\tTeamGenerator = require(`../data/random-battles/gen9ffa/teams`).default;\n\t\t} else {\n\t\t\tTeamGenerator = require(`../data/random-battles/${mod}/teams`).default;\n\t\t}\n\n\t\treturn new TeamGenerator(format, seed);\n\t}\n\n\tgenerate(format: Format | string, options: PlayerOptions | null = null): PokemonSet[] {\n\t\treturn this.getGenerator(format, options?.seed).getTeam(options);\n\t}\n};\n\nexport default Teams;\n"],"mappings":"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","ignoreList":[]}